(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1153004,      21748]
NotebookOptionsPosition[   1140782,      21553]
NotebookOutlinePosition[   1142475,      21610]
CellTagsIndexPosition[   1142401,      21605]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ERROR ANALYSIS II", "Title",
 CellChangeTimes->{{3.470317922892462*^9, 3.470317941063523*^9}, {
  3.617813700260653*^9, 3.617813733123275*^9}, {3.620714225911891*^9, 
  3.6207142293746243`*^9}},ExpressionUUID->"a49f06ef-c116-4c0f-96a8-\
c2f5ad984731"],

Cell["Lab Report", "Subtitle",
 CellChangeTimes->{{3.470317947797596*^9, 3.470317963718758*^9}, {
  3.617813739250799*^9, 
  3.617813743715366*^9}},ExpressionUUID->"c44a4990-5ee4-4ef8-b55d-\
c8deb9f7197c"],

Cell["\<\
Names: Aryan Malhotra
Section: H4
Date: 10/2/2024\
\>", "Subsubtitle",
 CellChangeTimes->{{3.4703183025473275`*^9, 3.470318315218635*^9}, {
  3.617813750219903*^9, 3.617813788066779*^9}, {3.617814501431238*^9, 
  3.6178145019899683`*^9}, {3.6178258320296288`*^9, 3.617825834094742*^9}, {
  3.6180812205761147`*^9, 3.618081228295164*^9}, {3.6840607224033003`*^9, 
  3.684060746751343*^9}, {3.6845561539045*^9, 3.6845561633480864`*^9}, {
  3.9368838495043793`*^9, 
  3.936883863960869*^9}},ExpressionUUID->"08859949-eae7-488d-9fbe-\
380272ae27d3"],

Cell[CellGroupData[{

Cell["Purpose", "Section",
 CellChangeTimes->{{3.4703170890792065`*^9, 3.4703170995317297`*^9}, {
  3.617830119877421*^9, 3.617830126003809*^9}, {3.618216442944919*^9, 
  3.618216445042902*^9}},ExpressionUUID->"d7d9b347-d6d3-4dad-aa5c-\
ee3b5656c288"],

Cell["\<\
To understand the nature of the Gaussian and Poisson distribution functions \
and their relationship to error analysis. \
\>", "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618216484688562*^9, 3.618216487826787*^9}, {
   3.618216553468244*^9, 3.618216634088562*^9}, {3.620405009145257*^9, 
   3.620405036620558*^9}, {3.6204050745159817`*^9, 
   3.620405087997881*^9}},ExpressionUUID->"64434799-8d41-4b80-aebc-\
de3bc8fe5f83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.4703170890792065`*^9, 3.4703170995317297`*^9}, {
  3.617830119877421*^9, 
  3.617830126003809*^9}},ExpressionUUID->"285c2c44-2a31-4371-b2da-\
4607d58acc59"],

Cell["\<\
Often, repeated measurements of a physical quantity will not each give the \
same value. Rather, there will be a distribution of measured values about \
some central value. Here we will consider two of the important types of \
distributions.

First, there may be a single true value for the quantity being measured, but \
random measuring errors due to the apparatus or techniques will cause the \
result to vary. In principle, these random errors can be reduced by improving \
the apparatus or techniques, such that the width of the distribution of \
measured values will decrease. The measured values in this case usually form \
a continuous distribution but in this lab we will work with discrete values \
for the measured variable.

The second type of distribution arises when the measurement process has \
inherent statistical fluctuations that cannot be reduced by improving \
techniques. For example, in the decay of a radioactive sample, we can only \
give the probability that each nucleus will decay within a given time \
interval. Even if the counter works perfectly, the number counted for the \
same time interval will vary. The measurements for this second case have \
discrete values, e.g. counts of decays.

For the first case the distribution of measured values about the mean is \
frequently described by a bell shaped curve called the Normal or Gaussian \
distribution which is characterized by two parameters -- the mean which gives \
the location of the peak of the distribution and the standard deviation which \
gives the width of the distribution. 
For the second case of statistical fluctuations such as nuclear decay, the \
distribution about the mean is given by the Poisson distribution which is \
characterized by one parameter \[Dash] the mean. If the mean number decaying \
per counting time interval is large compared to the size of the fluctuations, \
the Poisson distribution reduces to a Gaussian distribution. Interestingly, \
even for a mean as small as 10 the Poisson distribution is very well \
approximated by a Gaussian distribution.
\
\>", "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 3.6181555641970863`*^9}, 
   3.6184969017799253`*^9, {3.6185333416288633`*^9, 3.6185333424421663`*^9}, {
   3.620405349595461*^9, 3.620405462359543*^9}, 3.620577136822516*^9, 
   3.6209496251309547`*^9, {3.6840607685318604`*^9, 3.684060799412038*^9}, 
   3.684060835388625*^9, {3.684060866665337*^9, 
   3.684060871576503*^9}},ExpressionUUID->"9b1fa4b6-065b-45a8-84ad-\
7c2c6841ad35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Readings", "Section",
 CellChangeTimes->{{3.4703170890792065`*^9, 3.4703170995317297`*^9}, {
  3.617830119877421*^9, 3.617830126003809*^9}, {3.618216442944919*^9, 
  3.618216445042902*^9}, {3.6182166511665373`*^9, 
  3.6182166538005333`*^9}},ExpressionUUID->"70864b78-d0fb-4d88-80e5-\
6528958666c6"],

Cell[TextData[{
 "Books:\nJohn R. Taylor, \[OpenCurlyDoubleQuote]An Introduction to Data \
Analysis\[CloseCurlyDoubleQuote], University Science Books. ",
 ButtonBox["Chapters 10 and 11",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.physics.rutgers.edu/ugrad/275/Books/Taylor_Ch10-11.pdf"],
     None},
  ButtonNote->
   "https://www.physics.rutgers.edu/ugrad/275/Books/Taylor_Ch10-11.pdf"],
 ", and ",
 ButtonBox["Chapter 3",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.physics.rutgers.edu/ugrad/275/Books/Taylor_Ch3_\
ErrorPropagation.pdf"], None},
  ButtonNote->
   "https://www.physics.rutgers.edu/ugrad/275/Books/Taylor_Ch3_\
ErrorPropagation.pdf"],
 ".\n\nYou can read about Cs-137 and how it is used for radioactive dating in \
these Wiki pages,\n",
 ButtonBox["Caesium-137",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Caesium-137"], None},
  ButtonNote->"http://en.wikipedia.org/wiki/Caesium-137"],
 ", dating ",
 ButtonBox["Jefferson wine bottles",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://en.wikipedia.org/wiki/Hardy_Rodenstock#Controversy_over_\
authenticity_of_Thomas_Jefferson_wine_bottles"], None},
  ButtonNote->
   "http://en.wikipedia.org/wiki/Hardy_Rodenstock#Controversy_over_\
authenticity_of_Thomas_Jefferson_wine_bottles"],
 ".\nWe will use Cs-137 sample in today\[CloseCurlyQuote]s lab."
}], "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618216484688562*^9, 3.618216487826787*^9}, {
   3.618216553468244*^9, 3.618216634088562*^9}, 3.618216678407996*^9, {
   3.6182168450952787`*^9, 3.618216846137941*^9}, {3.618216914555161*^9, 
   3.618217002316224*^9}, {3.618217075766861*^9, 3.61821707577302*^9}, {
   3.618217149402252*^9, 3.618217149404662*^9}, 3.618217191625103*^9, {
   3.6182172373845787`*^9, 3.618217251072379*^9}, {3.618217291248473*^9, 
   3.618217332069393*^9}, {3.618217362875386*^9, 3.6182174143125*^9}, {
   3.618217454769185*^9, 3.618217454770527*^9}, {3.6182175035344753`*^9, 
   3.618217535878928*^9}, {3.618217571305245*^9, 3.618217586278577*^9}, 
   3.6182176316627073`*^9, {3.618217665914071*^9, 3.6182176845712*^9}, {
   3.6182177426202793`*^9, 3.618217744443522*^9}, {3.618217829315007*^9, 
   3.618217873230332*^9}, {3.618218064916624*^9, 3.618218140746632*^9}, {
   3.618218171251849*^9, 3.618218206985982*^9}, {3.618219275221793*^9, 
   3.618219281420186*^9}, {3.618219316596388*^9, 3.618219316597761*^9}, {
   3.618219374042103*^9, 3.618219418227682*^9}, {3.618219451528736*^9, 
   3.618219451529965*^9}, {3.618238806931595*^9, 3.6182388473587027`*^9}, {
   3.618239289723092*^9, 3.61823936676928*^9}, {3.6184163273742323`*^9, 
   3.6184163496518784`*^9}, {3.618416483048416*^9, 3.618416495317245*^9}, {
   3.6184165790618896`*^9, 3.6184165844271603`*^9}, {3.6184283651994743`*^9, 
   3.618428367846307*^9}, {3.618428607810008*^9, 3.61842861156568*^9}, 
   3.618482451365962*^9, {3.6204051655263577`*^9, 3.620405204645174*^9}, {
   3.620405279700082*^9, 3.620405279701376*^9}, {3.6205762536103077`*^9, 
   3.620576254510889*^9}, {3.620723558884179*^9, 3.620723574825132*^9}, {
   3.6207236458859587`*^9, 3.6207236629219093`*^9}, {3.620948457379435*^9, 
   3.620948481043756*^9}, {3.6209486049436893`*^9, 3.620948632528838*^9}, 
   3.620949645303917*^9, 3.6209497538034153`*^9, {3.65251806323137*^9, 
   3.652518083871513*^9}, {3.6840611948566217`*^9, 3.684061195574078*^9}, {
   3.6840612650580587`*^9, 3.684061336604083*^9}, {3.68406140734558*^9, 
   3.6840615343391533`*^9}, {3.9051108381646605`*^9, 
   3.9051108566489153`*^9}, {3.905110899178588*^9, 3.9051109113175893`*^9}, 
   3.9051109470453854`*^9},ExpressionUUID->"70eab26e-ffdf-48fd-9589-\
836fb1b242dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Theory & Concepts in Short", "Section",
 CellChangeTimes->{{3.618496962886962*^9, 3.618496994083799*^9}, {
   3.618533764257103*^9, 3.618533775179304*^9}, 3.618537812784609*^9, 
   3.618537861369917*^9, {3.618537904024625*^9, 3.618537905174843*^9}, {
   3.618537949625876*^9, 3.618537968252553*^9}, {3.618727134493627*^9, 
   3.6187271411960573`*^9}, 
   3.684076764367231*^9},ExpressionUUID->"f5fce434-c87d-4978-97c2-\
30c5f3e793a0"],

Cell["A. Statistical Definitions", "Subsection",
 CellChangeTimes->{{3.620571820748015*^9, 
  3.620571829628316*^9}},ExpressionUUID->"f337886e-8ea3-4062-a935-\
7667bbdf12e6"],

Cell[TextData[{
 "Your textbook gives a thorough discussion of distribution functions. Here \
we will only give a brief summary of some important points. The mean and \
variance of a parent distribution in random variable x are defined by,\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
T0ruuNumVQVQEJKiChKFbjdoWZbpUjqeQ9TTEYeItlNhlwV7cyJ2H8SyitK3
PnkvP3dwemx0TvwFecmu8wd4r5k0zwelIz9DhKIScvcyWDNEnx9KcgQiWICU
StS6eeLF2bHmIff9fR0xsTTyE0XxpBkmAhn5qXgnppotq17IHhCVYo8bYMv6
tXHYyGvur6/1g6YoSYmdhUKyOnR0g6TIeNNKzkBQualgzYqhrug0U3+HxZo9
9Ir1xZXa1ACF1uUdAY1PToAeWjVCgIpkBuoO7Fu78p3pf5qcPTSzv9mQ4k1P
jokeZO7nNMVa00f98Zn3tVb60w5MNQrUdGlUE6T1bAx0IpT7N78x3GiwZ4x/
Z6cMVBM4GEnPIZo/Ijg52iF9gUSzKti+eNrE/PioFJepv2tI/+RrH5/5JrR4
C4xAi/M6SxR06DhLoXXyQAkbg+T2upJNI9NtacY+qQ6b0WTPH3H1PX9+6rbJ
D941acrku+65787b7/3D5HvuuvvuO++adPc9f5j0e/zz9/dMwjvxz1OyTZ00
ZcTQfKuxb6IxLsNud5kM8ZZoiyfRYrDl2Bxphr7Jic5e1rx575XgpR1Sfob7
eQ3prqINUArp8KIFPyJSy4v+8cTQOGP2qPtKEMLU17pnw/bt2/1+zbYRBM0I
PFkLp72dbYfjeebVRydlx0Ulu629bbnDxs/YdZCnXQcSEttUidep5iwADcpF
Mo/Ydz65GN1/KziqsSYxSPJJtaV3jclPir0gyZrgcLgsjhSTMw3/tNu9Tnui
2+ZKtDmc9tO7ec3eRLsl0RHntRlTLRb80+4yW5yJtoTEdKM9x2kyWYwx6SM/
LGhvFKmZcbrRTFopw/2GUEiDiB6RH3H75t02Ore/5YZ75+5DqNzPfvba30/h
iVWoDCVWDct+8vLsQdYLPC7ztXc9uGU/D7FpqMpmsWMXJKqPgqDX8J1hdEvI
Rh6fuSs6u8DSG6IcZMuL5j1wa661V4YjIdHlMTqSjY5Uiz3JYXO6rVa31Y4f
2G2JPR3s6+rh5jXiW7fVZY/32BK8ZjMmPbvDZHG4kx1ZKQmuJGOMyWGLTh+1
8RAtKfkZXCgquxTWKiHN3MSq8QdqC6/3WPLjPYtXfftDED363Hyx6sApPLEg
t6jYZeXotG5/ZcmGnTsLWgUorWexNUNibJLKhCKzbnWcadB0QKRu8+SKHP5b
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
     "], {{0, 161}, {377, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{125.25, Automatic},
   ImageSizeRaw->{377, 161},
   PlotRange->{{0, 377}, {0, 161}}]],ExpressionUUID->
  "21b8f801-d9fa-41f8-b24e-c987b82d438c"],
 ",\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
5TYjH5TV6yj4JpvCPDmLVBonAPJ/6zbMa+luSvv6gyttk2viN9z+5Ia9v0Zn
d9gzqUpopgytS1M6zj3r1MqwEA/5bCWjxlZWsk4n67JHA8L5V/xp9ba2FIFa
1bSK6lI2ohGOQu4UhKVpRbj5LtBww42hqmLWJDp0QgU5R4G2m0lkNqc3L5gz
JVRl33cs54qwHOPhPR6/k/Wy/hDnr7a5q0/+2RWdGSSTclIKKU+jQ3GpDG10
Y+nmg9RuNKriQBRMzu2Lx6On8WTXVFFXMp+++uQUfoyvvISv/tFTq4dyOwty
Ua1bMADWFI1pewPtFrihing34uT3Bx841mzEFrxTM/XagBcjaSgqfGXKLZ8t
mD6+UgiPe3tJ496fd6OkYd3hwZNa7OCG2rF93e9+ew7jLg8JTE006rXbBY8n
KnCOMSNjfsbvqz3vsht2GKiTxgzgO5I26CIkLwA0ADdQJcTIFuHmW0/DDTe6
ZfdSiE4tWedQkdGJ9ObP3nt8Rqw85tovxnlYF894oryPKbM7QtGxDD/OzU76
7RX3pBU4KmuBBNZuRBWsvFah58HDTU67IRdENA88mDQyRVEixmex+aozjq7D
44nNePSTQXsvFbKO6JlVUhE0jzUYdi2gwWqWrBTCjaprOtF0+qlmUISbr4Pw
nW5r7zRz0reqWTiSK8QEcKPragHW9A83pNNABumSbpW2QKR2rGwJ+FLr8/ff
IQTrzr/pkS7Y8xsQCU3EPLKIkJhKNL7w3GOsp2zun29o2LzJkGiBXP0///j7
lPrKIFvBlHLByqn3PPduK+29q5pUcDRN2qyK1AYxNAo3UhFuvvU03HCj5uEG
ppMFN7BuZZRqQHrDe0/fVsPtW8U7Am6fzxP3B7hgMFhe7vEyNR5+gi9y8B33
Py+RIZJmNlpSThCObpg5cXOQl9sDbsjyJ3o8mPgMXROR1PLRE38b7/OOcVff
/UbTYM9P0w0UI1/r0zBVRZezhfk4UjpDsSPRmdzR0myQaNA8N0MFdRgQKsLN
10mdnZ3Nzc35P2XFsoAZlpwA+KKbiiinCxCnx+PSjJRhEtEi56xToV6nAR0x
jC7UseWo6T+cMOvMFZ2kPqfWPPBY9grCq1YTdU0lsQF6aseO9ePHx//9r4dz
Lhi4RrkrgeTE5rULp44PTvDE7LbwiZf8sYlqdqIE+p5k9QeBhQxmbTC267vS
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
v36zx9teiGO5Vg3NNDSrVI7WijLbV73/8tSqUMBl81aUxbGWzAocH/CFokf9
5MT7HvrngqWrV69vaGzLKkR2wqzmz5ceMc49Ymb9Qc+98PkXDaixo3VH+5od
bRsbticbt4qt2zoSTY0dzdu2b29oaZPXb2ztmT6TH5LWe1bsPriRM8kXn33q
9nm33vu3u+fNmzd37tw777xz3u13DjbU4bZbb8m//+ut8/A297Y78PbKG2/n
jWn5wBKa3mINZIhwI5Kqroas0EoiaQtu4GeanrzxpIHgBqnUbJgiNhkSl6w1
33z2JN7rifMRry1YwlTNOv387SIS0yqUnwFHspFOp6kpVc40o+y2a48/pDbs
ZDl/KTepzD/ziBPPxVM4kU1StVRXkZyB9B9ItcErQ2l9/c5rPJAuxWJ9djRT
/4f/fryRwgr0QDeIgEGihQnckCe1t2clD4oK4UZWqN2AIA6wbuqmF5HWsfLd
52dW82HbASGvOxyp2t8eKA9OCkyYvWJTp2VrwIxdV9OSOgTTUjc6GBCEo+XL
7IBwmzbkLFIyFx43c5L9f2oEZzkTneApsXO1+9Uct7CFWLKIWzOHL/3BjdkF
cGOCOwFBfXI8YSDni8xqEalNF86ZdGDA5fX4bf6Djvv1rW1SmuYYf/7Z5sN/
ePi2L9YRvpc0tZQsZU0yE0QVErs0aDyX2A2PoTcNY+hUX+qNJpZqg8wCv3t3
8AZ8utpo33D2SSfVuStqHAf48byIH/P4h51gQUNdWZSWUC75QIUsLOLrkZH8
BepaftaxM2s8FdVYSfHWVVQe8/zyDshw0EA5tppBy1D5y4Ibk8ANdAprlrd+
8MOIO+pyeb1uDDdexufyjJ04+1drvzraF+gIhY4zA55zLrbHUHPyP+Y827Yu
fn1i0BVylMVYPuqL+rgI1vQvuOSydxd8SrMw2jIK9blkVDAsilKL1PLWyQfz
4wOVk8f/7J0PG4hgndZIJRWrnpZJkjV0aGRIQxosbDdy5TV6BBd9pcstoB7a
zSW/+bXX4+I5BpQsl8vv93O8jxsk4cPz71lOwJuXx7KB/9wLLsrnmNDfhtBx
QxsS3NT0hRs6gU0JZFWVhl9lN81/6CKHUNU/3OgonUoUGtMwPL185y/9HBt0
+7B2UyHUPb1gdSp3kzDcpGhSIYEbVcTiU/Pr867ylu8vCH67MO779tor5z7Y
RXrKaMTpplu3W83KSaweYYlr2ZO38/5IwO2JMP4yYcKpNz7SYDkO8nBjEO95
fsV98xt29SPOWRPbtKov6hbiQIAxQRyl47m7b5wZKIs6RuGVXhKYum909uML
GqF0FRZJlQ4kNiMVtNPmwQ+nAG4ymMPouU4HJIsHb6LYsmV2HTPe9b2o125n
o+M8Y2xsTfmk05Z20bwMElaA+ocbMgkzZi5FCEkyJI0qWcxNQCFS0khtfuHO
a+oc+0f5oIMZF53008Y0BM00dWR/9rOzPvl4kZhIEPdwhjx6WB6qURhEt9u1
my9xtQyNdmJ30a0qIr0LJdNV06dgO/77o7Y179UKkSo3X+1xODyh6KzzPkvD
DVLNDgUlQSCjWROGQas8QGiBtjqx+tkDgxhrPMIYxhc6pOrwi9epEEGIDAhZ
T9FoEz0tkxRFZFhwQ+5AO2pddsw4rFHbMD/kgliVCLo9tf76Y9/56s6bAeCm
G2voQgDfooS52cZFLx4YtnlHf398NBryhgN8Tf24Q96bv0wmV5w0FNnKiIcC
URptpgChnus+ePrWULnNMTo+8cATPlr8WZcqUu+MSf1lBG7AaUXgXpasxD9q
c9B0abjhJpPouOLSi0NBv9/H+3yAMoIguD3MwMAyOLi58c9zdSLT0n4rKFcG
f/BwM7IbbmCHHNxYwpKU990gcfOLfz3dghuHqy/cgMZqpU3Q6d703K2nC4yX
tzHxQL03Ovk/7y8Fa74OjYXwwFqzwPAIMMkkoKjpg/tuiPCMx+H0RerLg1PO
uur2NDmTrIPcDKCTpRVviM6itXQselYIxANOZ5T1uaNTj/jtnU20BzoUxtE0
q4iAxdDIk/rmpw0OADcW6BCbKhYpIWyAduqRk1jBET9fMMNfWs3YhGB1WeWs
Gx9fuM16cDLKNmCmjZRU2oDg6sFSAdxAqqaJrGIFZI1D7EHDig+nCCV17v0D
Lgfrq8ISNdZu/IdfuCpDVE0DSuOp9Ez9wo0u4kmeVKnGZIBFVbfkB5gJUvPG
d/471vb9sT6f2xu38VPfWvYZvq6///vZK67+oyRSE4qKNW5JTGIgVlSTroOM
rGTE9O5uINIXa74qb+l3K6TcxDYsxwwprUyXu9IXbsAZ887L910frPBWeuKY
35YxNef++YkmmiMDC580QFMRNYplAUsQqDj6qpfvvbCeGVXl8jElMSZ8+MV3
vAZrDdyFXUiXFav1b1aGR4MfXJK4AukQ21Hq89OmV2F9ivM42YBP4IOMt9oV
+9E/Fw7aV9j/PSp4m7dfkRuigguKFCQxs52pHVuPmVUX8IyM+5gQF3LbgzOn
H7dpSxbjRJJE4JOyGgqpjUI0FHw9cD7MhJq0llVHTRlfxVUy7qr6KUduapUx
NitkN5JwLlkTv6B7gklbc2L+qQ073OCtq625YduW5h3bm5qaGhsbmzG1tDUP
klqam/LvdzS34m17Szvetm6Hnt2KCrpNPhH4K8DNTwvgJm2SlW1CHg3WLmTQ
biD5pvHNu88BuPHy/cCNNaclDfgbkbbTm96491yW8cSFKOeMuEIT//PhshSy
VH5wMNA7b83vJFIaPn/ufsHDxH1+p4sd4xt3+lV3JMBrA8NSiIJDUhllRU5D
Po7Rmlj2TDBYhflY2OOpEMZO/vkNWLtJQ388qO6idBfjyq9KbcA1vLu24aaB
4UbPt+yGrE8ywzHcSE2odf0FJ86u8bldDrcrOA6DeHO+GI5GkrDkLvKwSeLV
IEnphhvarA11o7zcgZSW5W8+PoEbVe0t4R1OQYhjuHEFx4875brPdRqfYOS6
RnXDjYkKtRuwD2c0OnmhORyGG13VSAVyiE/Ifj5/dtwRqRgleMJCdMa/31r4
8oI11ZMPxQoOyEkmqapkUqZr9VmQiEWAyMC7UfzoF2uGwFt6+2rza7e/KWb0
hBuLoZk9VZucw5jwpfZXfztnfKXTFeXHVTjHVQQPeWlZayuBG5NmwdDnRwwP
IiiTiESdLbvw2Fi9a5+I3ccxB1eEj311jdRGJEekphFUMiRdfZFMqqUZkPwF
cZJkZGYCSZvP+WFtvauEcdvcPMuxfsYVKw/M+Msrnw/hRve+Xf3BjW5qhql0
5wVIYOm97pLzfHx5OMDYKxzh8LhpB/1k/WYZ42O6u5iJagXymZYILdFQCCxK
iV13X3txDWv3swEXN/GU825pI2WgJIWEPGN2ZKoFOma+dUo/aXqFz3ewtBO4
6RuZNqT2c/2HChTOQITyZcCHBDdCVV+4Mc28kki0G00FX+EdZzqEeP9wo9Np
LlthqApmBY0v33mmwLMBYkxzBic89clnidxNIt6F3K/Aqu/E+3/2zN0+JhBy
u/0cO1qoOe2GB1pzeYiKFT1FBHLIJMWTubV96RNBf3XYZY+y7jKuZtIZf9hs
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
xSu4M/NQ2i8JzUFP9GppME2FG6jcQUlJUJUIN+5e8eK91/qz0r3Wvnn9zlm0
tRHEJGnTLqT3ksmk005Hq4k99AELSIq+/+CUUovl0uv+/mNdDNIzZF0ycLpx
yKmBSjDSv2gfuCNrCDi/EvUbQYKsRmETHIo0oz/BcrS9bWfCTTJuhokuWQJF
Q5RMEZiYwm95/v6bPXriGA8qO3nSooq9+IiyNLAhq4rcVP/hyJQ87RqdMxiG
oXtm6u6X6tckRys7P/ltq631dw2BJmTUYJEkMtFYCMhUvEjDaJL2bxz6z8Lf
x7wnYo0cl/iwJIO0JrWXo4xqEGEjcnKEiYtEObc8JydBp+VoXzANSuhTtjg6
V63AlzqJqZBEgLsVFqdi0/4znBxhWYFmYdhMQWFrald8fmaxNZB+dI7F6LZ5
rI6g1Z7rsPs9NleOxVxg1ntstjYPAkvJgBjG01z0aG8wjcbi9n8dQAdcG6fq
19i95HA6fDc8MoNq0Cdg62EBbmQNbqQWcEN9WMyGxLAEnqEc49o9Pz9960X5
uuPtdn/5+CtXNylVxCSRGKCNcMqBoP837+PvHNDAgpwz36DEQfaqFsJruFYx
W8OAEYA2PBrlsSNvfxSThVrkZOUGlMpUK2ypxJmINHstYN3u53e/iVafI5ZB
dUVJZGMAHHwiyscj5IsfPnw8x5plC5SWnnLZ6p3hGHygqmBGzyGZ1sPzPOLg
u2t01qBPK91OFc0RoD8iX1BPhzzIDNNi06bPe0eAhg5M9fMJCItBEjwlmJZg
VAU5XqtAB6dbRSABpWhBLo/8IpSBaOUPakdOeGdUiu1VY9JaM0zacJnjxf0Y
0MkytAOcZlsXSOcqFXB/c6NLhebUiNyBRpwyi1heiTcKO9ZPGlmU0zOtv8fs
MRmtFpfRGtBbgxaLx2m2+o26XEMfh8Wcclg7/bBZiP9ipQe+Ynaa4XBZbE6r
jTg4dis5XHabh8LNc+8vbVKrPySZqgdIUmqCDm9nc5eQOC0SEZpAmBjpSaDG
1rTlrSeu8liOsecUDJkwZV01urWN9Qqzp81bcxD4bu+gJTZiqIoCSiUn1xFv
h0WQgeImPgKCKwINWsWPSLjRlpeA1TfkQROSvWGTqhswOgo32t9vHShgohGE
DE7VjRS5D955c7Cue57fM+SCicsboIsV38SSqePU9uAJ2gKPPK2Cmsyt6pRJ
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
ocvyQ3+oVvbfO/fy+pKRJWU151RefNOPHkzhQiamsBGBPjwZlNjhemiXyO5b
/J2Lm0vGxsqbRk6+bvGaN1Ak7mac4B8X3HfrnPkdXWCO6lH0Ru3PN4MSzWeS
qXHBYBcpdD/et2NWS8P111zdtv+wn+dNgSN+EHhzqkUOpyKXUEWy4sEYkUWT
0/nRovvurqksrS0dUxcfO3nKjLn/tKxDbwrnbxyVFSGWWAYGBgYGA0EnR/Os
pBgWDdbl69y+LTfWjawrPKdkYvPoxhv+c8v7aFODTqcM6giGpU1KPcNJj/jd
1vn1o5sKRsWqp59dd8N/vfEhlEDdB/9l6eO1FzW3HTxKI+2ZH/Rjm76xDdfH
EOETtK72048/tKChurQ8Xiqv2O1FkgaY42MfDMuxKJVhUK7hnMpDvZBc43nO
8gfvOvDBLskm61cvT449a3y85raFq9r1qbSmTovWQt8k0xsYGBgMBnwm+7B9
w2HYnYvo5vCvnru0ECLSxpY3XjDzO+904djDz+FknILSOFoggvf5zPL3bLq2
eERL8ZiiZNOY+m8/+dq+VMb52YN31Uxq3rn3Q48Jy4fKwfaYoizd5/rcdAPT
euYJkrn7r7/bUBErL0ssXrbSVi4QAolAVmrQ5YLF2qz6ic9W3cjXVNZwPA2N
Mp7d+8ZLUyeWFtc0zF/09MfaI06E+W4kXMUdfCBlYGBg8FWHrm5Opht3zaLb
ZxWPaKos+pOCmqlzF7xnqdg1S4/IYSvHYtomALpJnTs2X1XytZmJcReMLy+o
v250zewJRfFptfHNv3wrY0Mjy2O6ugmI0onh5c+UbiilUTIv+PXImz/y23ev
nTV99qWzDnRk5F1l8HIiwCE+0k1vAN0/SSKnODhXSTwctQfIPuC6IM+QOrb3
dUm+RTVNc+5fcyiiG9GnvnbhMHuqBgYGBoMAV2ZUM80KtTMb1Dt3zf1m8/gR
FRNGJepn/WjJ2nZFTH5KP2YppGzLb1P2NfC8TR+ed/HExgnn1lZfeF6sYVSi
sb55Zuu213uynpra5zzOotzqM2im+b4ejPTPf3ddlwW20ozBUgyH4VKOiTSP
dm0CC/ZA/bQA12ylHBu4rlGbQYpu8ltC8AI85WBh5/ieLUg3zbcufOZgZBYn
wmhJFnJ83Py8yMDAwMDgJOjpOXjLWCixws9AtkFKkC7wBFWhdPL9vE8lK0VS
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
j2FgMDT8P6EgFcQ=
     "], {{0, 160}, {549, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{182.25, Automatic},
   ImageSizeRaw->{549, 160},
   PlotRange->{{0, 549}, {0, 160}}]],ExpressionUUID->
  "2528f1f7-edee-4b57-936b-c609bf6ce37c"],
 "."
}], "Text",
 CellChangeTimes->{{3.6210721551168537`*^9, 3.621072155118136*^9}, 
   3.62107219266537*^9, {3.621079049012739*^9, 3.621079186638283*^9}, {
   3.621079305118106*^9, 3.621079330919701*^9}, {3.6840615466839857`*^9, 
   3.684061561427414*^9}, {3.6840625271236963`*^9, 
   3.684062599351644*^9}},ExpressionUUID->"bf73bf6b-3b0a-47b4-af1b-\
45859d1ac314"],

Cell[TextData[{
 "From a limited set of measurements {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "d9f14157-51af-4ee0-97d5-655f47f20d4e"],
 "} (n is not infinite) we can estimate \[Mu] from the average value of {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "5f1dd738-9c96-4873-b434-ec384ef5ada8"],
 "}. Likewise, the variance is estimated from the \
\[OpenCurlyDoubleQuote]sample\[CloseCurlyDoubleQuote] of measurements and \
also uses the average value of the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "583e86c6-bc65-4ed0-bbba-5af6950354ff"],
 ".\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Mu]", "\[TildeTilde]", " ", 
     OverscriptBox["\[Mu]", "^"]}], " ", "=", " ", 
    RowBox[{
     OverscriptBox["x", "_"], "=", " ", 
     RowBox[{
      FractionBox["1", "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["x", "i"]}]}]}]}], TraditionalForm]],
  FontSize->18,ExpressionUUID->"045c620a-48e0-4a55-b3fc-4b0350e9a528"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Sigma]", "2"], "\[TildeTilde]", " ", 
      SuperscriptBox[
       OverscriptBox["\[Sigma]", "^"], "2"]}], "=", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Sigma]", "x"], "2"], "=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"N", "-", "1"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "N"], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["x", "i"], "-", 
           OverscriptBox["x", "_"]}], ")"}], "2"]}]}]}]}],
    FontSize->18], TraditionalForm]],ExpressionUUID->
  "5122017e-5880-412d-869c-2b4486ab4448"],
 "."
}], "Text",
 CellChangeTimes->{{3.6210721551168537`*^9, 3.621072155118136*^9}, 
   3.62107219266537*^9, 3.6210722585779247`*^9, {3.621079512011043*^9, 
   3.621079532797391*^9}, {3.6210795773272753`*^9, 3.6210795794929123`*^9}, {
   3.6840621920614023`*^9, 
   3.6840625025214167`*^9}},ExpressionUUID->"257f13f4-c30e-4673-8ec4-\
a9d981b3feb3"],

Cell[TextData[{
 "The factor (N-1) gives a better approximation of the variance than n \
because we are using only an estimate of \[Mu] rather than its actual value. \
The square root of the variance is called the standard deviation.\n\nFor a \
Gaussian distribution there is 68% chance that a single measurement will fall \
between \[Mu]\[Minus]\[Sigma] and \[Mu]+\[Sigma]. There is a 95.4% chance \
that it will fall within 2\[Sigma] of \[Mu] and a 99.7% chance that it will \
fall within 3\[Sigma] of \[Mu] .\n\t\nNext we would like to know how close \
our estimate of \[Mu] is to the true value, i.e. how close ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Mu]", "^"], "=", 
    OverscriptBox["x", "_"]}], TraditionalForm]],ExpressionUUID->
  "fbafd055-58b4-47c5-93b1-31a67c029655"],
 " is to \[Mu].\nThis is not given by ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],ExpressionUUID->
  "8ae8945b-7115-45db-9bc2-e31dbf1d8de9"],
 ", which is characteristic of the parent distribution (x), but rather by,\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", 
    OverscriptBox["x", "_"]], TraditionalForm]],ExpressionUUID->
  "b000cb22-885b-40c0-aaa0-7cab3b54fd74"],
 "= ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]],ExpressionUUID->
  "7005f87e-c5b5-4482-844d-cf562a0ca422"],
 "/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "76f303f7-dae2-4f5c-ae9b-8845cff03890"],
 "\nwhere N is the number of measurements of the sample; this is \
characteristic of the distribution of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]],ExpressionUUID->
  "4cdadca3-831e-4b79-86d0-76ccc4e2aef1"],
 ". Though the distribution of x can be anything, the distribution of ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "_"], TraditionalForm]],ExpressionUUID->
  "9170d214-6a80-4669-93da-8e24efc03775"],
 " almost always becomes a Gaussian, when N gets large (central limit \
theorem).\nAbove relation shows that as more measurements are made the \
uncertainty of the estimate of the mean decreases, but only as the square \
root of the number of measurements."
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 31},
 CellChangeTimes->{
  3.61853797226859*^9, {3.6185679093696957`*^9, 3.618567913364565*^9}, 
   3.618567960398531*^9, {3.618568003517424*^9, 3.618568034125757*^9}, {
   3.618571751470327*^9, 3.618571752163085*^9}, {3.618571842547223*^9, 
   3.618571939420629*^9}, 3.6185720314454803`*^9, {3.618572091722036*^9, 
   3.6185721152674017`*^9}, {3.6185721646538363`*^9, 3.618572166482127*^9}, {
   3.6185722071801434`*^9, 3.6185722096342077`*^9}, 3.618726956006709*^9, {
   3.620405513297187*^9, 3.6204055337179403`*^9}, {3.620405577270093*^9, 
   3.620405781899827*^9}, {3.6204058187663193`*^9, 3.620405910253763*^9}, {
   3.620405946469201*^9, 3.6204062047126913`*^9}, {3.620406245589471*^9, 
   3.6204063092994127`*^9}, {3.620406341793994*^9, 3.62040647028685*^9}, {
   3.620406526840576*^9, 3.620406558166239*^9}, {3.6204065909811373`*^9, 
   3.620406641615405*^9}, {3.620472199839266*^9, 3.6204722026402397`*^9}, 
   3.620571836310113*^9, 3.62057191808162*^9, 3.620571950006934*^9, {
   3.620571992323265*^9, 3.6205720233900213`*^9}, {3.620572083493639*^9, 
   3.62057209935709*^9}, 3.6205771413451357`*^9, {3.620948655673278*^9, 
   3.6209486765479193`*^9}, {3.620949377167245*^9, 3.6209493866489687`*^9}, {
   3.6209494322598047`*^9, 3.620949432259886*^9}, {3.620949482746422*^9, 
   3.620949512023587*^9}, {3.620949547784378*^9, 3.620949558614156*^9}, 
   3.6209496507760553`*^9, {3.621007088108741*^9, 3.621007089406007*^9}, {
   3.621007312098473*^9, 3.621007367149173*^9}, {3.621007407624724*^9, 
   3.621007489016152*^9}, {3.6210075328060904`*^9, 3.621007597948159*^9}, {
   3.621007662990673*^9, 3.621007729537421*^9}, {3.621010249152451*^9, 
   3.621010338253169*^9}, {3.621071816622184*^9, 3.6210718406404457`*^9}, 
   3.621072230625161*^9, {3.621072924229904*^9, 3.6210729303793993`*^9}, {
   3.6840616166617537`*^9, 3.68406182564867*^9}, {3.684061870219434*^9, 
   3.6840620253777313`*^9}, {3.6840620573768587`*^9, 
   3.6840621149192247`*^9}, {3.684074845557673*^9, 
   3.684074880636302*^9}},ExpressionUUID->"fead4ec8-851f-4047-8489-\
f0f1d0106257"]
}, Open  ]],

Cell[CellGroupData[{

Cell["B. Distribution Functions", "Subsection",
 CellChangeTimes->{{3.620571820748015*^9, 3.620571829628316*^9}, 
   3.6205719751540737`*^9},ExpressionUUID->"fd1eceeb-e4c7-477f-a8c2-\
0029ab3cf899"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", " ", "distribution", " ", "function", " ", "P", 
   RowBox[{"(", "x", ")"}], " ", "describes", " ", "the", " ", "chance", " ", 
   "of", " ", "a", " ", "single", " ", "measurement", " ", "of", " ", "a", 
   " ", "certain", " ", "quantity", " ", 
   RowBox[{"(", 
    RowBox[{"with", " ", "true", " ", "value", " ", "\[Mu]"}], ")"}], " ", 
   "that", " ", "will", " ", "give", " ", "a", " ", "specific", " ", "value", 
   " ", "of", " ", 
   RowBox[{"x", ".", "  ", " ", "Specifically"}]}], ",", " ", 
  RowBox[{
  "when", " ", "x", " ", "is", " ", "a", " ", "continuous", " ", "variable"}],
   ",", " ", 
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", "x", ")"}], "dx", " ", "is", " ", "the", " ", "probability", 
    " ", "of", " ", "the", " ", "measured", " ", "value", " ", "lying", " ", 
    "in", " ", "between", " ", "x", " ", "and", " ", "x"}], "+", 
   RowBox[{
    RowBox[{"dx", ".", " ", "The"}], " ", "area", " ", "under", " ", "the", 
    " ", "curve", " ", "of", " ", "P", 
    RowBox[{"(", "x", ")"}]}]}], ",", " ", 
  RowBox[{"i", ".", "e", ".", 
   RowBox[{"\[Integral]", 
    RowBox[{"P", 
     RowBox[{"(", "x", ")"}], "dx"}]}]}], ",", " ", 
  RowBox[{
  "equals", " ", "1.", " ", "This", " ", "simply", " ", "means", " ", "that", 
   " ", "there", " ", "is", " ", "100", "%", " ", "probability", " ", "of", 
   " ", "getting", " ", "all", " ", "possible", " ", "values", " ", "of", " ",
    "x", " ", "in", " ", "a", " ", 
   RowBox[{"measurement", "."}]}]}]], "Text",
 CellChangeTimes->{{3.620572042380515*^9, 3.620572058971044*^9}, {
   3.6205769830784607`*^9, 3.620577055116892*^9}, 3.620577165976109*^9, {
   3.620948682489764*^9, 3.620948682489827*^9}, {3.620948828778544*^9, 
   3.620948938322803*^9}, {3.620949044140298*^9, 3.6209490565093927`*^9}, {
   3.620949093670375*^9, 3.6209492193595867`*^9}, {3.684062626966564*^9, 
   3.684062638351183*^9}, {3.684074930966894*^9, 3.684075093800837*^9}, {
   3.68407513130266*^9, 3.684075235414921*^9}, {3.684075267849738*^9, 
   3.684075307408908*^9}, {3.684076104686728*^9, 3.684076159762466*^9}, {
   3.68407619756975*^9, 3.68407644366889*^9}, {3.684076663668571*^9, 
   3.684076748719017*^9}, {3.684081703194004*^9, 3.6840817043766737`*^9}, {
   3.684514967460115*^9, 3.684515020415165*^9}, {3.68452031002802*^9, 
   3.6845203907016478`*^9}, 3.684520426689842*^9, 3.6845204588990593`*^9, {
   3.684520508808557*^9, 3.684520510141548*^9}},
 FontFamily->"Arial",ExpressionUUID->"a17703e4-9eaa-4383-9a51-280c562e6a5b"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"Gaussian", " ", "Distribution"}], 
  "Subsubsection"], "\[LineSeparator]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "The", " ", "most", " ", "commonly", " ", "encountered", " ", 
    "distribution", " ", "is", " ", "the", " ", "Normal", " ", "or", " ", 
    "Gaussian", " ", "distribution"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FormBox[
      SubscriptBox["P", "G"],
      TraditionalForm], 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SqrtBox[
        RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}]}]}], 
  "\t\t"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "This", " ", "curve", " ", "is", " ", "peaked", " ", "at", " ", "x"}], " ",
    "=", " ", 
   RowBox[{
   "\[Mu]", " ", "and", " ", "is", " ", "symmetric", " ", "about", " ", 
    RowBox[{"\[Mu]", ".", "\[LineSeparator]", "For"}], " ", "a", " ", "set", 
    " ", "of", " ", "measurements", " ", 
    OverscriptBox["x", "_"], " ", "is", " ", "a", " ", "good", " ", 
    "estimate", " ", "of", " ", 
    RowBox[{"\[Mu]", ".", " ", "The"}], " ", "normal", " ", "distribution", 
    " ", 
    FormBox[
     SubscriptBox["P", "G"],
     TraditionalForm], 
    RowBox[{"(", "x", ")"}], " ", "is", " ", "encountered", " ", "very", " ", 
    RowBox[{"often", ".", " ", "This"}], " ", "is", " ", "due", " ", "to", 
    " ", "the", " ", "central", " ", "limit", " ", 
    RowBox[{"theorem", ".", " ", "Roughly"}]}]}], ",", " ", 
  RowBox[{
  "the", " ", "theorem", " ", "states", " ", "that", " ", "if", " ", "the", 
   " ", "uncertainty", " ", 
   RowBox[{"(", 
    RowBox[{"or", " ", "random", " ", "error"}], ")"}], " ", "in", " ", "the",
    " ", "measured", " ", "value", " ", "of", " ", "x", " ", "are", " ", 
   "caused", " ", "by", " ", "adding", " ", "several", " ", 
   RowBox[{"(", "K", ")"}], " ", "independent", " ", "factors"}], ",", " ", 
  RowBox[{"each", " ", "with", " ", "its", " ", "own", " ", 
   RowBox[{"(", 
    RowBox[{"not", " ", "necessarily", " ", "Normal"}], ")"}], " ", 
   "distribution"}], ",", 
  RowBox[{
  "then", " ", "in", " ", "the", " ", "large", " ", "K", " ", "limit", " ", 
   "the", " ", "overall", " ", "distribution", " ", "of", " ", "x", " ", 
   "approaches", " ", "a", " ", "normal", " ", "distribution", " ", 
   FormBox[
    SubscriptBox["P", "G"],
    TraditionalForm], 
   RowBox[{
    RowBox[{"(", "x", ")"}], "."}]}]}]}], "Text",
 CellChangeTimes->{{3.620572042380515*^9, 3.620572058971044*^9}, {
   3.6205769830784607`*^9, 3.620577055116892*^9}, 3.620577165976109*^9, {
   3.620948682489764*^9, 3.620948682489827*^9}, {3.620948828778544*^9, 
   3.620948938322803*^9}, {3.620949044140298*^9, 3.6209490565093927`*^9}, {
   3.620949093670375*^9, 3.6209492193595867`*^9}, {3.684062626966564*^9, 
   3.684062638351183*^9}, {3.684074930966894*^9, 3.684075093800837*^9}, {
   3.68407513130266*^9, 3.684075235414921*^9}, {3.684075267849738*^9, 
   3.684075307408908*^9}, {3.684076104686728*^9, 3.684076159762466*^9}, {
   3.68407619756975*^9, 3.68407644366889*^9}, {3.684076663668571*^9, 
   3.684076748719017*^9}, {3.684081703194004*^9, 3.6840817043766737`*^9}, {
   3.684514967460115*^9, 3.684515020415165*^9}, {3.68452031002802*^9, 
   3.6845203907016478`*^9}, 3.684520426689842*^9},
 FontFamily->"Arial",ExpressionUUID->"b73b9daa-ff03-4b22-8f69-2abfe58748d7"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"Poisson", " ", "Distribution"}], "Subsubsection"], "\n", 
 RowBox[{
  RowBox[{
  "A", " ", "second", " ", "common", " ", "distribution", " ", "function", 
   " ", "for", " ", "integer", " ", "variables", " ", "is", " ", "the", " ", 
   "Poisson", " ", "distribution"}], ",", 
  RowBox[{
   RowBox[{
    FormBox[
     RowBox[{"\[LineSeparator]", 
      SubscriptBox["P", "P"]}],
     TraditionalForm], 
    RowBox[{"(", "k", ")"}]}], "=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "\[Mu]"}]], " ", 
     SuperscriptBox["\[Mu]", "k"]}], 
    RowBox[{"k", "!"}]]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"where", " ", "k", " ", "is", " ", "a", " ", "non"}], "-", 
   RowBox[{
   "negative", " ", "integer", " ", "variable", " ", "and", " ", "\[Mu]", " ",
     "is", " ", "the", " ", "expected", " ", "value", " ", "of", " ", "k", 
    " ", "or", " ", "the", " ", 
    RowBox[{"rate", ".", "\[LineSeparator]", "This"}], " ", "distribution", 
    " ", "is", " ", "a", " ", "good", " ", "model", " ", "to", " ", 
    "understand", " ", "the", " ", "randomness", " ", "of", " ", "a", " ", 
    "phenomena", " ", "that", " ", "presumably", " ", "happens", " ", "with", 
    " ", "a", " ", "constant", " ", "rate", " ", "\[Mu]", " ", "in", " ", 
    RowBox[{"nature", ".", "\[LineSeparator]", "Note"}], " ", "that", " ", 
    "\[Mu]", " ", "is", " ", "not", " ", "necessarily", " ", "an", " ", 
    "integer"}]}], ",", " ", 
  RowBox[{
   RowBox[{"i", ".", "e", ".", " ", "it"}], " ", "can", " ", "be", " ", "a", 
   " ", "fractional", " ", 
   RowBox[{"number", ".", "\[LineSeparator]", 
    FormBox[
     SubscriptBox["P", "P"],
     TraditionalForm]}], 
   RowBox[{"(", "k", ")"}], " ", "is", " ", "an", " ", "asymmetric"}], ",", 
  " ", 
  RowBox[{
  "peaked", " ", "function", " ", "whose", " ", "maximum", " ", "value", " ", 
   "does", " ", "not", " ", "coincide", " ", "with", " ", 
   RowBox[{"\[Mu]", ".", "\[LineSeparator]", "For"}], " ", "a", " ", "set", 
   " ", "of", " ", "measurements", " ", "of", " ", "k"}], ",", " ", 
  RowBox[{
  "the", " ", "average", " ", "k", " ", "is", " ", "again", " ", "a", " ", 
   "good", " ", "estimate", " ", "of", " ", 
   RowBox[{"\[Mu]", ".", " ", "\n", "\[LineSeparator]", "Notice"}], " ", 
   "that", " ", "while", " ", "Gaussian", " ", 
   FormBox[
    SubscriptBox["P", "G"],
    TraditionalForm], 
   RowBox[{"(", "x", ")"}], " ", "appears", " ", "to", " ", "involve", " ", 
   "two", " ", "parameters", " ", "\[Mu]", " ", "and", " ", "\[Sigma]"}], ",",
   " ", 
  RowBox[{
   RowBox[{"Poisson", " ", 
    FormBox[
     SubscriptBox["P", "P"],
     TraditionalForm], 
    RowBox[{"(", "k", ")"}], " ", "involves", " ", "only", " ", 
    RowBox[{"\[Mu]", ".", " ", "Both"}], " ", "the", " ", "peak", " ", 
    "position", " ", "and", " ", "width", " ", "of", " ", "Poisson", " ", 
    FormBox[
     SubscriptBox["P", "P"],
     TraditionalForm], 
    RowBox[{"(", "k", " ", ")"}], " ", "are", " ", "solely", " ", 
    "determined", " ", "by", " ", 
    RowBox[{"\[Mu]", ".", "\[LineSeparator]", "The"}], " ", "standard", " ", 
    "deviation", " ", "of", " ", "Poisson", " ", 
    FormBox[
     SubscriptBox["P", "P"],
     TraditionalForm], 
    RowBox[{"(", "k", ")"}], " ", "is", " ", "\[Sigma]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     FormBox[
      SqrtBox["\[Mu]"],
      TraditionalForm], " ", ".", "\[LineSeparator]", "For"}], " ", "large", 
    " ", "\[Mu]"}]}], ",", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Poisson", " ", 
     FormBox[
      SubscriptBox["P", "P"],
      TraditionalForm], 
     RowBox[{"(", "k", ")"}], " ", "becomes", " ", "almost", " ", "symmetric",
      " ", "peak", " ", "centered", " ", "at", " ", "its", " ", "mean", " ", 
     "and", " ", "can", " ", "be", " ", "quite", " ", "accurately", " ", 
     "approximated", " ", "by", " ", "Gaussian", " ", 
     FormBox[
      SubscriptBox["P", "P"],
      TraditionalForm], 
     RowBox[{"(", "k", ")"}], " ", "with", " ", "\[Sigma]"}], " ", "=", " ", 
    FormBox[
     SqrtBox["\[Mu]"],
     TraditionalForm]}], ";", " ", 
   RowBox[{
   "we", " ", "will", " ", "use", " ", "this", " ", "property", " ", "to", 
    " ", "study", " ", "the", " ", "Gaussian", " ", 
    RowBox[{"distribution", ".", "\n"}]}]}]}]}], "Text",
 CellChangeTimes->{{3.620572042380515*^9, 3.620572058971044*^9}, {
   3.6205769830784607`*^9, 3.620577055116892*^9}, 3.620577165976109*^9, {
   3.620948682489764*^9, 3.620948682489827*^9}, {3.620948828778544*^9, 
   3.620948938322803*^9}, {3.620949044140298*^9, 3.6209490565093927`*^9}, {
   3.620949093670375*^9, 3.6209492193595867`*^9}, {3.684062626966564*^9, 
   3.684062638351183*^9}, {3.684074930966894*^9, 3.684075093800837*^9}, {
   3.68407513130266*^9, 3.684075235414921*^9}, {3.684075267849738*^9, 
   3.684075307408908*^9}, {3.684076104686728*^9, 3.684076159762466*^9}, {
   3.68407619756975*^9, 3.68407644366889*^9}, {3.684076663668571*^9, 
   3.684076748719017*^9}, {3.684081703194004*^9, 3.6840817043766737`*^9}, {
   3.684514967460115*^9, 3.684515020415165*^9}, {3.68452031002802*^9, 
   3.684520400603033*^9}, {3.684520528101157*^9, 3.6845205729251633`*^9}, {
   3.684520847841761*^9, 3.684521071256794*^9}},
 FontFamily->"Arial",ExpressionUUID->"c9d12523-3acf-4527-9dfb-dd8db84f629b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data and report", "Section",
 CellChangeTimes->{{3.4703170890792065`*^9, 3.4703170995317297`*^9}, {
  3.617830119877421*^9, 3.617830126003809*^9}, {3.618241444465087*^9, 
  3.618241447087657*^9}, {3.6205722838588467`*^9, 
  3.6205722889377537`*^9}},ExpressionUUID->"fa71a5ca-dc2f-4a00-b103-\
f21e76d8c9cd"],

Cell["\<\
In your lab report, write up each section separately in a manner complete \
enough so that your results can be followed by someone who does not have a \
copy of this lab handout. Give a brief description of the purpose of the \
section, describe the procedure, list the results in tables, describe the \
analysis, and give conclusions. \
\>", "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618241460577276*^9, 3.618241462917129*^9}, {
   3.618241519840568*^9, 3.6182415711574173`*^9}, 3.6182416039437313`*^9, {
   3.618241665168874*^9, 3.6182417459789658`*^9}, {3.6182418434919357`*^9, 
   3.61824184535597*^9}, {3.618727209243888*^9, 3.6187272841133633`*^9}, {
   3.620572279606394*^9, 3.620572297209546*^9}, {3.62057236575718*^9, 
   3.620572427418418*^9}, {3.6840768289169817`*^9, 3.6840768318820143`*^9}, {
   3.905111080208*^9, 
   3.9051111039174943`*^9}},ExpressionUUID->"59396b89-762f-4470-91d0-\
ea395d72d4dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Significant figures", "Section",
 CellChangeTimes->{{3.617830106543085*^9, 3.617830112720476*^9}, {
   3.617831171840748*^9, 3.617831174610969*^9}, 3.618103416896851*^9, 
   3.618103471239194*^9, {3.6182182374600983`*^9, 
   3.618218246530492*^9}},ExpressionUUID->"c4a97bf4-8361-4ecd-930d-\
f10a29306d10"],

Cell[TextData[{
 "Be sure to read section on ",
 ButtonBox["significant figures",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.physics.rutgers.edu/ugrad/275/Books/Columbia_Error_\
Analysis_Tutorial.pdf"], None},
  ButtonNote->
   "https://www.physics.rutgers.edu/ugrad/275/Books/Columbia_Error_Analysis_\
Tutorial.pdf"],
 " and quote all results accordingly. In general, the uncertainty is quoted \
to only one significant figure unless that is a 1, in which case it is \
sometimes quoted to two (i.e., 0.3, not 0.33, but 0.1 or 0.13 would be \
acceptable). The value should be quoted to the same precision as the error, \
or at most one more. For example, give 2.5 \[PlusMinus] 0.4 not 2.543 \
\[PlusMinus] 0.4 and not 2.5 \[PlusMinus] 0.007, although 2.54 \[PlusMinus] \
0.1 or 2.54 \[PlusMinus] 0.14 would be acceptable."
}], "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618241460577276*^9, 3.618241462917129*^9}, {
   3.618241519840568*^9, 3.6182415711574173`*^9}, 3.6182416039437313`*^9, {
   3.618241665168874*^9, 3.6182417459789658`*^9}, {3.618241822717626*^9, 
   3.618241834068059*^9}, {3.684079676135724*^9, 3.684079722402754*^9}, {
   3.9051111319578376`*^9, 
   3.9051111319578376`*^9}},ExpressionUUID->"bf3b0268-1e60-4b48-acbb-\
fb4f3c69e4ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Procedure", "Section",
 CellChangeTimes->{{3.617830106543085*^9, 3.617830112720476*^9}, {
   3.617831171840748*^9, 3.617831174610969*^9}, 3.618103416896851*^9, 
   3.618103471239194*^9, {3.6182182374600983`*^9, 3.618218246530492*^9}, 
   3.61840031768646*^9},ExpressionUUID->"611ca65e-47c5-4435-abd4-\
bf76d30c4d3c"],

Cell[CellGroupData[{

Cell["Apparatus", "Subsection",
 CellChangeTimes->{{3.620572511902515*^9, 3.620572525035513*^9}, 
   3.620577170417856*^9},ExpressionUUID->"57066210-8060-4a72-b82f-\
1e482784e5cf"],

Cell["\<\
Radioactive source (5 mC 137 Cs) 
Geiger tube
Electronic counter
LabPro Interface
Computer\
\>", "Text",
 CellChangeTimes->{{3.6205725367005987`*^9, 
  3.620572551074473*^9}},ExpressionUUID->"a64ff8bf-0ef9-4682-882d-\
b80f58b48b8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiment", "Subsection",
 CellChangeTimes->{{3.620572511902515*^9, 3.620572525035513*^9}, {
  3.620572563003832*^9, 
  3.62057256861086*^9}},ExpressionUUID->"1800cc65-3b16-49b7-b7d9-\
9ebdec4996e5"],

Cell[TextData[{
 "In this experiment you will measure the activity of a radioactive",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["", "137"], "Cs"}], TraditionalForm]],ExpressionUUID->
  "a40a8f82-16ec-45ca-85a4-3821aaff9dff"],
 " source. The half life of the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["", "137"], "Cs"}], TraditionalForm]],ExpressionUUID->
  "a39c0c14-4f8c-4839-a773-7507d2cd5f56"],
 " (30.1 yr.) is long compared to the length of the experiment so that its \
activity can be considered constant. You will use a computer to acquire data \
on the sample\[CloseCurlyQuote]s activity and then compare the data to the \
theoretical Gaussian and Poisson distributions in order to understand the \
role that distribution functions play in your data.\n\nThe nuclear decay is \
detected by a Geiger tube. Each time a gamma or beta ray from a decaying \
nucleus enters the Geiger tube a current pulse is generated. The tube is \
connected to a counter circuit which converts it into a 5 V, 1 ms wide \
voltage pulse which is available at the phone jack on the back of the \
counter. The counter also counts the pulses and displays the count on the \
front panel. However, you will not use this feature. Instead the voltage \
pulse from the counter is fed into a LabPro interface. The LabPro interface \
transmits the decay data to the computer through its input port. Using the \
program LoggerPro you will repeatedly record the number of counts in a time \
interval (whose length you have chosen) and make a plot of the distribution \
of counts about the average value. You will then export the data to \
Mathematica to compare to the theoretical distribution functions and plot \
your results.\n\n\t\nThe parent isotope Cs-137 with a half-life of 30.1 years \
beta decays (94.6%) to the metastable state of Ba-137m. This further decays \
by gamma emission (662 keV) with a half-life of 2.6 min. to the stable Ba-137 \
element. A diagram of this decay process is shown below.\n\t  ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQm8nNP5x8+duy/ZkBCRIGJNlMRe1Va1VFFLlJZ/tdS+VxG1tqVFW9RW
O601pbYIQUlI0OwkgkT23Ju7ztxZ3v0973nP/zznvDP3Zq01Ivl9eztmefcZ
n8/79WzbnnLBMaenGGO/qVEPx5w86sCLLjr5tyN7qxc/Of83Z51x/mmnHnr+
xaedcdpF+55Srt7MqWX/XsEYPZcAALChEhcf9V8kpS/pUca+jCx6TBYR6pGr
T/UyUtoy8um1FIF0Hcn9ZHNpGS+VUV4tpN7J0+d6YZlXq0eC1ohoGyG9H+m9
yIxULyPaSyTddX7+AAAAAAAAAPD1Ie72RNtZYAxOKMmyV2Nw5tNI+1gUqvfU
8g6975OpqVVCl3wuFup1QRqDU15mGYOj9WQYqy11GVxWaqHT+4fBAQAAAAAA
AMCaiVcIw0Va0+iNOJSxS4/a3boZXJ4MLtR/ZGlCGZxHz9KxbCdJ87QESjeQ
vGA2S3LnksHp7cckb8I86K3YtOHY7D/8iq4CAAAAAAAAAHwdiLuF4bqyKSX5
Vcy1tInS+zpCl4mkzoYMEtnTWudqg8vSEsbgYsGl7ySr03biFTZeeiGMChbf
EOv+AgAAAAAAAADA1wcdDNNa1eVWXf80oTJh9E0bnBtLm+Qu1LE1Soy0fZkN
qLqtqGshLRpRMmWmJGiyu8HFxV13GR0vBvsAAAAAAAAAAKwJE2tLHE2/DNU7
vFQQV4yg6QRIE3azqEmJKZnTBhdQziQlSWodc02Nm164XWueeV8kyidKLyl5
sqh3PrkeFA4AAAAAAAAA1kaibKYCjmyOGpiEflKfpt/Rn2qbMx5nitdc/VGS
Xcm1wWkDMzVyJhTnx7oCTmua+r9F70cm+KasMIyKa1FcT0kcDA4AAAAAAAAA
1obQDSFDE3TTQwQyMnYdKTuT+BkZWeJ3UuhOknotypBsJo+LyOSi2EwKMBKm
dKxdTxygAQFxEmjjSdvJosFFeqc8aW9i0d5QBgcAAAAAAAAAa0NIPyfjMNBN
/6n/JG+VTjovZauUOaqB82TkKslyKZVSmHaRnGYIdEjZKMI8TQbwE4NT79oU
ZHMdbzEZXKj+5+nZBDLwbZI+ZYhJ7qXaRKC266uPYhODc2FwAAAAAAAAALBW
BKVNcsfXXSSl3ynDxsXv/3fUTfd9xPVAN+Vcse/r9pMyojCdoJid9d8p/znz
zJPKGVN/Q7Yd9q/Rr7Z1kgOqjRQim2JtodX04YzNB/VLVTYwVqsWqypnVYxV
sGr1kqVozYHbj2hqJ6XLOm2C5PGrvRQAAAAAAAAAsF7DI0+GWRm7VkyDuZvm
Tr/z0hPqGRt++C8+kjKnlggLUrihmR7gW1Eo/DB9/V8vZWXKyHr2qK2rKFNS
xsrLev34mHOWZJycnhJnK/eL/JdH30yCV1aZKqvuUVep9E3JWxWrqkwpg0ux
qpqfnnphIZR5yqykXE3u+V/19QAAAAAAAACA9RkuRV7GdiaUtzz42KaVbCBj
PRjbc+SZ83QipfSUk9m+qZILXSn9Rx67+/SzTpo7b36o574tnT/tput/y1iK
VfS56qZ785JMkPIh7cypR+3FqmsqatX2UhVa3+pTrGdlFTmf0rqGvg889XIh
pmq7nG0V8hndFRMAAAAAAAAAwOqh8rWwQ0a5Ox8e/ae7Hnr1yfsuO2pYH8b2
GHn2VF3qRjmWwnbjpM/J/HlTf3PRhb5P7UdcP6M7mYT59mVXX32R0rIjTrow
q/uYhNztXDTrZ9/e4+U3J3darh4cEMrIl9yhtEwRP/nMuM23Gz631bH08mpr
vudEfvarvh4AAAAAAAAAsP5CBhe0y9hSGlVQLzsX/fWX+/VibPdjz58oZJvU
BudlAhODE157yyIr53FqReLHFKPLSk95mXzooTtZDTvtsutbhc69lPa4x+9v
+e90V6/oh1nhFCRXtmirffmedeRPTr78j/cUdKKmm4wtUCKX+0ovBgAAAAAA
AACs14SRJ91mZVXtAY0PkFH7bad9a4tyNuL4X08zWZRhXvqdJYMznSTtwOEy
qwyOB03SV2omb/7LbXWbbvnOwsYOKdN6WnfcnpaWsCI9GTzOSxHSIALfUdK3
ZMncbXbY+5W3F+a1NuaEDCIZU89KxOAAAAAAAAAAYI1w4UuRkUHakjJPr9vu
PO2APoztcNjpM6VskjoGF1nUfTLUfSkdCpZFMuPLllgJV9ymjO2//3n9Gzt8
e8yrszppRFy+00x286jFpHpw4iAUaTI4V0juK0l8/PEHR+zzoyyXzT45m9qk
7ZlJcpmv+HIAAAAAAAAAwHoMdR0JuQxpWhtVvYUL7z91r76M7Xj8ea/rid0y
8GRk2ybR0U8XyMyUdVnUPNKVuUXv3XTNKbUV7B8PT2vOUUWbJ8N8TOJmB5GS
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
jutiL9I0bXB2RGVkpaqsLB1T8pFZ2Ka6PXqTwnCCJwE417QHiS0ZZmXn8g/f
WrDHiO/tf/ix8zsLxm71tAbXUicWhQsnvbP7VoMWLSDHTXo1htz2YnWYhdy8
v13w4yGMNZRvxnoMu/rl6dRfUR2nTxFJrnuI6HagE7Lv/3vLFCtngw4deUOb
q4vt3OVcttjSdshPl80dd/eWZIIDT752UktemPxPi5sMRuGHjhCrj8FRwxdL
2bGu2qNfhGhZ9MHfb762ZwXbso6uqlJjVl7Fqgb8/Jp7O3WKZimC1r23J1/B
4LplS64QgzMGpzuf6ApE9aYThJbnJp/q1isBn3r52eds13O/SZNaWslqeUF3
gtGVieory9IvSMlcIDxTtgkAAAAAAMAGDYVRtMHF1E2DGln8+cwjezC29zEn
fZDkVdJiicHxQBZaeURGRuYlfOFIutOneNz0jyaNLuu31/Uv5xppjQ4ZZaiq
jcdKKhxKz7Pmvzh2q9pe/5nxUZtMEhYdzn2zCypzCnPqDl0ZUnvj62Nua6hk
FdTlcuszzrkuz7viL3kn6XsRKiuKdJKkcjs/62i/e2/8k7sztjljVdse/l+X
6uB0ARsFawo0MjwT6eONuwzONXmSMb2vOyt2GRwFt6LE4EJ9DbJSnY02uLDY
2zI0ATiRl+nGzOxpvesH77bnITMXt9k0CYB2E1CMMVQamW5bduEpJ89+5x3O
edI8U23VEzp/Ve0mK5dPOXZrpvSZ1Q6uPeTSWbpnpXTbZETHTMMZhC1zY47Y
dbMqpVPl+/99zDIKklKP/cWS2srINJ1bk+Rv/+aYnStYD1Z92EsT38voVjA5
iqjRBQu4v9oYnJ44QP1DHNc3ubHZdMvVl5z7xrhngmyjdJa+cM8fyODKKln9
4OOvvMe0OikNDjANVIJi183V6lupDq5ocH7J4EQclEJ4IomSqt+MUu9M3NH0
i28fOmSrPV5+v7XRaKxu26J/QrYMstL11Wo2pgkCAAAAAICNAD18LZSepfvm
h5K3XXfGT+oY2/Pw4xp1lqFpgaHsgEq8qAzp41gG7TocReVVsUnts6TfeMul
Fw39zgmTA7mQ0uLI4MynnvRF1Cq93D1X3fidfQ5udIKcCaUV22oYB1J38lkl
I37ruH/c3LeapagsrP/QvX48t6XTIXXUwb4k4GPraBoVRun2j2pflonQyWD5
1Lt/05exhiFHvePoaQXU+YL6tOgYXLoQWbqrv9T6RAYX6z6SgqbWUaiOU2Kl
DIQe3cZlsfOGr50uQwansy6VOLqhkRGPTl/ks4s+OmCn7VmPrcaNf4/acOp6
M3XRyMMi8pS7HrrjoX8/bIWWjqzRWZuGio65mIESznlT/nJCH2VJDQPZiCve
sfVJykYKTioB8tSRLZx816W71Ncyts2W3zxvLgU31Vl8KKMPpEeZonlyJyWe
U6eMvoQyHtmQ3b51RLuX+K8jzAGrY1pNJ5PE4GIRdylYqM9X+ylvbpn+fP9q
HYOrHjzyyvvbjdwrg4uCKIp4N4MzvUo8105aUxpnlKY1aWnjKxpc5K/UuzKg
5FoKvErR3DH1oe369Bgy4lfj55KExxRcpVLKmNI9LckzInZzZjgFAAAAAAAA
GzSUTud7MlQm53Z4ymhyN1x0qnKn7448YWmsp4oF1IHDFKApg3v/uT/12qTs
9/c/kdVuEwTck1EcOAtem7DfoN0mfZD50FTPqdv+sD3gnWndMESKRplp/dZu
B91w0yO5WN2yu1wKoxWxmYZGjTOsQDa3T35sxJapGrKP/qxqxNgprU1B7JgJ
a8Xm/Lqui0SMwjZKtyIayGaboAxv96eOPnrvXVm/74yepWOIrlBnF5JoqXPt
ULbQ6eip0RSMaqMYXMBDn6tzoEOKZKedDASPSV4Ej1c0OL0Tan6izsqLQ+6S
pbnN0kn/31FH1bPKs2+4vSknTY2cKZSja+w5MrQnfzjlg9xSiuEFeiS2Vh1T
fkg5perscx92PPvrLZWf1Qxg2/7mjSxlscayidqkmE6Une8cP2RoH6aWGHTQ
hTfNodhbnirjxFKabhCYOB01lmmb8fiwzSicl9p0x/v//ZqVlPCVJt6tOQYX
lxq96DYmZr3YklFT+7RnBlRpg6vZ7ugrH0ybTpQiKA3vNrMKaC6eKI7/Fh4N
IAi9OI6dICo2fpFc6IxL9RF12vRj7hqDy1q2x0mv1XdiJK6TzK9V5p/7961X
lrPhB//sjkbK6V0Wys7YiLCvdkRDzV2j8AAAAAAAAGzQ0L061Z0Feji1P2Pa
hF232qyasZ32+dbUJR2mU0SsFSPQTf4nPj6qvJKxyp77/+CkmVMWRjGN7Jo0
8Y1rT78sM4c6jTRKuVwIuvl326XMt9JOLNk5a87r43rUbzfunYVmNnckw8QK
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
1hzE4PKLRfq5iWNH9Nv+cKnrH/nrX7YHy1De/hitet8r73o+hXcKQw0u6YK0
zPIQC5J6tJncd8JY9epjF2sJ7fif3Vkwxaopb+5aiRXqktto9eUMzgMGB5dP
TjxdGvWQIdKuGkcVUOHD7Wb0HI637RmGm4fq6D5mzqRcixy0dgGDZ7nVYs2M
g3epr4EWs9VaYvT4oy9os2jPEBQSwyRGgcEr+aYNFqxkcKsmTxg/Rtti59fa
4R4gBQseBTmcHXiaHjgq0dWpUkYtoXrU+vhfw8OtQG5L49TJewwaWKn1O/Pq
exbDXIa0WAdyf9EMABto2fKXboAtnJWDtfr9LvnH22iB54u5lItVJnEgCpaT
8cAiKky657ptNG0gJGht9au7XllBx4EUJto8s7TTFs30JXPW83eepfUf8u+3
m8FAys265vS9IWGxZq9tvnsFphB3+D3ZkL0kGcCEBMYEjgk5aK0P/PUcVWkw
Pvz0G/89WzLHokdJVK4pcpBqmc07mGoGRS+zWDcGhkmH4TJFdvEfT/j6aLQk
B+53+ieQ/YX2s5zqdkpOolZJMxw/++Gs72z5tU8Wr1pESadu6uX7bpQr5Y7H
38C9XfLZ2w6RNi+wHclw8qhvnhea8dKOL9Iv+awwm/52+c/lpNhuz6Mmf9bZ
Bk8TmhGo9CFXR1+E0/NIbExYSwxuzwpkcDVHvLXEJQYHjZ3lmBjS6vRQhFr6
mmkHjIontJoR+//i3VYBwVVvlZyiKYyE+kbfd6ptZAxOzWeKwVFrCcfEds/h
TrGQxHmULiDMFjHn5QMGVWhV9T+44ylooqmKmMiBQ05LNirWupQy0hSdc+cs
2Klm1+f/9mYGvF5y8sy541cHwSVV7z7i5Js6wd8kl2+muZe01LWk9TSKZfJ4
p21xxHdGjG3MLFpSnL7fXsNwx3dSa/jayHE/W9ZM8qctY6dVeU8pfMyUSaWr
ih0iNeX0b+8SG7bHM7OhGnF2yr+2pt7Usa9VanvfMS2NoiANaR4ubTGTuilr
0rzqhBnR3pb553/+e+z3T6IKVMmYdt75Zz37/H8yeVu1EcP9cS7k1ViR8cTk
SP2tey49ZSB8sRr2xPXf45npKWxx7kDDShvyPy0VtkOm7cydNfVNrWrkKWf+
IY/VRkzlFrPJBnBD4g1XCA7DwF0r+UvBFKr4MVaYWXLdbyeCBqzZ6d0FUMwn
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
ryfcOeNuOAe8jmu33uHUKz9UdsMCLPNqBSfU9zjkQu9Z6BzttUamLbzLzzln
t8ZhL74JnkjQlJjkHyJArLzonHToSPA72XbP0xZj1kiIIZZDLcTuR925+ad+
59svvvi6nD8UuyGjllRsrSGWY3Lk7Wf6VPMWLNJLRfDBLdedl0nJi2in4y/6
83zMNOOShwytS2O2T301xQrOX5OCRsz/ACs4gRaTZMaSSZMmSe0m2ySFXZt8
8c4771BGyk2wJNwqFZy/OP/eGDmlb27cwcjsZ6RHXvCLP7TPmgJhYpGwC7AA
5oBoavPE+9f+8axGmGwM33azL7/3gdlNS/qyuwqTAd1AUsS52HGpOAU7O2/6
hD23HSIHmuNOO6fFhbliq4oUDiFU311mt87+wl6fNaqG/vBXN1GtH0v2jVID
4nyDlt+Elxd+y4oZ40498mCjKn3wiT96swW+CifG7e0TR3/t8/s1GZkfnPPj
NyZNL6CzkBovQly2xrn13KkfbjV863Gv/DdnBU7s7QZdGUwcQtdTP6787cHL
PTvrvZfkJGpoRgqb3c+99v52/GZLrRvDUOhjanaXEttD8rScKCy+/LzjIBy8
BtIODmpuhLzxVdXpukZYXaiurYLM8bUpWOYcYlRtla7befSYiehbKPIli6xv
QVwGr1hUYhmLHfhaaIA/krNYTHpml1SDMfzAx6Z34yTECQJKZy1Z4YWLQpFb
PH3ivrXpppQcI4ZddO39yhPJxTJqmPbZRs0t3Oz0p+7eXJ6nNOR1NTL73vb0
9G7yRbHRdQ9WuuXUpNNrmXLwnlvWk13PaGyub7rgvP/31ntvagX69qS3br39
jlRm6CWXXBVEYXchB0ekXEMdsDHiGaXLskSh6VLL2yGmEXHc0kcXHD0So923
GPblM95eEeqIwD6AkyhVCwBcXmHYQnOhI+zlE/99E4TCpRtHnXp+i49nUt0n
uoU9LdbkI7S6Ixe8yArZFU4x9+iD9+60VXNT2hg+uPnZZ172oIYXxjQEItCK
Sdng1I1B2flgcUCo4m70AhVcx7gbf4CL0ttufdofQZsHbYH6qhyuVZhlRSiy
y5a+dcyxX5LX13HHXzh9JljPc5D+vFvuJLSu7XUunnvSGScZgze/4Hd/K0Qo
J8FjNpRTRahvBye7/aaLvze4ythyxA7vzMt2oEpEJ7gSulA6QZyTHOdgsNtF
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
iSLb333uCtlUDbuc/EGHQMfNNjtcKr9qziPn1hqZ1PZnTbfBuleSM11IzZF9
/v+zdx5wUlXXH3/TdraxsCxVUBEU7LEbNdHEf2yo8W/XmKYxaiyxpahRY+zm
b6JJbElMw9iNBY0l2LuIoFKEBWkLy/bpr793//ec++bN7M6iYFQm4ff9jLg7
8+a9++57A/c7595zbv/BsKg2ZrujX+0UbMWrhNfOhkVKeepR+26qaSOpLN/w
bY+/4h2L8pl4ep9n9emOYVh5FVeUV+KtB+8aGZWiHdHidYlxk99vy2WtcI4p
JTMxOVtIYHCfaoym0uDkr7JlhUy7cN7t/eDhyVtN2O3g77XmaK6q7CIhlgm3
XSWn7MuL+bOf33KUVhMdpsm/XZIUfqPJo2RwDc3xIVRUXv46IqE1DZu0/3Fz
17C9fRJFyVGGT1U0zy2YztJf3vzDCO294awzf9nTTWKYM7Ou0A1Xtz+Pcgvr
R7VlMrELFAnme36laH/x0gtPadx8p3+91sZrL/O68OU93y3/WpAK55g21sEB
AAAAGwIY3EaIqh0gkT8cffTRWhk/+tGPRDHEFuZ8eO6558IN5Fs+3Tx+H53J
xHa8YJqkm1IxuH2HJ2q0IVfd+WqXsjXL84NgnCn8jGdnbJXpUToop/Eng+ta
KZa8fNzW2x568vWz1DNkcJSlRK30E4VuoadvuvTK/9n9wHmcV4SzPkoxMmgC
Ge2966VHLqtJaCO2P2FOt8hScC8j90BxuH+c1lgzrHGXC98vyCF3kK9PZLue
uu3k4VKNtzjwrTwbnPuhcNt0OpmscLuvO/9EaXAjNC02bItxh148jzNScgwu
5/PCLgpH+Y50WJFa+buLziH1iSW1+PDDvn1Bt86Fuznc5lJ5ZdOiZWSeWhj3
qV2XoruFHqfS4KTIKHqWvTZt0zpt932OfHUVpeynk3JMry/DFRB6fcolIs74
3neld44fvcPv//TXPmdNWqwxWfVefPzV7x/3LelzDUPZ7JKNUoxvuPNfnflP
Uk1AXr78Gi4M4ZvLl79+4GGTqcZD3dBzz701naHZpVkr44p2R3T6KmhZZVRf
NYFMJq/SjUqTmyMK7x1z8HGbtezz4ktzVXZRiggWqPyf7HDL+OybAwAAAIAK
YHAbG+XylU6nZ86cmUgkkslkGIl77733RFkxAsnUqVPlHRKPx8Pb43MwuJxB
yS1yeZ39jDOZWGucnkVfHBZPxJqvnfZWJy9icylfo2CNk2LTy7MQOUJlU/Cl
O8eJ+s38sn9Mm5xofOrlpSuF6KDdS+1I5R1efaY7NCewq3W3rXe5/MZHPuRK
bBSEyBWkKRnsVMJuW/zqH6RG1W1xwHyTpwgafcLrSbt2z6Pn0wKvzb7xXpZq
n9FUOM6Q+djNJ43RtJHbHvJGQayhmN1y4Xek6WRyQnRfe84RW6gYXGLMlif8
8n3OSOnbGSmGFHCRpkFCSmEZUVj20rSbKeeJFteGbKo1bbmokyqxWYHkSkdR
pdCcT3cWZRh+VeJWCsb5y8z2hftttUtzbMsH/jVvObU87YtelUiFpnfK1uVe
e+OFP9TE6w76+kUdbSpppezNTt1PObYqJ+fd+ZufD2/UaIJldIhWu/XWe5wo
e7XzE7Q/8PD2hR88uP2OSS2mRROjDjjk7ExByOtbkIpPt0Te9a1MuvDpzjL9
VKi2it55+ZngrKemJ3svI/QFuTef3rJ29OR9TpjRbnFiH+luTloV73M3WA5P
AAAAYGMGBrcRMqCi8XnnnSeve21trboBDjvsMLlBGIBTxeMkdXV10Wh06dKl
uq5/ihn81qWagFXoEVaP8Hs6W9/YY3hNvGbkj299diUbnGdYlFKSS2B3LJm1
7eRxZ/7w3NZlq21PZE2KF3gil+nr/N4xJ931u7/mcyqJvef5cm8Zw6YNKGmJ
0bb6ubuGDdvk7+9TMIl6R7cpw4QjdE8YnjzEqjcfuL5e05q2/uosk6sDULUB
ipXMuf0MivnseMJ76WAqX8ajNXQP3nxys6a1bPXlOXIcTA4oh9+p1ZQIImWb
K64844DtNG0sRdZGjz/6hlddmoHJafAz0jUcymrJZePkGwsL/MWvbT08OSzZ
qEVHatFxdz09t5dCIEKt/uNoncl5OD+ta0KEN4lKY1J6wZhx/H5fHqLtcua5
9/RStWx5Yjmao6i7lN6CqrDJps38xU/333XPr8xvo96kUtrUBz0qHQdpsy0b
3HHJ2Ue0JLUaTYrcxMaRX3p7hd75CRoq95rtyXW9tMduEZ48OWyvL/1gSZvo
s2lGa1r0GHyPyO6kLByFT3KEz5S8Q98QWNI2qZOpzoXu8nU3s36mQ+gF2Wzd
dbNuzldh1s+YXsonkxdmXybv8FzKlMi9+8DvrtFim+118jU9NN1T3vZUZo++
/fBXfeYNAgAAAEAFMLiNEBVVEVyhW/65evVqdekbGhpUiYHHH39c8BjesqzD
Dz9cPh/eJ3Pnzv2UG7P2it5qPqTn06iW6sE5nQ/96ZeTaUJh8wkXT2vVVRRA
+DSnUIpWT+/yOZPGD6ekH2Mm/OWuhw3WnJVLZ5zyw7P/+cYylws9+45OeT88
zj/pktBxqG/xH887/EsHHjHdFYaUO6pfxmWydSdvuTQnML/4wWvPGqppNRN2
fmhpoZ3aKJ/sEpn0HWcfkZRmt9WeT8zrXZIpLuay2q/9yVHJiDZi4hemv5Hv
zFI7DTtXoGQaGeEsv/7sg7ZUBhcdu8nRv3xPqHyVNFlUGhxdGwrDceDLeF8s
fmm3UY0UH9WGa/HNb7z35TYOInL9bo/iINJCXZsrmn9qhNZW/kOhUHju+m+O
1rQR4w56ezXNR5XnmzMzWddLc0lxtzctCm2i7ZWdJw9/5KmZXRRLFbxaSifX
clK8kbwQ8oIuzy1/cdOE1qwNSWqThrXs+8rS3CfJFOmuEIUl3zx87yQF9Opr
ajd/fAZl3pCXPiUoakW15jjLpaPnqjDzhjR60+SQqinShZSapkjVIzyTEuzk
DJe+QTBNSgHqfQ7Z+7len039RzlN+FPgdnd3zd/ti3tqkeG3Tvtnhioqqlig
1PCqM2IAAABgYwAGt7ERBtfKi8Tdeuut6jZQd8IOO+yQzWal5b355puJREI+
k0wm1UsrVqywP9Wc5mszONNVRZ6FZRc8K33gvjvXc/LCUXSTDtNqdtRqtq1t
Gv/cE08Fb/Rywul6/YV/bj5py2hdsxZt0rTRJ/7gly89eb1Usg98HrvrBVIk
kjaTSlGzwRnybJa+fOL2sYtuuPkpOjhNsBRWnmSL2/DIo9Oks0zQtJGyA2pa
tJFb7nrSt1Z3fPjkX24fqWnjpE/SDMekltwssvlXX52z+oUnHxmmaXVRLvxW
K7Vv/JTtj1veLris3eo87b/9qtO/MlnTJsbY4I791ZvB6jyaLFo0OErRQpfI
fFe0vbZTU3ysVhuTBlcz8fdPvbdSiDVcSY3OXeqbpQzO+dTntIWyT43T9Y6O
jsOitHzv3GtvW8Q9xTWdvQIvHsxSSo6Vwly47F9PnHHCBXnK3kIyUjC59IA0
OLpGqni3NLilwmn90TGHjNWaGrUtY/FdXvow9+EnaKJ7/z23nD1ca6zVptRq
219y2Y3dVleWa9JleQas7gvLtx0nJzyrCmdRWqLdcTgTi00pe7o8IyOKExTT
PcIIEvgbosfmYnufNb7w+vhGpHKKWWpAmhZpmjdceiKt6xzzxWeWcrzY7qTM
PCgIBwAAAGwIYHD/rYQJ/03TLP8hXNCkDE7+Kp83DGPPPfeUt4FKTSl/uPnm
m+VLRx55pMYVB9QiOElra+unXtR7o8IUvZbXfvk5R49T9eDiIyd966pXfDUz
M0uLoVQKFymbvkHREP3d9Kz7Nk1SQkctNkFr2P3hBZQ8xOHpk5yx0uAI3iqH
/tRFm/Hi/TN+du31NDmxmeJSjdqQX1z8m0dfWNDmiD6fQ4tmmy86MnnLtVjB
XGVYOZVGku8bR7hUWc/i8CYVepN25Sy7+MzDteghWnLHNxYspsNTpJJWmrkU
/jN1KsNH7//gvbmtC+batqkqx9kU+pI3Hy9ptIP0Ma7ocsXin59/3Eiy8iHj
R+00Ly3eC5e1CU8laAySkfo0v1T4eZeDa32B46SFtSI/8+Y9aqXaS6nfWtv6
gFcWGlwjXB6mKyW6DZ6YaNFbDIN7X+oSz7n1KMppFmh6JU1YpVWEYR15lxKJ
WKrcHpcvt4XZKYxlrz/+99/+cdoO/3v2CvqGwRNe75y3nrv2xhuTDfVJKoyg
/eqqK+9rFUtVVQR9hci8JYx57z354J9/98eGRHNMS2g1Q6eedfk983PL1d1Q
WMHJVWzfTamTdlNrhLNErH7zXw9PP/77Vz44c027Wt1InWH7PHfXzHRSh2RW
PnnfH6+6/sYbpj3dq/aW737juSdO/uYJDXEqubfjjts/+MzL3Rb1h7ysuWLC
ToeC20H+y7IvUAhV8E92T5ZCgPRVhjxLjoHrfc9cN5nmUg87+qoHF1Gojq61
nv+sPy4AAAAAGAQY3H8xuVxOrWaSNtfX16eetG27ssiX5IEHHlDhNklTU5P8
86GHHlK/hjXjpMc99thjn+s5/NeRE2ukrl117nHjVT24+MiJJ14xT6h1cDnh
5T21/I2cwrTcgkjPeuOe62rlh3TIOC0xZfRe32wtcHIVj4NMBYrTGVSLTY70
V62YNWOvCfsmtWG//cOdK+xVvaJTvjjr2bd22WoPLT7suDMu7bbV6rmM5S9X
g/Myg8uXDI7mcNqBwVFei5Sw2rrnPrXzpBppcM07HNNKVbhNyrtpC45UksEV
HMPlEJuZzfvklZ7h0Gs6BTUpNwbNXOXtuQ1dZvrlq879+rhEMq6N/epBZy2z
OGYXZOsoNziPhMXNCifn8Emn1Da0RGvRnRcctikFZ0dq8c32O+dSCmVSXWy5
SUqn2CSpCFXXE2bONQQvFrRt15MN43MMHq5lm5QOxxVq7q6acWuZhb7la5b/
4+H7fvWLC0eqYGu0Ya9vXiINrjuTOfnYgzZpqdOiUWnX9RGtgQsmaJO+88jM
AtdnT1lLX7rs5EOGUA6aRI2WaNSi9EGKN2lDtrzsr0/SNk6e46bkuPl8/pmn
n39h+gN7TYiMUruqm/zXF5Z0C0oqogzOEZlC5+Jnpj9w1ikntsS0YVF5WySv
+MNjcpv5C1qP+to+8l11carSIH9IUDH4oededkea6slRxyqDs1VxvLUZnEm3
X54Clj3yfTT3mPLw6GLF9BN3S2rJem2rQ2es0nvk5fA58AsAAACAzx0Y3H8x
arpjmJJCVRAIfzYMI4zTqZeOOOII6WiNjY00UI1GN9lkk/r6evVzaHB33333
BjmX/xo4Z0nPJaceLr1jvPzYxUaN/fpP3vRUDC4jh/RUm5pmREq50nW9Tyx5
ab+tRlFJ7MQErWnX6/72NEdSu9U6Pjm2p4mgpACrFr5yzyTy7V1/9euHCtJI
RG9adOhOQejekldep2psTWPP+Nmdi7sFe1e7lCwqe742g+MYHEXRKNjXKw3u
wd/9lNbixaYeeMoNfRS/NSkhia1K8pHBGZ4V7M1TifvZ4NgZs7w1lVmnVCds
E/4q4c26/OS9aI1lfPdr/jq/l7bpMoOEmo7aQ3GGrUkzMKkuALUwrVzD6THm
PT0lrm2p1ddIg2va4uElSyiURVHGvGV0yaNkOf7ku9J05dlRjQPDDqZSuqbF
muzQ5FOeDKpicFLkKBcop/dvb1tSUxuTfzsOj9L03Qny01A/YrMDTr33rVU7
7L7ntNuu71y50PCokY/cfefWo+pJ8bQpO375m722mP7U46ObY3+67ca2Faso
laTht7390olf25U+TENGaxP2fH1JJq/6Stg9XUvlp+++ex+55bqfj9W0Mcrg
mra7+9UV3UpXZaeleuYveptzv2h18kWNnbF5zFV/m/G3Ge8fNPWIV596REjl
953WuW//5MxvU9Q8Go8M3fbxlxelSfNFIYjBuR9lcDYZnEnl6eQFybm+MjhT
GO/88dL/pUhwYsqPbv9HmufHIhoPAAAAbBBgcP/dqJmT7e3tL7744vz581es
WLFkyZLe3t5wJqTLqJ9nz54dhuHCaZOK8PlnnnnmU0xEuRFiU92AnuvOPn6C
po2mjh6z7UlXzePJgVQxgQoK8Kjelb6Tz6baTzlgvzryphatbsrPbn00Sy+q
iJvexak1e8i4Mp1Lnt1v0pBt5EVLHnzfU0t5Fx150cVz9Bz/w1mHfmF0hFJ9
7PyvuZxjUHSQA1oc76PDUQ1xqzSJkSYWul6QA0Q4vaJvwXcP3lEZ3IU3Pcmz
53gWZVBU3dP9nKOMgHzQJz2kQBftgS1BJ91UOmBxvXXZgMKb+20VrZVmOeW7
z6/hinjOe0HpM+VWIlgLSdvL1joFn1uYphvQEXb7S3dc1EKhMXnaY+u23Osf
8z+465///PNv7tiiaVgsQaGvZKJlWGTMnbf94ZVZM6SEmAVlkMX1cJ5spwpD
eqrone0Lg89bRavMQh+7pPns/X/YKqFicE1a446jv3TigmWraGKnV3CoELcp
8t1/vuGiZlr72Khpw4889cc7fu2IV+cuUJEv02avzK8QK18ZHeEFkk2TTr3u
3nahpnDq0jNt26aQoZv/wy9OGUNzMqNacsqdM1q7ymJwfpABNX/jlRcNZYPT
og1aw5RjLrhxSVs3Le0kJ6dJp51LZm0xuoGEKzJ+6onn9TlUis8QKgTqfZTB
8TMchczJw/mqTLw8AXvBS/f9nP5SqN9y4pe/scajHVowOAAAAGBDAIP7b8Vx
HKVaStBef/31PfbYQ13iaDSqCsBJ9t5773POOee88867/PLLr7766qlTp4Z3
gtystrZWBeCkwamb5P777x90EiZYZ1JOdsU1px21DYdaNG3kdidd9Z6g9Ow0
OHcosubknc7FC2+57vJNWurqyAiaTjn3yufeac96QrflwDtVEJTeMiNURndp
UovnPf/7MRSXSWgjvnPb9FYzlxbuSrmJTiPwvOiZ9a2d6ym2Gtn+ir/NS1Pa
ypXC61W1v9jg5MjfHmBwQX05S7pSd2b+c5vVas3yXqg94rbpiwKD8xyaIlmM
wVH2TI+ao2JwyuC4hYJnPhYsj9a/sUH1CH/RonfvT8a1SMPkS299Z5nDa8dE
q6u29+3Q4IqZOXXZSC77J9IWn3XfgquP26U2otVI2UlM0homf/uKG+//5ytK
0lyRTzmrn5x+/65bbFErW92gHXzY4WtWUNKVXoOKZZMb+lLSLKqUbdDBpblZ
nh8opJpvKNVFz8njWsve3We0Nk4KTHT42APPmdEmshQ+ywknZ7gqINiXWvDi
bmOiwzWtpmb4+D2nPrsiv0aILp/qA3IQTfbVSlGYfcPpX2uW6pUcu/t3bphp
qbOU9kaTnGkOqpd/+i9XBLMoayZPe2m5FH6qDkc5PXUyOL1LeNlXn36gmcNw
Wnzobidd0sohNr+QtnO9vPIwK5zuU47anz7ktZOSI7+wuMPJcA+bvv/RBhck
U+X0oT6VGuRusKVBr3jn+dub6YucFq1+xyff7c58DtXpAAAAADAYMLiNATVb
MpVK3XDDDeXr2qKM/LWujuI8SuvUzRAqXjiFUr3xpz/96YY+m/9sXKdTWJ03
/fCkLTVtExqlj9fqdtEattcah9ZzVGVIskEqifx5aIzmy40ZsdVbsz4sqCTz
rFe9Zkde5HsoKCUMyrTYKZy5C1/8cyMFncZoI77x2+mLyKjcDhVWE2aPMN4+
f78mDiHtfMSF/+DKBT3CWiPUlEKPSxL4jlWcaBfE19S6sILUga6Fz02TbtIi
b5xhxz88M5OnYb7B3lbKZEIlzVyh5lWqOZCuCrjJ/fnSgzKU4FBNs7TbRO6V
H599qJZs+eK3b+o0g9wfeQ5FUlDMCwyuGC/zOMBEs4INn2NSbl6smvnNKVpE
OmBNo5ac/O2Lb2tTAS9OdCJ9qeC3eYWVItV20tS9Y/w9xCYtuz320nuqJ7N6
KQkqlSwvq0JI1msVXCsvfIO8ztGN1jf3auZ1izWjRh103mLuKF7Wl9e5lDoV
hS8sOnqXFp5IWbfd4actEmIZW7YexuCMdpGaNeOOCxo4qDr0i6f+qy8wOMPo
9osG98ajv9k0qtbBbf3nF5aGsyil1RpOLwf+si8+fpdszHBplLFhh19851Ih
OgtClQVkRSvIq3/vby4ZTjG4zSJDt3n+7aV5rvuuu25xFqU3mMF5GfUT16Zw
1b3gsH6KzpWtT25aJ29R+TfDdlf//Z1VtBf9M/2wAAAAAGBQYHD/rchBqRI3
z/PCH3zfnzt3rgrGqTVuErXwLfwhxqhn5Dbl94b8+cwzz9zQZ/afTkro7ded
ccwUVQ9OG7nzt697X46PSYBSws0VUpl33nhr+t1/Oe/UExIRbWQyGZNmVjvy
jvtfWWWJbsoTKMfNOVOVNtMNCqX5y6zeuddeelljbMJ+F/3jnW6WstQqOQgn
A9Lbhf76ybvyJEBtp2MuemI1B8XIbnyvaHA2Z61XBudxAT5KNshxOFM4qx+5
7SKpDEMjZHDPLuRK6NKhPMot6ZlkcIbIkw4WZ1EK11IGFyiY1DwOL7rK4PIL
V718S22DNmL/7820BMXBcj3CT60RKgDnlBuco55UKUdCJXQyYtGMA4dwsCrW
ktj0q2+ucdM8GVFwRew+K+PTusKMyHYte2vGpqNisu0NyTFf+OrxCztlU0R7
n6XCberTYdqWZbtOqbyFp4JPdPhCRqx+/4uN2niqEDF682OvWihEl84W6VHg
kvJSuj0i9/7FR23XQmGv5q2POXe2ECuEMhzPNNiVrD5htr77yI2bDZX7GaqN
P2RGN0fMLKoCRxFALrsgDS6IwTVuN+2VlV1SNuXbLXlWNmWFsVNSh1+ZPm1s
hC9HvOXwy+5aokpLeJZj5rhzCiK39Ok/XTmSPrSbRYdt99jz76n5nDqF5D0/
mKo7iMF1i2IojuvK0/+oKLvs+myq5+3thmibaLIXtj/xsscWUoqYns/pQwMA
AACAMmBw/93I8Vq4bE1Np5TjVcdxrrjiCnXRa2tr1Z/q15qaGnUbJBIJtRRO
PS+dTv1wzTXXlC+dA+uLK8fI5pobzjxuq+IsysnHXT5HjcCNDqH3cIk3l1NS
ZNpWzPu/878rvbpxSLMWHT9yl288+YHJGT8ywuviyXJydF3wRJptheqFtatE
HxTncqiAGBUs7xXZF7+9VyOX0tvx0LPuoeVXnNPRcmz2I4eKE7ihwTlkHh7F
lvIGR3YKi68689BmtfCq8egXl5DBmVZGGVwYg5Pu5LlFg+MYnFQbilXRGVFT
KdBF2STXiI5ZRx+6W82kKdOXOu3sSaJAu0yLosG5/Q1OBAbncpIR2qbQac1+
+EsUVWzUGrbddur5y+nEKe2l6xgGr/nKZHspBUdOF1bqN9deUEMxSvnf+Ktv
e6i9EAQ0DYdXetl2GIOTreSEP1xuwOekL4WsWDFr36FUCE+Lj570rV+97XM5
9UJKOKbaCV2O7Ow7zt6PQtfx4ROOvmAB1+yjuYjpNcJTS8ZkJ616e/rvaPZj
dIg2dO9/Lg0ymUiD83y1IC//zpO3j1Lr4Gqn/On5D7uCxJvUA6bPmVns1JtP
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
ftPKrk+zcH3T9ETK9DLpnrOO+tJEleYlOXbaIy9TiI3rLPTprK2+VONeu6t1
/y9uz8KY1OIt2+x75BpTKZ5O2T75Kwcq7uB3iML7P/rfPZprh2hDd7zn7UKX
bJXlkQYCAAAA4HMHBgcU4eRJleckdDRdp2QF8plCofDQQw81Nzffe++9G6yV
1cdHzKKUdHaStemFnE825GUzqWef+v3Jx+43lOqBRRKRoVp8RGLcNk+8/r5O
ddB8Sk4i7LSXW7y89fZf/fqr2+7SlNSSEU2Osc89+8LWJd1y9J02aIxdXLhG
y7w8vb1ryXsnHrgfpamPj9BqRmnRRjkmr20csusuO77x6nO+nbln2u9rE1o8
FtFiNVqkLto46vsXXtGWCwNwor/BUSIRTgjpulY+mEhpdT542zWyLZH6sXc+
MTuI+7iOMKQlSYtTZQl4OmV+2bTrLhga02KJuBbVKAAXi8cTyVgsITVM/l0T
iyr90GLJGi0q29Mg9eGSK2/vNUi6VEJ7N8f5M5yc2b14/322obWYZHDNO+5x
6Kpuzw6Wj+Vo8ReFCM10pnDVjbdqtSN+ctWNr816nxXMdDIdD/3tj5uPHHHQ
Vw6aPWuR1KyC7Vl+cJ4GlRpgg/O9oGJbacorbWIaVIzb6V15y+WnDVVNrpug
Ne7wu/tf0qmTdNfIqJhjZ9vq2y8/YwIpVUyLNmjRTfc/7NxZC9NZT+RMljA9
LQqZRW8+f9jXdm5oJJHVIuO//cO/vDu3lW8dMuXuD+f96aZrh9VoMRWDSw6b
uNNe0x59JudTs1VxcdnVKz5458wTpjZQhtioFhvWNGWfp2Yu4lREjmsWPF+s
WN1xw9VXSKOfRC1u0mpa9v/6tz9YVejhLwroxOTloihbr9W9dOcpm9bXSM1O
anUtO/3PUelsb1AT3Ja9KgVZ0KxWr9tZ9o/tKYfmZl8+7qblZKZdhux2FBUB
AAAANgQwOFCJ0jf5Z6h14Q8ffPDBnDlzNljLqo+PmEVpmiw0HNBZvWrl+HFj
I7z+qaWeFkvVU3iqTksM1+JNWqwxUkPDepKEeha2mNbcMHRUYuj/3XDpjKcf
WbRwgW0JxxNyIO+wgOQsy1Ul37w0iYyUrEL2kb/8pbZltFZTH29oufiya594
4lnL9B3LloJg6ak77vh1NEYectTx35jx8kwjWCs3iMFRBMxy3CAPpE3BHZsG
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
lwTgkugG9hmBomDb9qJFi3qE4SSjcsqUKQoBYgAAAAAAsJXSe68QLX3lnptv
vlkWxscee6xKyZ3coO9YJIMtTzo38txzz00+ZJAbRx55pOM4YRhKr0PsgwMA
AAAAAFs9sujN5/OdnZ2yKn722WeLPSgAuiHh4OXLlxuFjt4VFRWVlZWTJk1S
hdAwAsQAAAAAAOBjhW3bN91007HHHhtoij0cABi5FJNqqJdcconoW1lZ2WGH
HeZ5nmma8kg0nQcAAAAAAB8Tktyzjo6Ol19+WSEbDZQSkkgpIba33347aV94
zz33qO41eQAAAAAAANjqkX1wEuMQcUt3EACg6CQN5ZUOtE2YMIH0bdy4cY7j
SACOHoBLFwAAAAAAfExI9hDJGti2bYXKfqBkSCqZkJ3Jtbps2bK6ujopQalS
HS7okYgdAwAAAACAjwO9173ISQMlQlIKlRBHC4Lgsssucxwn2Rwnj5QPHwAA
AAAAANjqSUpASE4aKkKAksLXpO9JPnPI5XJKh4x7PAAAAAAAAICtmyRtEith
UJpIDE4VrlWRuORylTuxDw4AAAAAoDRJPnJP8qa2zP6XMAzprWXLWInkGcow
ZOEaaqIi0efWuSLup+u9KypJwysK6WFE+vqRy2mLT0w30jYk11Kx5ieZinQz
iyLOT3LK0qepiNdP4qryYzK2LT8zyTDS795jeEVB6b6WK1euXLBgwdKlS5cv
X75o0aIlRWLx4sU0gLfeeuuJJ56YPHny1KlTp02bRt8fLB7Tp0+fNGnSlVde
ee65506YMOHiiy8+77zzLiwSl156Kb37+eefL01Ikz6PRFlZWXl5Od2YOHFi
hJ2tAACwddGjh68UVNwCK4Q09KZF/MxfNDYdMiuRf+x6tJPbAudl0yfL0xR9
cpJ6iXKtFncwaSJtT6UwRTSMjo4OWoHT6ldW4EuLBy3CSQRefPHFxx9/nNbe
Dz/88H/+8x/6/u8iMWPGDBrG7bff/tvf/vY8DS2DL7jggglFQhbhxx9/vKzA
Kysrhw0bZhQPWvZXV1dXVVWl7ynieAw9J4me0GDoNt1TViQM3UWRSIYnP5YX
CRlDn9cMDA4AALZiolTUQG1BeaE3cjSl9i9LUqmviJAFdHZ2rl27lhbACxcu
pAXwvHnzlhUJGsP8+fPnzJlDK3BaAE/RPPDAA1OLxEMPPUTf//rXv15++eXn
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
wD0UBhifm/sWv05H0JwPWMc4JbUQg+OteK7ySBbDrO4XUUhzzLsicUFhW5xu
jR6rFdu0+cZZh1V+kifz4Ir9T54vr2k5Ks99AE3V6KpM3mTT1YHOZj6UIO6/
5/LZ4UYTsg/u3ptO3YYNrrbcOOj+Z3U3gZ5t2BKxYonjYiWWJULdTtdCpKxs
RoYdeLrspg786aRfh+tecmal5ebNyDdvu2riGMOoH7vvK0ubaHo7dRjODpKq
m2E6DBcVwnAAAAAAAAD0M/TqvSuLMsryPrjMCpUxo2Y2gRWpSiY+LbHtRsUR
n5xyOzggl1drIl20RK1VATc4y3PAhl41E3oZFcShEK5uQZ6VaVW5ziw/lF+Z
F9B5MqxmW1sHB27CtbqnwAbV8dI/zjiKDa5qlFF/yM4nXLliEwaXWee9+fdD
qozhYnC135ryso7xcYLfavp1D4MzzaznOdOmPThhwoXV5EKaIUOGnHPOOS++
+LLk773PFEqieepV5/zEMMbUDB339OxFLUqt0mEqHkFHexB0dvIgfJXPq1CC
m86br8y++YZraqorjDKjvKr6kt9c8dCjT+S9cNojj8955VWu1+Gzf61cOv/M
X548whjNvc4HG5U86nGG8VnudT7QMMqrJ0y8rbWdDjLjhY2BFzcXCN22Jx6Z
fMmEs2qrysoMo5qoqr/811fOmvVqU2suKBSojENyYcATa77xy4ONnfj1D6k8
4JS33JA31q1teOKOqd859mv8XlVGXe2wSy6/7unX5uooZ5fBOXx2uIu53rTX
SQa3bZlRz2VCD5z83Iq1alMGt75h9UMP/ftLX/oSjZGOp6528Cknnzp9zvTW
xg1Kx3HdkFN2M7rYp3LoOmqMVKMf6qopebVk9vSRNCl1Y8/89XWdOq8363Mi
ZVQIL8LgAAAAAAAA+NCJ98HlX73x50dswxIx2qjZa/fxp68Tx+Ta+06kLIdM
kxbufqj8VuWsmnn/FcMMo4IUZeie9Z/+2Uvtuo4KG1yr4k5nKlVq4+mGFx89
eofPGsYOl0x++iWXA1Uq27Hiwds+t9u2ZWVj/ueM2+dtYMHs5NiVksbgumJ/
GEsuv6mluOeaRfd0BiwLHDhzWzjkN/fBXeqGGsY+I/b6ztr2TldlMsrtlN1v
9P+RF/c2sG1lrVDe2xf8/sryutG33jrNsvjYW037pcfuP3bb6v25rfZOdz1j
L2FnIWtZqLx8JxfWn3Pd6UfV88xsbwz8xqxlBbENPZ266LMckxdbLcrvePW1
J7fd72yj9rArb5/yTq61U2VN1f7a0/d/awdjL8P4+Qk/XWir5dIBIeigmbT5
9mplvXTap4brLMrtanf58nJH3ffEQyPHjKjgNt8VQzimZgwdUD+YNNUwjr/w
b+8ofpG13GDCUeE6ZZOqh9ygQNl333Ye95Uj5ava99/Pr5UUWT/gCiQNetzK
Xa3sxXSIf5k8/bhTfzvjqWUyP52tTbfdcP6YwWzlB+1yxCtv8uSu17HAvNvM
gUs7y93fpHk59zII1fJnTzrAqK4oN7Y95KF3eDy2o+8PdNFKfmAm4PTLQvQz
TOdsAgAAAAAAAN4PuVAbnPPGzad+frgY3LCDD/7phPVicFy6JGVwlqPa1qj2
VeN2H1FTZtQOGmxUbnflpOc3aCvhLL/I0WmWvFGPq9CrjjdevnrvIZVDjO2u
v2XGAp1kyQU88mQEa9968p7BZfUVFXuc/tu/N3Bsyc/7umZ91N3gAt2VIMiK
wZnSGUDpJghq9XN/PGWYUWFUHfTlH/1Wm10ux9FHCURyJiRbA8sEGdPaO248
1ajf8fI//SvrqoAL5uvX8Sy18OUfbv+JQcaw+1623lKqic1stQpMTn/Mzr72
tM8PLBjc80slldEkUc3mOGeQvbWVvK71pSembDO62jAO//XNTzf45D5Rnjep
mcpvbJ55596G8Ykho37060nzaCyRNji3jbNeSX06Xjjz0G13NIwyY/ttDhz/
iyuu2+/Iw+6ZejcLT4brr8x+9IljvvJVMrgdSZkrdvvCiZcudJXOjPUja7XK
NHCGIxtcngxueMHgps5az1rtNeVs3pVHJ8OlufEblLfqD1dfts+RX1nVqbcs
6mYAIZvWutuv/el2hlFP4li505+nvNIkTeFp+sx2dvmA+/a1+7pVHJmateyu
C4+iAzbqdz/r9pfWcndBxdViAt3zrmBwcVBYNhe+792OAAAAAAAAAA0Xrgha
lfvmn3/1hdjg6vbZ9isnrgrF4Lh1WsQ9yCzddCxQzQ3fO/IodoTKYUb5iN/c
8M9OpTb4Hle64D7Rom+0aifhWrG2+bHP7G2MLKuoNPab8tQGMoJ25erCiYHK
rlUbXjlm/x1qjIFG3f7/eqOxnd8uI1mmvlavgsEpbn7NPmhJDMgKZbNVm7Ln
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
0unu2A==
     "], {{0, 752}, {1174, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[0.5],
   ImageSizeRaw->{1174, 752},
   PlotRange->{{0, 1174}, {0, 752}}]],ExpressionUUID->
  "3a515853-3caf-4e0b-b999-d179cde4a932"]
}], "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618241460577276*^9, 3.618241462917129*^9}, {
   3.618241519840568*^9, 3.6182415711574173`*^9}, 3.6182416039437313`*^9, {
   3.618241665168874*^9, 3.6182417459789658`*^9}, {3.618241822717626*^9, 
   3.618241834068059*^9}, {3.6184004155435762`*^9, 3.618400417771536*^9}, 
   3.6184004782777767`*^9, {3.6184131739408484`*^9, 3.618413284415845*^9}, {
   3.618482622413907*^9, 3.618482731323111*^9}, {3.618482764744823*^9, 
   3.61848276556881*^9}, {3.6184828102680283`*^9, 3.618482841896063*^9}, {
   3.618482899573669*^9, 3.6184829265821943`*^9}, {3.6184830334337597`*^9, 
   3.618483098844674*^9}, {3.618483130549622*^9, 3.618483179897643*^9}, {
   3.618483232025752*^9, 3.618483245647653*^9}, {3.618483280241576*^9, 
   3.618483423606819*^9}, 3.618483459761385*^9, 3.618568683118335*^9, {
   3.6187274139751368`*^9, 3.618727478297193*^9}, {3.6187275236480837`*^9, 
   3.618727581614316*^9}, {3.6187279926988*^9, 3.618728005130102*^9}, {
   3.620404747047412*^9, 3.6204047907244263`*^9}, {3.6204066642735567`*^9, 
   3.620406666553021*^9}, {3.620406711321741*^9, 3.6204068101294327`*^9}, {
   3.620406877108245*^9, 3.6204068854345837`*^9}, {3.6205724585047703`*^9, 
   3.620572470837899*^9}, 3.620572530701169*^9, 3.620572573380855*^9, {
   3.6205726355274878`*^9, 3.620572636528295*^9}, {3.621023061802677*^9, 
   3.62102306235331*^9}, {3.621078730130995*^9, 3.62107873644318*^9}, {
   3.621078776429585*^9, 3.621078777164329*^9}, 3.621078858961207*^9, {
   3.684079828547227*^9, 3.6840798344487057`*^9}, {3.684079865013775*^9, 
   3.684079871185231*^9}, {3.684079947999816*^9, 3.684079949507185*^9}},
 CellTags->"Diagram",ExpressionUUID->"ddc25368-82b6-4636-9324-a3bd630613b0"],

Cell[TextData[{
 "The Geiger tube should be connected to the BNC connector on the back of the \
counter, and the DIG/SONIC1 input of the LabPro interface to the jack on the \
back of the counter.The LabPro interface is connected to the USB port of the \
computer.\n\nMake sure the counter is turned on. (The LabPro interface is \
always on.)\nOn the menu go to Experiment > Set Up Sensors > Show All \
Interfaces (or click on the Vernier icon ",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAIiEWBmAWIP3z48J/emJmd5z+LuNx/Jl6h/4w8gv+ZRKX/M/MI/edVUCPL
PAYG1v+qGXk4MdCbpJvJwgvWu/XKTTC9/d5DMH387QcwzcTOR7KZTJyCeN3J
SIaZbOxceM1k5eIm2UxuPr7/rnXN/++/fPUfGTx/9/5/ypQZ/3lEREmPc0YG
sHsMC8r+B7Z1w7FlWTXE74xkxBEDA36/s7CSbCYHBwdeM1mYmUk2k5WFHa+Z
zEB5kv3OxIY/LTEykRGeTHjNZGIiPTw5OXjxmsnFSXqa5+bkwR/vzGSEJ4G0
xEKG30GYkZHxP7DMBWMeThYwzcnGCMTkmUcuBgDyZpZ9
     "], {{0, 18}, {21, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->{49., Automatic},
   ImageSizeRaw->{21, 18},
   PlotRange->{{0, 21}, {0, 18}}]], "Input",ExpressionUUID->
  "b9232d9f-efa4-4bd7-b95e-566f7ba4f119"],
 ") and set the DIG/SONIC1 to radiation.\nChoose suitable values for \
Collection LENGTH and count interval (SAMPLING RATE). Click button COLLECT to \
collect data. \nTo save your data, choose FILE : EXPORT DATA AS .csv ... (not \
SAVE).\n\t\nYou will now do a series of \[OpenCurlyDoubleQuote]runs\
\[CloseCurlyDoubleQuote] each of which measures the decay counts N in a set \
of n consecutive intervals making up the total collection time of the run. \
The decay rates R = N/\[CapitalDelta]t  (\[CapitalDelta]t is the time \
interval of one measurement of N). \n\t\n\tA. Background 50 sec measurement. \
\n\tRemove the radioactive source from the sample holder. \n\tCollect data \
for 50 sec at 20 Hz, 1000 = 50x20 data points, each collected for 1/20=0.05 \
sec\n\tThe count rate in a given interval is the number of counts divided by \
the count interval. \n\tExport data to a file BG_50.csv\n\t\n\tB. \
\[Gamma]-decay 50 sec measurement.\n\tPlace the radioactive source looking \
down on the top shelf in the sample holder under the Geiger tube.  \n\tRecord \
the count (decay) rate of the source penetrating through the Al plate for 50 \
sec at 20 Hz. \n\tExport data to a file down_50.csv \n\t\n\tC. \[Gamma]+\
\[Beta]-decay 50 sec measurement.\n\tFlip the radioactive source looking up, \
keep it on the same shelf from above in the sample holder under the Geiger \
tube.  \n\tRecord the count (decay) rate of the source for 50 sec at 20 Hz. \n\
\tExport data to a file up_50.csv \n\n\tD. \[Gamma]+\[Beta]-decay 10 sec \
measurement.\n\tWithout touching the radioactive source repeat step C but \
collect data for 10 sec at 20 Hz, 200 = 10x20 data points. \n\tExport data to \
a file up_10_20Hz.csv \n\n\tE. \[Gamma]+\[Beta]-decay 10 sec measurement at 5 \
Hz.\n\tWithout touching the radioactive source repeat step D but collect data \
for 10 sec at 5 Hz, 50 = 10x5 data points. \n\tExport data to a file \
up_10_5Hz.csv "
}], "Text",
 CellChangeTimes->{{3.620572761384963*^9, 3.620573084232074*^9}, {
   3.620573166549939*^9, 3.6205732990019293`*^9}, {3.620573341307933*^9, 
   3.620573343956039*^9}, {3.620573375254064*^9, 3.620573564262062*^9}, {
   3.620573603414966*^9, 3.620573961229167*^9}, {3.620574039550355*^9, 
   3.620574076156464*^9}, {3.620574107346045*^9, 3.620574141336937*^9}, {
   3.6205742005048513`*^9, 3.620574203488677*^9}, {3.6205742732811747`*^9, 
   3.620574313101165*^9}, 3.620577198208076*^9, 3.62057723086029*^9, 
   3.62057726696001*^9, {3.621006864572143*^9, 3.621006875695939*^9}, {
   3.621023649444707*^9, 3.621023650065781*^9}, {3.684079839734273*^9, 
   3.684079844903803*^9}, 3.684080029144153*^9, {3.684555463544696*^9, 
   3.684555476646215*^9}, {3.684555819388694*^9, 3.6845558456298437`*^9}, {
   3.684555887941339*^9, 
   3.684555935221479*^9}},ExpressionUUID->"bfe86611-645c-40e3-97b0-\
00602436d9d3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dialog:", "Section",
 CellChangeTimes->{{3.617830106543085*^9, 3.617830112720476*^9}, {
   3.617831171840748*^9, 3.617831174610969*^9}, 3.618103416896851*^9, 
   3.618103471239194*^9, {3.6182182374600983`*^9, 3.618218246530492*^9}, 
   3.61840031768646*^9, {3.6184845631915417`*^9, 3.618484566342008*^9}, 
   3.61848504341685*^9},ExpressionUUID->"3e5f4198-aedb-44d8-8a76-\
a5a3a773e8aa"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Step1.\nImport the *.csv data into Mathematica file.\n\
Use the command Import[\[OpenCurlyDoubleQuote]Insert/filepath/filename\
\[CloseCurlyDoubleQuote]] from a file or {InputString[]} from a dialog box.\n\
(See the example below.)",
 Background->None]], "Subsubtitle",
 CellChangeTimes->{{3.6185032352645617`*^9, 3.6185032518917503`*^9}, 
   3.618503418141266*^9, {3.62057462183501*^9, 3.620574629249517*^9}, 
   3.620581170323085*^9, {3.6207122688913393`*^9, 3.620712298955114*^9}, {
   3.6840803200579443`*^9, 3.684080334066922*^9}, {3.6840804893165903`*^9, 
   3.6840805820561457`*^9}, {3.6840807544820967`*^9, 3.684080755632614*^9}, {
   3.684080858678376*^9, 3.684080861457212*^9}, {3.684080898883984*^9, 
   3.684080907861923*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"12529ad7-7489-4189-851d-4f64a6fe5bee"],

Cell[TextData[{
 "I",
 StyleBox["mport  ",
  FontColor->GrayLevel[0]],
 "imports data from a *.csv file",
 StyleBox[" into ",
  FontColor->GrayLevel[0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->GrayLevel[0]],
 StyleBox[" file.\nAn example of the code is given below.\n- ",
  FontColor->GrayLevel[0]],
 "Part[expr, All,  {2}] ",
 StyleBox["gives the second column of the data.\n- Rest removes the title \
line.\n- Flatten ",
  FontColor->GrayLevel[0]],
 "flattens out external nested lists, result is a vector of counts."
}], "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618241460577276*^9, 3.618241462917129*^9}, {
   3.618241519840568*^9, 3.6182415711574173`*^9}, 3.6182416039437313`*^9, {
   3.618241665168874*^9, 3.6182417459789658`*^9}, {3.618241822717626*^9, 
   3.618241834068059*^9}, {3.6184004155435762`*^9, 3.618400417771536*^9}, 
   3.6184004782777767`*^9, {3.6184131739408484`*^9, 3.618413284415845*^9}, {
   3.618482622413907*^9, 3.618482731323111*^9}, {3.618482764744823*^9, 
   3.61848276556881*^9}, {3.6184828102680283`*^9, 3.618482841896063*^9}, {
   3.618482899573669*^9, 3.6184829265821943`*^9}, {3.6184830334337597`*^9, 
   3.618483098844674*^9}, {3.618483130549622*^9, 3.618483179897643*^9}, {
   3.618483232025752*^9, 3.618483245647653*^9}, {3.618483280241576*^9, 
   3.618483423606819*^9}, 3.618483459761385*^9, {3.618484654094583*^9, 
   3.6184847521695547`*^9}, {3.618485110601131*^9, 3.618485150732936*^9}, {
   3.618503179580216*^9, 3.618503195799774*^9}, {3.618503241627769*^9, 
   3.618503243363646*^9}, {3.620574364259059*^9, 3.620574399255863*^9}, {
   3.620581219742319*^9, 3.620581227476955*^9}, {3.6207129497142*^9, 
   3.620713017215967*^9}, {3.620713076208192*^9, 3.620713077782989*^9}, {
   3.620713123364888*^9, 3.620713200703363*^9}, {3.620713243364438*^9, 
   3.620713317475985*^9}, {3.684080312194046*^9, 3.6840803125803757`*^9}, {
   3.684080662630033*^9, 
   3.6840807196766443`*^9}},ExpressionUUID->"c198403f-6fe6-4051-aca0-\
8938a74fd560"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bg50", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<E:\\\\BoxDrive\\\\Box\\\\Obsidian\\\\Mind\\\\Physics\\\\\
Classical Physics Lab I\\\\Lab 4\\\\BG_50.csv\>\"", "]"}], ",", " ", "All", 
       ",", "  ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"down50", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<E:\\\\BoxDrive\\\\Box\\\\Obsidian\\\\Mind\\\\Physics\\\\\
Classical Physics Lab I\\\\Lab 4\\\\down_50.csv\>\"", "]"}], ",", " ", "All", 
       ",", "  ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"up50", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<E:\\\\BoxDrive\\\\Box\\\\Obsidian\\\\Mind\\\\Physics\\\\\
Classical Physics Lab I\\\\Lab 4\\\\up_50.csv\>\"", "]"}], ",", " ", "All", 
       ",", "  ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"up10Hz20", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<E:\\\\BoxDrive\\\\Box\\\\Obsidian\\\\Mind\\\\Physics\\\\\
Classical Physics Lab I\\\\Lab 4\\\\up_10_20Hz.csv\>\"", "]"}], ",", " ", 
       "All", ",", "  ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], ";", 
  RowBox[{"up10Hz5", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Rest", "[", 
     RowBox[{"Part", "[", 
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<E:\\\\BoxDrive\\\\Box\\\\Obsidian\\\\Mind\\\\Physics\\\\\
Classical Physics Lab I\\\\Lab 4\\\\up_10_5Hz.csv\>\"", "]"}], ",", " ", 
       "All", ",", "  ", 
       RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.62033051175885*^9, 3.6203305443743277`*^9, {3.6203306168539133`*^9, 
   3.620330681189245*^9}, {3.620330752893395*^9, 3.62033080093819*^9}, {
   3.620333945589349*^9, 3.620333970340602*^9}, {3.6203376856547127`*^9, 
   3.620337693989176*^9}, 3.620337733099895*^9, {3.620337964783478*^9, 
   3.6203379909905453`*^9}, {3.620338709479555*^9, 3.6203387284060383`*^9}, {
   3.620574420290945*^9, 3.620574421577973*^9}, {3.620574463144202*^9, 
   3.6205745449581013`*^9}, 3.936884015874958*^9, {3.9368843820509205`*^9, 
   3.9368844068795624`*^9}, {3.9368844578252144`*^9, 
   3.9368845801843185`*^9}, {3.936891835039116*^9, 3.93689184520907*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"39917619-cd1f-41aa-819d-3c5cdc2422e4"],

Cell[BoxData["..."], "Input",
 CellChangeTimes->{{3.6205745474312057`*^9, 3.620574547755649*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"fedf2b2e-149d-4a28-bdaa-a6e5bfb09394"],

Cell[TextData[{
 "I",
 StyleBox["mport  ",
  FontColor->GrayLevel[0]],
 "all your data files and assign logical names."
}], "Text",
 CellChangeTimes->{{3.617829541623355*^9, 3.61782956409901*^9}, {
   3.617829617449719*^9, 3.617829624335259*^9}, {3.617829667956365*^9, 
   3.6178296728725643`*^9}, {3.61782977692098*^9, 3.617829791054657*^9}, {
   3.617829846225792*^9, 3.617829846226604*^9}, {3.6178299251294518`*^9, 
   3.617829943694152*^9}, {3.617829994406271*^9, 3.617830022465289*^9}, 
   3.61814242012182*^9, {3.618155113838689*^9, 3.618155113840015*^9}, {
   3.6181551888123302`*^9, 3.6181551971321383`*^9}, {3.618155260235442*^9, 
   3.618155260845755*^9}, {3.618155338451931*^9, 3.618155445098419*^9}, {
   3.6181554760000477`*^9, 3.6181554760013638`*^9}, {3.6181555082955933`*^9, 
   3.6181555272210083`*^9}, {3.6181555585051622`*^9, 
   3.6181555641970863`*^9}, {3.618241460577276*^9, 3.618241462917129*^9}, {
   3.618241519840568*^9, 3.6182415711574173`*^9}, 3.6182416039437313`*^9, {
   3.618241665168874*^9, 3.6182417459789658`*^9}, {3.618241822717626*^9, 
   3.618241834068059*^9}, {3.6184004155435762`*^9, 3.618400417771536*^9}, 
   3.6184004782777767`*^9, {3.6184131739408484`*^9, 3.618413284415845*^9}, {
   3.618482622413907*^9, 3.618482731323111*^9}, {3.618482764744823*^9, 
   3.61848276556881*^9}, {3.6184828102680283`*^9, 3.618482841896063*^9}, {
   3.618482899573669*^9, 3.6184829265821943`*^9}, {3.6184830334337597`*^9, 
   3.618483098844674*^9}, {3.618483130549622*^9, 3.618483179897643*^9}, {
   3.618483232025752*^9, 3.618483245647653*^9}, {3.618483280241576*^9, 
   3.618483423606819*^9}, 3.618483459761385*^9, {3.618484654094583*^9, 
   3.6184847521695547`*^9}, {3.618485110601131*^9, 3.618485150732936*^9}, {
   3.618503179580216*^9, 3.618503195799774*^9}, {3.618503241627769*^9, 
   3.618503243363646*^9}, {3.620574364259059*^9, 3.620574399255863*^9}, {
   3.620581219742319*^9, 3.620581227476955*^9}, {3.6207129497142*^9, 
   3.620713017215967*^9}, {3.620713076208192*^9, 3.620713077782989*^9}, {
   3.620713123364888*^9, 3.620713200703363*^9}, {3.620713243364438*^9, 
   3.620713317475985*^9}, {3.620713367580391*^9, 3.620713389786758*^9}, {
   3.6840806820988827`*^9, 
   3.6840806966925097`*^9}},ExpressionUUID->"73f22609-cc95-4332-9366-\
66014b1728ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Step2.
- For all the cases calculate # of measurements, each measurement time, total \
counts, mean, Sqrt[mean], \[Sigma], uncertainty, decay rate with uncertainty.
- Present results in organized tables with proper labels.
- Plot # of counts distribution and the probability distribution for each case.
(See the example below.)
- Put clear explanations for each data set, explain all the table columns, \
like how Rate and its error is calculated, and report the table columns with \
correct number of significant figures if needed.\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6185032352645617`*^9, 3.6185032518917503`*^9}, 
   3.618503418141266*^9, {3.62057462183501*^9, 3.620574848325094*^9}, {
   3.620574885544086*^9, 3.6205749577847977`*^9}, 3.620577250060502*^9, {
   3.620713567297038*^9, 3.620713572960079*^9}, {3.6840804956407537`*^9, 
   3.684080496045434*^9}, {3.684080526903598*^9, 3.684080536820147*^9}, {
   3.68408064146176*^9, 3.6840806418427963`*^9}, {3.6840807420440607`*^9, 
   3.684080750782913*^9}, {3.684080839262307*^9, 3.6840808538717623`*^9}, {
   3.684081255256135*^9, 3.6840812708446627`*^9}, {3.684518904408434*^9, 
   3.684518966089065*^9}, {3.6845190615456867`*^9, 3.6845190650569553`*^9}, {
   3.684519198184907*^9, 3.684519310332003*^9}, {3.684521248800001*^9, 
   3.6845212544245863`*^9}, {3.6845223343950243`*^9, 3.684522356172658*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"9e025602-fdb8-4e4e-953e-deb47791c741"],

Cell[CellGroupData[{

Cell["Example:", "Subtitle",
 CellChangeTimes->{{3.618516269401657*^9, 
  3.61851627482935*^9}},ExpressionUUID->"fc7b4003-83d4-4df6-9be1-\
ae95d7f99886"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\[Gamma]-decay, 10 sec\"\>", TextForm]], "InlineText",
       ExpressionUUID->"649d4911-0424-4a53-884e-1cf6cc29c52c"],
      Text["\[Gamma]-decay, 10 sec"]], "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"200", "0.05`", "213", 
     RowBox[{"1.065`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox["\<\"0.073\"\>",
        0.07297259759663212,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "1.0319883720275147`", "0.9978746258143962`", 
     RowBox[{"21.299999999999997`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox["\<\"1.5\"\>",
        1.4594519519326425`,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.620462152998745*^9, 
  3.620718834684332*^9},ExpressionUUID->"4217ada3-cd78-4c12-ad4a-\
2039df937191"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "0", "1", "2", "3", "4", "5"},
    {"\<\"Number of occurences getting # counts\"\>", "65", "80", "36", "16", 
     "2", "1"},
    {"\<\"Probability Density\"\>", "0.325`", "0.4`", "0.18`", "0.08`", 
     "0.01`", "0.005`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6204621530036697`*^9},ExpressionUUID->"fee87097-1b33-4728-80e0-\
d56267951c0c"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, {}, 
     {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{2., 0.}, {2., 36.}}], 
      LineBox[{{1., 0.}, {1., 80.}}], LineBox[{{3., 0.}, {3., 16.}}], 
      LineBox[{{0., 0.}, {0., 65.}}], LineBox[{{4., 0.}, {4., 2.}}], 
      LineBox[{{5., 0.}, {5., 1.}}]}}, {
     {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
      1.6], GeometricTransformationBox[InsetBox[
        StyleBox["\<\"\[FilledDiamond]\"\>",
         StripOnInput->False,
         FontSize->18], {0., 0.}], {{{2., 36.}}, {{1., 80.}}, {{3., 16.}}, {{
       0., 65.}}, {{4., 2.}}, {{5., 1.}}}]}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Number of \[Nu] counts sec occurences\"", TraditionalForm], 
     None}, {
     FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 5.}, {0, 80.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.620462153073535*^9},ExpressionUUID->"f5a4b686-f7fe-437e-88c8-\
2d042a73ec5b"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, {}, {}, 
      {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{2., 0.}, {2., 0.18}}], 
       LineBox[{{1., 0.}, {1., 0.4}}], LineBox[{{3., 0.}, {3., 0.08}}], 
       LineBox[{{0., 0.}, {0., 0.325}}], LineBox[{{4., 0.}, {4., 0.01}}], 
       LineBox[{{5., 0.}, {5., 0.005}}]}}, {
      {RGBColor[1, 0, 0], PointSize[0.019444444444444445`], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[FilledDiamond]\"\>",
          StripOnInput->False,
          FontSize->18], {0., 0.}], {{{2., 0.18}}, {{1., 0.4}}, {{3., 
        0.08}}, {{0., 0.325}}, {{4., 0.01}}, {{5., 0.005}}}]}, {}}}, {}}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{-0.25, 5.2458469972255606*^-48}, \
{0.25, 0.3447278547672202}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{0.75, 5.2458469972255606*^-48}, \
{1.25, 0.36713516532708945}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{1.75, 5.2458469972255606*^-48}, \
{2.25, 0.19549947553667515}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{2.75, 5.2458469972255606*^-48}, \
{3.25, 0.06940231381551967}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{3.75, 5.2458469972255606*^-48}, \
{4.25, 0.018478366053382114}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{4.75, 5.2458469972255606*^-48}, \
{5.25, 0.003935891969370391}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{5.75, 5.2458469972255606*^-48}, \
{6.25, 0.0006986208245632443}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{6.75, 5.2458469972255606*^-48}, \
{7.25, 0.00010629016830855073}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{7.75, 5.2458469972255606*^-48}, \
{8.25, 0.000014149878656075817}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{8.75, 5.2458469972255606*^-48}, \
{9.25, 1.6744023076356383*^-6}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{9.75, 5.2458469972255606*^-48}, \
{10.25, 1.7832384576319548*^-7}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{10.75, 5.2458469972255606*^-48}, \
{11.25, 1.726499052161847*^-8}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{11.75, 5.2458469972255606*^-48}, \
{12.25, 1.5322679087936393*^-9}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{12.75, 5.2458469972255606*^-48}, \
{13.25, 1.2552810175886352*^-10}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{13.75, 5.2458469972255606*^-48}, \
{14.25, 9.549102026656403*^-12}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{14.75, 5.2458469972255606*^-48}, \
{15.25, 6.779862438926048*^-13}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{15.75, 5.2458469972255606*^-48}, \
{16.25, 4.5128459359101505*^-14}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{16.75, 5.2458469972255606*^-48}, \
{17.25, 2.8271652480848885*^-15}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{17.75, 5.2458469972255606*^-48}, \
{18.25, 1.6727394384502255*^-16}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{18.75, 5.2458469972255606*^-48}, \
{19.25, 9.376144747102582*^-18}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{19.75, 5.2458469972255606*^-48}, \
{20.25, 4.992797077832124*^-19}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{20.75, 5.2458469972255606*^-48}, \
{21.25, 2.5320613751862914*^-20}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{21.75, 5.2458469972255606*^-48}, \
{22.25, 1.2257478929879091*^-21}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{22.75, 5.2458469972255606*^-48}, \
{23.25, 5.675745678400537*^-23}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{23.75, 5.2458469972255606*^-48}, \
{24.25, 2.518612144790238*^-24}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{24.75, 5.2458469972255606*^-48}, \
{25.25, 1.0729287736806413*^-25}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{25.75, 5.2458469972255606*^-48}, \
{26.25, 4.394881322961088*^-27}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{26.75, 5.2458469972255606*^-48}, \
{27.25, 1.7335365218346517*^-28}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{27.75, 5.2458469972255606*^-48}, \
{28.25, 6.59362998483537*^-30}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{28.75, 5.2458469972255606*^-48}, \
{29.25, 2.42145377029299*^-31}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{29.75, 5.2458469972255606*^-48}, \
{30.25, 8.596160884540114*^-33}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{30.75, 5.2458469972255606*^-48}, \
{31.25, 2.9531972071081357*^-34}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{31.75, 5.2458469972255606*^-48}, \
{32.25, 9.828609454906764*^-36}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{32.75, 5.2458469972255606*^-48}, \
{33.25, 3.1719603240835472*^-37}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{33.75, 5.2458469972255606*^-48}, \
{34.25, 9.935699250438167*^-39}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{34.75, 5.2458469972255606*^-48}, \
{35.25, 3.0232913433476135*^-40}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{35.75, 5.2458469972255606*^-48}, \
{36.25, 8.94390355740336*^-42}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{36.75, 5.2458469972255606*^-48}, \
{37.25, 2.5743938617931288*^-43}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{37.75, 5.2458469972255606*^-48}, \
{38.25, 7.21507753370969*^-45}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{38.75, 5.2458469972255606*^-48}, \
{39.25, 1.9702711726668767*^-46}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
      AbsoluteThickness[1.6], Opacity[0.2], 
      RectangleBox[{39.75, 5.2458469972255606*^-48}, \
{40.25, 5.2458469972255606*^-48}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], {}, {{}, LineBox[CompressedData["
1:eJxdy2tI02EUx3EvKKGS2W3pNOel5tRy6tzN6f9si3UZKVsxyUhWMRYsa0JK
EDS7wLSIIu2KqJXGWFG0COkCPqaQRUbBaiAIq4ZYUvbCIm1k0XMInufAefHh
yy9nz0GrIz4mJkb29+Pw6b0ebHxw1pWw5J2AFlhPCbabS4/me0LoWc5R4Uzd
VIsk8Tk6DlgnQtLDjK4dI/fQSZwXQ3DeK/09fR6dxnkZJHzsmV2e7Uav4CyC
hqexLw9FTOh0zmLY/iFSEj8hRmdxzoYjd/pP+G5/qf7HVgnnHKh9dvpVq+gJ
OpdzHnRu8efKZrzofM5rwBw8eX+43Ypey1kKuz0D5qg1A13AWQZv2yd7euF9
FXUh5yLobnBf9y/0oYs5r4PvMggNjTvR6zmXgNM8tjHglFGDnDWRAzGKxhZa
PuloL2VNSmGwZdtji9iHvYw1KYPAxfyZQLcDezlrUg76/jbDOVcudgVrooDI
qPXK3chEJe0VrEkFqDvSHPXSS9iVrIkSMo/dAIfUgl3Fmqiga5U2fXTnIuxq
1kQNjXMpybVXiZZ2DWuigdKsF97i4WbsWtZECxNDNULq4SLslaxJJXRPagPH
B8Ia2nWsiQ4yrXk+WX8H9irWpAoU401RicWEvZo1qYZvI1rPUNtPNe0CayJA
s1xtis3xU0uAtR1g6/Teuc+/6ql7OYcBbtV1zhelJONez9quh2vBkK7Q9khF
95zDenDVlCgvfN1HLTGwthtAPOy2hX+sxD3nsAFMZrFn/+URJd0bWduNsCu1
79TmhSbqXs5hIxQccG5641+N+w3//Qf/bXko
       "]]}, {}, {{}, {}}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 5.}, {0, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6204621531674557`*^9},ExpressionUUID->"9323e0e3-b37c-4326-886f-\
e711608bc5c9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"var", "=", "bg50"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"time20Hz", "=", "0.05"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"measurement", " ", "time"}], ",", " ", 
     RowBox[{"in", " ", 
      RowBox[{"sec", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"time5Hz", " ", "=", " ", "0.2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Length", "[", "var", "]"}], " ", "is", " ", "total", " ", "#", 
     " ", "of", " ", "measurements"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Total", "[", "var", "]"}], " ", "is", " ", "Total", " ", "#", 
     " ", "of", " ", "Counts"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Mean", "[", "var", "]"}], " ", "is", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Total", " ", "#", " ", "of", " ", "Counts"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"#", " ", "of", " ", "measurements"}], ")"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"StandardDeviation", "[", "var", "]"}], " ", "is", " ", 
     "\[Sigma]", " ", "for", " ", "total", " ", "#", " ", "of", " ", 
     "measurements"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"Total", "[", "var", "]"}], "]"}], "/", 
      RowBox[{"Length", "[", "var", "]"}]}], " ", "is", " ", "Uncertainty"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Rate", " ", "is", " ", 
     RowBox[{"Mean", "/", "time"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Uncertainty", " ", "for", " ", "Rate", " ", "is", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Uncertainty", " ", "for", " ", "counts"}], ")"}], "/", 
      "time"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Tally", " ", "counts", " ", "the", " ", "number", " ", "of", " ", 
     "occurences", " ", "getting", " ", "#", " ", "counts"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Tally", "[", "var", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
          RowBox[{"Length", "[", "var", "]"}]}], "]"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Tally", "[", "var", "]"}], "]"}]}], "}"}]}], "]"}], " ", 
     "is", " ", "to", " ", "calculate", " ", "the", " ", "probability"}], 
    "  ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"PoissonDistribution", "[", 
      RowBox[{"Mean", "[", "var", "]"}], "]"}], " ", "calculates", " ", 
     FormBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "\[Mu]"}]], 
       RowBox[{
        SuperscriptBox["\[Mu]", "x"], "/", 
        RowBox[{"x", "!"}], " "}]}],
      TraditionalForm]}], "  ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Text", "[", "\"\<\[Gamma]-decay, 50 sec\>\"", "]"}], ",", 
           "SpanFromLeft"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
           "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
           "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
           ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "[", "var", "]"}], ",", " ", "time", ",", " ", 
           RowBox[{"Total", "[", "var", "]"}], ",", "  ", 
           RowBox[{"PlusMinus", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "var", "]"}], "]"}], ",", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"Total", "[", "var", "]"}], "]"}], "/", 
                 RowBox[{"Length", "[", "var", "]"}]}], "]"}], ",", "2"}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "var", "]"}], "]"}], "]"}], ",", " ", 
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "var", "]"}], "]"}], ",", 
           RowBox[{"PlusMinus", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "var", "]"}], "/", "time"}], "]"}], ",", 
             " ", 
             RowBox[{"NumberForm", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"Total", "[", "var", "]"}], "]"}], "/", 
                 RowBox[{"Length", "[", "var", "]"}]}], "/", "time"}], ",", 
               "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Sort", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Tally", "[", "var", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Tally", "[", "var", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Tally", "[", "var", "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
                  RowBox[{"Length", "[", "var", "]"}]}], "]"}]}], "}"}], ",", 
              " ", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Tally", "[", "var", "]"}], "]"}]}], "}"}]}], "]"}], 
            "]"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
            "\"\<# of counts\>\"", ",", " ", 
             "\"\<Number of occurences getting # counts\>\"", ",", 
             "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
        RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Tally", "[", "var", "]"}], ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
       " ", 
       RowBox[{"Filling", "->", "Axis"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
          "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", 
       " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "var", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "var", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "var", "]"}]}], "]"}]}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "var", "]"}], "]"}]}], "}"}]}], "]"}], 
         ",", " ", 
         RowBox[{"PlotStyle", "->", 
          RowBox[{"{", "Red", "}"}]}], ",", " ", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",",
          " ", 
         RowBox[{"Filling", "->", "Axis"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
       RowBox[{"DiscretePlot", "[", 
        RowBox[{
         RowBox[{"PDF", "[", 
          RowBox[{
           RowBox[{"PoissonDistribution", "[", 
            RowBox[{"Mean", "[", "var", "]"}], "]"}], ",", "k"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
         RowBox[{"ExtentSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
            RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
          "\"\<Probability Density\>\""}], "}"}]}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", "\"\<Background, 50 sec (20hz)\>\"", "]"}], ",",
          "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
         "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
         "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
         ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "bg50", "]"}], ",", " ", "time20Hz", ",", " ", 
         RowBox[{"Total", "[", "bg50", "]"}], ",", "  ", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", "bg50", "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "bg50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "bg50", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Mean", "[", "bg50", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"N", "[", 
          RowBox[{"StandardDeviation", "[", "bg50", "]"}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "bg50", "]"}], "/", "time20Hz"}], "]"}], 
           ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "bg50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "bg50", "]"}]}], "/", "time20Hz"}], ",",
              "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "bg50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tally", "[", "bg50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "bg50", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "bg50", "]"}]}], "]"}]}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "bg50", "]"}], "]"}]}], "}"}]}], "]"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# of counts\>\"", ",", " ", 
          "\"\<Number of occurences getting # counts\>\"", ",", 
          "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "bg50", "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "bg50", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "bg50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"Length", "[", "bg50", "]"}]}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tally", "[", "bg50", "]"}], "]"}]}], "}"}]}], "]"}], ",",
        " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
       " ", 
       RowBox[{"Filling", "->", "Axis"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", 
          RowBox[{"Mean", "[", "bg50", "]"}], "]"}], ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
       RowBox[{"ExtentSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Probability Density\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\"\<------------------------\>\"", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Text", "[", "\"\<\[Gamma]-decay, 50 sec (20Hz)\>\"", "]"}], 
         ",", "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
         "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
         "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
         ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "down50", "]"}], ",", " ", "time20Hz", ",", 
         " ", 
         RowBox[{"Total", "[", "down50", "]"}], ",", "  ", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", "down50", "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "down50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "down50", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Mean", "[", "down50", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"N", "[", 
          RowBox[{"StandardDeviation", "[", "down50", "]"}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "down50", "]"}], "/", "time20Hz"}], "]"}], 
           ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "down50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "down50", "]"}]}], "/", "time20Hz"}], 
             ",", "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "down50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tally", "[", "down50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "down50", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "down50", "]"}]}], "]"}]}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "down50", "]"}], "]"}]}], "}"}]}], "]"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# of counts\>\"", ",", " ", 
          "\"\<Number of occurences getting # counts\>\"", ",", 
          "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "down50", "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "down50", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "down50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"Length", "[", "down50", "]"}]}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tally", "[", "down50", "]"}], "]"}]}], "}"}]}], "]"}], 
       ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
       " ", 
       RowBox[{"Filling", "->", "Axis"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", 
          RowBox[{"Mean", "[", "down50", "]"}], "]"}], ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
       RowBox[{"ExtentSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Probability Density\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\"\<------------------------\>\"", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Text", "[", "\"\<\[Gamma]+\[Beta]-decay, 50 sec (20Hz)\>\"", "]"}], 
         ",", "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
         "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
         "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
         ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "up50", "]"}], ",", " ", "time20Hz", ",", " ", 
         RowBox[{"Total", "[", "up50", "]"}], ",", "  ", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", "up50", "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up50", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Mean", "[", "up50", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"N", "[", 
          RowBox[{"StandardDeviation", "[", "up50", "]"}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "up50", "]"}], "/", "time20Hz"}], "]"}], 
           ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up50", "]"}]}], "/", "time20Hz"}], ",",
              "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tally", "[", "up50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "up50", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up50", "]"}]}], "]"}]}], "}"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "up50", "]"}], "]"}]}], "}"}]}], "]"}], 
         "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# of counts\>\"", ",", " ", 
          "\"\<Number of occurences getting # counts\>\"", ",", 
          "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "up50", "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up50", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up50", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"Length", "[", "up50", "]"}]}], "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tally", "[", "up50", "]"}], "]"}]}], "}"}]}], "]"}], ",",
        " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
       " ", 
       RowBox[{"Filling", "->", "Axis"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", 
          RowBox[{"Mean", "[", "up50", "]"}], "]"}], ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
       RowBox[{"ExtentSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Probability Density\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\"\<------------------------\>\"", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Text", "[", "\"\<\[Gamma]+\[Beta]-decay, 10 sec (20Hz)\>\"", "]"}], 
         ",", "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
         "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
         "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
         ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "up10Hz20", "]"}], ",", " ", "time20Hz", ",", 
         " ", 
         RowBox[{"Total", "[", "up10Hz20", "]"}], ",", "  ", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz20", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz20", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"N", "[", 
          RowBox[{"StandardDeviation", "[", "up10Hz20", "]"}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "up10Hz20", "]"}], "/", "time20Hz"}], "]"}],
            ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz20", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz20", "]"}]}], "/", "time20Hz"}], 
             ",", "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz20", "]"}]}], "]"}]}], "}"}], 
           ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "up10Hz20", "]"}], "]"}]}], "}"}]}], 
          "]"}], "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# of counts\>\"", ",", " ", 
          "\"\<Number of occurences getting # counts\>\"", ",", 
          "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "up10Hz20", "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"Length", "[", "up10Hz20", "]"}]}], "]"}]}], "}"}], ",", 
         " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tally", "[", "up10Hz20", "]"}], "]"}]}], "}"}]}], "]"}], 
       ",", " ", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", " ", 
       RowBox[{"PlotMarkers", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
       " ", 
       RowBox[{"Filling", "->", "Axis"}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", 
          RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], ",", "k"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
       RowBox[{"ExtentSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Probability Density\>\""}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "\"\<------------------------\>\"", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Text", "[", "\"\<\[Gamma]+\[Beta]-decay, 10 sec (5Hz)\>\"", "]"}], 
         ",", "SpanFromLeft"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<# of measurements\>\"", ",", "\"\<Time, sec\>\"", ",", 
         "\"\<Total Counts\>\"", ",", "\"\<Mean, counts\>\"", ",", 
         "\"\<\!\(\*SqrtBox[\(Mean\)]\)\>\"", ",", " ", "\"\<\[Sigma]\>\"", 
         ",", "\"\<Rate, #/sec\>\""}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Length", "[", "up10Hz5", "]"}], ",", " ", "time5Hz", ",", 
         " ", 
         RowBox[{"Total", "[", "up10Hz5", "]"}], ",", "  ", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz5", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz5", "]"}]}], "]"}], ",", "2"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], "]"}], ",", " ", 
         RowBox[{"N", "[", 
          RowBox[{"StandardDeviation", "[", "up10Hz5", "]"}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{"Mean", "[", "up10Hz5", "]"}], "/", "time5Hz"}], "]"}], 
           ",", " ", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz5", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz5", "]"}]}], "/", "time5Hz"}], 
             ",", "2"}], "]"}]}], "]"}]}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"Sort", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz5", "]"}]}], "]"}]}], "}"}], ",",
            " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Tally", "[", "up10Hz5", "]"}], "]"}]}], "}"}]}], "]"}],
          "]"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<# of counts\>\"", ",", " ", 
          "\"\<Number of occurences getting # counts\>\"", ",", 
          "\"\<Probability Density\>\""}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"Frame", " ", "\[Rule]", " ", "All"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Tally", "[", "up10Hz5", "]"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", 
        "\"\<Number of \[Nu] counts sec occurences\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"N", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
             RowBox[{"Length", "[", "up10Hz5", "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"Tally", "[", "up10Hz5", "]"}], "]"}]}], "}"}]}], "]"}], 
       ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Red", "}"}]}], ",", 
       RowBox[{"PlotMarkers", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<\[FilledDiamond]\>\"", ",", "18"}], "}"}]}], ",", 
       RowBox[{"Filling", "->", "Axis"}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
     RowBox[{"DiscretePlot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"PoissonDistribution", "[", 
          RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], ",", "k"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"ExtentSize", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", 
       RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Nu] \[RightArrow]\>\"", ",", "\"\<Probability Density\>\""}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   "\"\<------------------------\>\"", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.62036640858217*^9, 3.620366427802291*^9}, {
   3.620366474209902*^9, 3.6203664790852537`*^9}, {3.620366515423551*^9, 
   3.620366604174761*^9}, {3.620366636425338*^9, 3.620366664758003*^9}, {
   3.620366877819783*^9, 3.620366879860447*^9}, {3.6203669389882517`*^9, 
   3.620366939354376*^9}, {3.620367007554491*^9, 3.620367027365584*^9}, {
   3.620368624877184*^9, 3.620368645291195*^9}, {3.620368729927086*^9, 
   3.620368809179925*^9}, {3.620368912803269*^9, 3.620368979807271*^9}, {
   3.6203690206950407`*^9, 3.620369026245367*^9}, {3.620369128004821*^9, 
   3.620369181325704*^9}, 3.6203713388729887`*^9, {3.6203714338488398`*^9, 
   3.620371436246683*^9}, {3.620371622751505*^9, 3.6203716771289873`*^9}, {
   3.620371827387702*^9, 3.620371832472508*^9}, 3.620374579591223*^9, {
   3.620374643237403*^9, 3.6203748740244617`*^9}, {3.620374904307818*^9, 
   3.620374957633007*^9}, {3.6203758846250257`*^9, 3.620375938655294*^9}, {
   3.620376057540099*^9, 3.6203761555522537`*^9}, 3.620376260926412*^9, {
   3.620376358223434*^9, 3.620376429420453*^9}, 3.6203765481351967`*^9, {
   3.620377238987687*^9, 3.62037727159805*^9}, {3.620377311072472*^9, 
   3.620377311885796*^9}, {3.6203773871363153`*^9, 3.6203773914737587`*^9}, {
   3.620458995566737*^9, 3.6204590511340933`*^9}, {3.620459208911106*^9, 
   3.620459211204475*^9}, {3.620459255212205*^9, 3.620459304146138*^9}, {
   3.6204593523581867`*^9, 3.620459363785693*^9}, {3.620459401535932*^9, 
   3.620459431793502*^9}, {3.6204595614673*^9, 3.620459593339095*^9}, {
   3.6204596944252577`*^9, 3.620459728768627*^9}, {3.620459771305159*^9, 
   3.620460044484503*^9}, {3.6204603852898693`*^9, 3.620460478324705*^9}, {
   3.6204605739459553`*^9, 3.6204605748160467`*^9}, {3.620460606231427*^9, 
   3.620460616007704*^9}, {3.620460663488751*^9, 3.6204607444100027`*^9}, {
   3.6204607918171062`*^9, 3.620460810072866*^9}, {3.620460868304084*^9, 
   3.620460913572468*^9}, {3.620460947250969*^9, 3.620460973103181*^9}, {
   3.620461053884869*^9, 3.620461127793209*^9}, {3.620461263188821*^9, 
   3.620461298072722*^9}, {3.620461461384941*^9, 3.620461473658826*^9}, 
   3.6205749780154343`*^9, {3.620575043120007*^9, 3.620575043335272*^9}, {
   3.6207134482429667`*^9, 3.6207135075137568`*^9}, {3.620714530021862*^9, 
   3.620714542092602*^9}, {3.620715069939713*^9, 3.620715126286542*^9}, 
   3.6207187525598307`*^9, {3.684515234709236*^9, 3.684515234812501*^9}, {
   3.684627787432392*^9, 3.684627792588664*^9}, 3.6846299270136423`*^9, {
   3.9368848633516407`*^9, 3.93688487193808*^9}, {3.936884908839529*^9, 
   3.93688512813043*^9}, {3.9368851762255363`*^9, 3.936885246750883*^9}, {
   3.936885287186802*^9, 3.936885319400566*^9}, {3.9368854101845303`*^9, 
   3.9368854711372547`*^9}, {3.9368857804150257`*^9, 
   3.9368859185566273`*^9}, {3.9368860732592583`*^9, 
   3.9368861617061176`*^9}, {3.9372359613947735`*^9, 3.937235968954962*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"b5b481e7-b53e-4453-80ba-439b6c2325d1"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359704747963`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"59e2bd5e-9b74-d840-bafb-d98811fd8109"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"Background, 50 sec (20hz)\"\>", TextForm]], "InlineText",
       ExpressionUUID->"c046ed9a-1ce0-ba45-ad97-f054b996d833"],
      Text["Background, 50 sec (20hz)"]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"1000", "0.05`", "20", 
     RowBox[{"0.02`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.0045\"\>",
         ShowStringCharacters->False],
        0.00447213595499958,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "0.1414213562373095`", "0.14007005254378832`", 
     RowBox[{"0.4`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.089\"\>",
         ShowStringCharacters->False],
        0.08944271909999159,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359704905014`*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"cff716fa-2826-9f48-8a7b-f57cdc7875f6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "0", "1"},
    {"\<\"Number of occurences getting # counts\"\>", "980", "20"},
    {"\<\"Probability Density\"\>", "0.98`", "0.02`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359704905014`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"81ba9074-a85e-a548-9f9f-4fe80e326352"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, {}, {}, 
        {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{0., 0.}, {0., 980.}}], 
         LineBox[{{1., 0.}, {1., 20.}}]}}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->18], {0., 0.}], {{{0., 980.}}, {{1., 20.}}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {
            Directive[
             RGBColor[1, 0, 0], 
             Opacity[0.3]], 
            Line[{{0., 0.}, {0., 980.}}], 
            Line[{{1., 0.}, {1., 20.}}]}}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             GeometricTransformation[
              Inset[
               Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{0., 
              980.}}, {{1., 20.}}}]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 980.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 980.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, {}, {}, {
        Directive[
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        Line[{{0., 0.}, {0., 980.}}], 
        Line[{{1., 0.}, {1., 20.}}]}}, {
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{0., 
          980.}}, {{1., 20.}}}]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 980.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Number of \[Nu] counts sec occurences\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[Nu] \[RightArrow]\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 980.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235970543907*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"a4b3964b-f9a7-eb4f-9af0-7e98dfa44a0e"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{{}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{0., 0.}, {0., 0.98}}], 
          LineBox[{{1., 0.}, {1., 0.02}}]}}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->18], {0., 0.}], {{{0., 0.98}}, {{1., 0.02}}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction[
         "DynamicHighlight", {{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{0., 0.}, {0., 0.98}}], 
             Line[{{1., 0.}, {1., 0.02}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{0., 
               0.98}}, {{1., 0.02}}}]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 0.98}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 0.98}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, {}, {}, {
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         Line[{{0., 0.}, {0., 0.98}}], 
         Line[{{1., 0.}, {1., 0.02}}]}}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{0., 
           0.98}}, {{1., 0.02}}}]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 1.}, {0, 0.98}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{-0.25, 1.320896741315163*^-116}, \
{0.25, 0.9801986733067553}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{0.75, 1.320896741315163*^-116}, \
{1.25, 0.019603973466135106}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{1.75, 1.320896741315163*^-116}, \
{2.25, 0.00019603973466135105}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{2.75, 1.320896741315163*^-116}, \
{3.25, 1.306931564409007*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{3.75, 1.320896741315163*^-116}, \
{4.25, 6.534657822045035*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{4.75, 1.320896741315163*^-116}, \
{5.25, 2.613863128818014*^-11}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{5.75, 1.320896741315163*^-116}, \
{6.25, 8.712877096060047*^-14}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{6.75, 1.320896741315163*^-116}, \
{7.25, 2.489393456017156*^-16}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{7.75, 1.320896741315163*^-116}, \
{8.25, 6.223483640042891*^-19}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{8.75, 1.320896741315163*^-116}, \
{9.25, 1.3829963644539756*^-21}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{9.75, 1.320896741315163*^-116}, \
{10.25, 2.7659927289079517*^-24}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{10.75, 1.320896741315163*^-116}, \
{11.25, 5.029077688923548*^-27}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{11.75, 1.320896741315163*^-116}, \
{12.25, 8.381796148205914*^-30}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{12.75, 1.320896741315163*^-116}, \
{13.25, 1.2895070997239867*^-32}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{13.75, 1.320896741315163*^-116}, \
{14.25, 1.842152999605695*^-35}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{14.75, 1.320896741315163*^-116}, \
{15.25, 2.45620399947426*^-38}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{15.75, 1.320896741315163*^-116}, \
{16.25, 3.0702549993428256*^-41}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{16.75, 1.320896741315163*^-116}, \
{17.25, 3.6120647051092063*^-44}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{17.75, 1.320896741315163*^-116}, \
{18.25, 4.013405227899118*^-47}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{18.75, 1.320896741315163*^-116}, \
{19.25, 4.2246370819990714*^-50}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{19.75, 1.320896741315163*^-116}, \
{20.25, 4.224637081999073*^-53}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{20.75, 1.320896741315163*^-116}, \
{21.25, 4.0234638876181634*^-56}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{21.75, 1.320896741315163*^-116}, \
{22.25, 3.65769444328924*^-59}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{22.75, 1.320896741315163*^-116}, \
{23.25, 3.1806038637297734*^-62}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{23.75, 1.320896741315163*^-116}, \
{24.25, 2.6505032197748116*^-65}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{24.75, 1.320896741315163*^-116}, \
{25.25, 2.1204025758198487*^-68}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{25.75, 1.320896741315163*^-116}, \
{26.25, 1.6310789044768068*^-71}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{26.75, 1.320896741315163*^-116}, \
{27.25, 1.2082065959087458*^-74}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{27.75, 1.320896741315163*^-116}, \
{28.25, 8.630047113633899*^-78}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{28.75, 1.320896741315163*^-116}, \
{29.25, 5.951756630092344*^-81}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{29.75, 1.320896741315163*^-116}, \
{30.25, 3.967837753394896*^-84}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{30.75, 1.320896741315163*^-116}, \
{31.25, 2.559895324770901*^-87}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{31.75, 1.320896741315163*^-116}, \
{32.25, 1.5999345779818129*^-90}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{32.75, 1.320896741315163*^-116}, \
{33.25, 9.696573199889775*^-94}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{33.75, 1.320896741315163*^-116}, \
{34.25, 5.703866588170456*^-97}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{34.75, 1.320896741315163*^-116}, \
{35.25, 3.2593523360974037*^-100}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{35.75, 1.320896741315163*^-116}, \
{36.25, 1.810751297831891*^-103}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{36.75, 1.320896741315163*^-116}, \
{37.25, 9.787844853145357*^-107}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{37.75, 1.320896741315163*^-116}, \
{38.25, 5.151497291129135*^-110}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{38.75, 1.320896741315163*^-116}, \
{39.25, 2.6417934826303256*^-113}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{39.75, 1.320896741315163*^-116}, \
{40.25, 1.320896741315163*^-116}]}},
       Annotation[#, "Charting`Private`Tag$24671#1"]& ]}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       2], {}, {{}, LineBox[CompressedData["
1:eJxdy11I02EUx/F/M2oYxHKJVuimTuff+bKp0zn/c2dOrAyZVmISyUgk8CKF
LlJ6MdRpQZGmljoJ8ULrYriK3jUfVgS9m6TdWMxAstLUWhQSmHgeguc5cC4+
fPlFHa7eWxkkCIK4+jL6eGOjB+c87meHFqzUVtaz1ucN/RUKZQd1gPNf66mS
s/XCTZFaBqw3wOtzg8fM87dz0MGcN8PRlqZr3xUS9RbOSnhS8Wa6fGTYgg7l
HAbiRU9MQbOJehvnHVB6vGo8cvGGhI7grIKV/rCgr7/i0GfUnKNg6oP/kk/V
k42O5hwDw45ZXR4JptZwjgVZY9v6iM+1ZnQcZy14WzY9DoeZLHQ8ZxE0PYFi
1UgRdQJnHbQvuS+7Tt4zoRM5J4Fv3e4rjrtq6mTOKVBVPtTVVOnKXDPoWRM9
1C2XFL18+iUDu4E1McDWnZLt975C2lNZk1TQyZNWXvQOGbGnsSZpcL5dFtKY
oqA9nTVJh2aLonC8rTodu5E1MYJg6fhWU/EqDXsGa5IBGuWSMVqXQHsma5IJ
d6T7IV37m1Oxm1gTE7xTll2X7/lkwJ7FmmSBZtRQ2vFWot3MmpjhgvbH+41T
nXrs2axJNnhPRDQYlhdSsEusiQTFoY7q2M582i2siQX0TSqFYeJqMvYc1mTV
R7yO7vJAEnYra2KFyTrRNxRSgFYDayfAzHbXZFlyX+Ka+zj7AR591LiKTv/U
4d7G2mmD1nlPUPhYPrqPs98GbvlA74NAdwLuc1k7c8EUqBFmHs6JuOfsz4XI
Ce2u6T85aLWdtdMO9fGLtzz21njcc/bboVYUDrgH/Vrc5/33P04HcRg=
         "]]}, {}, {{}, {}}},
      Annotation[#, "Charting`Private`Tag$24671#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1.}, {0, 0.98}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359706183987`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"04336262-4e1c-044c-a66f-143d170d7534"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359707202873`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"91ade60b-a114-644e-934d-f4c0c97d1f9d"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359707222366`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"6b0c568b-5523-ad41-ac8d-22d649b73292"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\[Gamma]-decay, 50 sec (20Hz)\"\>", TextForm]], 
       "InlineText",ExpressionUUID->"2c9f595f-97bd-fb4a-9745-24dc0dcf162b"],
      Text["\[Gamma]-decay, 50 sec (20Hz)"]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"1000", "0.05`", "815", 
     RowBox[{"0.815`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.029\"\>",
         ShowStringCharacters->False],
        0.028548204847240397`,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "0.9027735042633895`", "0.9075233322612696`", 
     RowBox[{"16.299999999999997`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.57\"\>",
         ShowStringCharacters->False],
        0.570964096944808,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359707256527`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"7703bb84-51ee-5449-9eb6-d29166ab6c7f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "0", "1", "2", "3", "4", "5"},
    {"\<\"Number of occurences getting # counts\"\>", "445", "360", "139", 
     "49", "5", "2"},
    {"\<\"Probability Density\"\>", "0.445`", "0.36`", "0.139`", "0.049`", 
     "0.005`", "0.002`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359707307014`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"1b4619aa-ae6d-6345-9bf0-9c85c9504fff"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, {}, {}, 
        {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{1., 0.}, {1., 360.}}], 
         LineBox[{{2., 0.}, {2., 139.}}], LineBox[{{3., 0.}, {3., 49.}}], 
         LineBox[{{0., 0.}, {0., 445.}}], LineBox[{{4., 0.}, {4., 5.}}], 
         LineBox[{{5., 0.}, {5., 2.}}]}}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->18], {0., 0.}], {{{1., 360.}}, {{2., 139.}}, {{3., 
          49.}}, {{0., 445.}}, {{4., 5.}}, {{5., 2.}}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {
            Directive[
             RGBColor[1, 0, 0], 
             Opacity[0.3]], 
            Line[{{1., 0.}, {1., 360.}}], 
            Line[{{2., 0.}, {2., 139.}}], 
            Line[{{3., 0.}, {3., 49.}}], 
            Line[{{0., 0.}, {0., 445.}}], 
            Line[{{4., 0.}, {4., 5.}}], 
            Line[{{5., 0.}, {5., 2.}}]}}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             GeometricTransformation[
              Inset[
               Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{1., 
              360.}}, {{2., 139.}}, {{3., 49.}}, {{0., 445.}}, {{4., 5.}}, {{
              5., 2.}}}]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 445.}}, 
            "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 445.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, {}, {}, {
        Directive[
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        Line[{{1., 0.}, {1., 360.}}], 
        Line[{{2., 0.}, {2., 139.}}], 
        Line[{{3., 0.}, {3., 49.}}], 
        Line[{{0., 0.}, {0., 445.}}], 
        Line[{{4., 0.}, {4., 5.}}], 
        Line[{{5., 0.}, {5., 2.}}]}}, {
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{1., 
          360.}}, {{2., 139.}}, {{3., 49.}}, {{0., 445.}}, {{4., 5.}}, {{5., 
          2.}}}]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 445.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Number of \[Nu] counts sec occurences\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[Nu] \[RightArrow]\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 445.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359707751064`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"7f2459db-4b31-4148-999d-52c84e4f6a1b"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{{}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{1., 0.}, {1., 0.36}}], 
          LineBox[{{2., 0.}, {2., 0.139}}], LineBox[{{3., 0.}, {3., 0.049}}], 
          LineBox[{{0., 0.}, {0., 0.445}}], LineBox[{{4., 0.}, {4., 0.005}}], 
          LineBox[{{5., 0.}, {5., 0.002}}]}}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->18], {0., 0.}], {{{1., 0.36}}, {{2., 0.139}}, {{3., 
           0.049}}, {{0., 0.445}}, {{4., 0.005}}, {{5., 0.002}}}]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction[
         "DynamicHighlight", {{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{1., 0.}, {1., 0.36}}], 
             Line[{{2., 0.}, {2., 0.139}}], 
             Line[{{3., 0.}, {3., 0.049}}], 
             Line[{{0., 0.}, {0., 0.445}}], 
             Line[{{4., 0.}, {4., 0.005}}], 
             Line[{{5., 0.}, {5., 0.002}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{1., 
               0.36}}, {{2., 0.139}}, {{3., 0.049}}, {{0., 0.445}}, {{4., 
               0.005}}, {{5., 0.002}}}]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 0.445}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
             "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
             GoldenRatio^(-1), "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 0.445}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, {}, {}, {
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         Line[{{1., 0.}, {1., 0.36}}], 
         Line[{{2., 0.}, {2., 0.139}}], 
         Line[{{3., 0.}, {3., 0.049}}], 
         Line[{{0., 0.}, {0., 0.445}}], 
         Line[{{4., 0.}, {4., 0.005}}], 
         Line[{{5., 0.}, {5., 0.002}}]}}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledDiamond]", FontSize -> 18], {0., 0.}], {{{1., 
           0.36}}, {{2., 0.139}}, {{3., 0.049}}, {{0., 0.445}}, {{4., 
           0.005}}, {{5., 0.002}}}]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, "PlotRange" -> {{0, 5.}, {0, 0.445}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{-0.25, 1.5160351777658611*^-52}, \
{0.25, 0.44263932736135114}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{0.75, 1.5160351777658611*^-52}, \
{1.25, 0.3607510517995012}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{1.75, 1.5160351777658611*^-52}, \
{2.25, 0.14700605360829672}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{2.75, 1.5160351777658611*^-52}, \
{3.25, 0.039936644563587274}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{3.75, 1.5160351777658611*^-52}, \
{4.25, 0.008137091329830908}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{4.75, 1.5160351777658611*^-52}, \
{5.25, 0.001326345886762438}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{5.75, 1.5160351777658611*^-52}, \
{6.25, 0.00018016198295189783}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{6.75, 1.5160351777658611*^-52}, \
{7.25, 0.000020976002300828104}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{7.75, 1.5160351777658611*^-52}, \
{8.25, 2.1369302343968633*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{8.75, 1.5160351777658611*^-52}, \
{9.25, 1.935109045592715*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{9.75, 1.5160351777658611*^-52}, \
{10.25, 1.5771138721580628*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{10.75, 1.5160351777658611*^-52}, \
{11.25, 1.1684980052807465*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{11.75, 1.5160351777658611*^-52}, \
{12.25, 7.936048952531736*^-11}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{12.75, 1.5160351777658611*^-52}, \
{13.25, 4.975292227933358*^-12}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{13.75, 1.5160351777658611*^-52}, \
{14.25, 2.896330832689776*^-13}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{14.75, 1.5160351777658611*^-52}, \
{15.25, 1.5736730857614446*^-14}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{15.75, 1.5160351777658611*^-52}, \
{16.25, 8.015897280597361*^-16}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{16.75, 1.5160351777658611*^-52}, \
{17.25, 3.842915460992264*^-17}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{17.75, 1.5160351777658611*^-52}, \
{18.25, 1.739986722615942*^-18}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{18.75, 1.5160351777658611*^-52}, \
{19.25, 7.463627257536802*^-20}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{19.75, 1.5160351777658611*^-52}, \
{20.25, 3.041428107446247*^-21}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{20.75, 1.5160351777658611*^-52}, \
{21.25, 1.1803637655089007*^-22}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{21.75, 1.5160351777658611*^-52}, \
{22.25, 4.372711222226155*^-24}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{22.75, 1.5160351777658611*^-52}, \
{23.25, 1.5494607157018763*^-25}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{23.75, 1.5160351777658611*^-52}, \
{24.25, 5.261710347070956*^-27}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{24.75, 1.5160351777658611*^-52}, \
{25.25, 1.7153175731451316*^-28}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{25.75, 1.5160351777658611*^-52}, \
{26.25, 5.376860854281856*^-30}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{26.75, 1.5160351777658611*^-52}, \
{27.25, 1.623015406014708*^-31}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{27.75, 1.5160351777658611*^-52}, \
{28.25, 4.724134128221382*^-33}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{28.75, 1.5160351777658611*^-52}, \
{29.25, 1.3276445912070439*^-34}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{29.75, 1.5160351777658611*^-52}, \
{30.25, 3.606767806112468*^-36}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{30.75, 1.5160351777658611*^-52}, \
{31.25, 9.482308909618265*^-38}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{31.75, 1.5160351777658611*^-52}, \
{32.25, 2.4150255504184017*^-39}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{32.75, 1.5160351777658611*^-52}, \
{33.25, 5.964381283609083*^-41}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{33.75, 1.5160351777658611*^-52}, \
{34.25, 1.429697278276883*^-42}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{34.75, 1.5160351777658611*^-52}, \
{35.25, 3.329152233701885*^-44}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{35.75, 1.5160351777658611*^-52}, \
{36.25, 7.536830751297324*^-46}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{36.75, 1.5160351777658611*^-52}, \
{37.25, 1.6601397465695455*^-47}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{37.75, 1.5160351777658611*^-52}, \
{38.25, 3.560562877510999*^-49}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{38.75, 1.5160351777658611*^-52}, \
{39.25, 7.4406634491576*^-51}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{39.75, 1.5160351777658611*^-52}, \
{40.25, 1.5160351777658611*^-52}]}},
       Annotation[#, "Charting`Private`Tag$24910#1"]& ]}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       2], {}, {{}, LineBox[CompressedData["
1:eJxdy11I02EUx3GZWKiliGnJCOdbf6fOpu79xf+Z/0KoQLOZDaOmJFMwhLoo
CtQLmWUEikaBSAtiVsSUurCw7FEoDRNmZQYVzShTQSxsZqZW+ByC5zlwLj58
+SVV1pVUhYaEhCj/vQyfnv+JWv1oOs/+XkSLrGfE4vpjHZfiJ9E/OK+KlZ8L
03eMD6FlwHoTLEZ4attP3URHcI6C+KrMWdWdRnQM51h45bNsTegvRcdx3g5f
ogu95i4BncBZDrX936fvrwfzqXdyToTLT1fGw+YHqRsVnJPALkzM/V6+iE7m
nAJ/1gLGlIVidCrnNCjTXxuVx25D7+IsQOL14PkG/4SVOp2zEpru+Ry+qSvo
DM6Z0NClnmytsKOzOKugp7L6+VhfDDqb82744Kk3H516YdkwqFkTNSyEfaxJ
FdzYc1iTHFgLX647uQWw57ImuXBhyX+2fPOSmfY81iQPHG0D/gcP72LXsCYa
uEUyuoveVGDXsiZaaB52NAppcdh1rIkO9q0fehu5MmyiXc+a6EHZ2XtDFnUO
u4E1MUB59kqnkJ2J3ciaGKHsuLu+VXpnpN3EmphgtUQROlDagt3MmphhNC3Y
crrZgN3CmljA2zvyLSt62kC7lTWxQqTrsFCoaseez5rkQ0at7ZkiGbCLrIkI
cmvTS/mBOf2GFcDaCaB3nZlxjXRQezgHAB7ryKzik4h7G2unDXosmtuLg191
dM85YIPunJ9SuK6NWlHA2lkA/qGaXwclA+45BwpgrLPvyLw3oKV7ibVTgqLX
V/ef2Oum9nAOSCB5+6q7IlS43/PffwHlCIEM
         "]]}, {}, {{}, {}}},
      Annotation[#, "Charting`Private`Tag$24910#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 5.}, {0, 0.445}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359708418007`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"05bf4b00-8f82-f84d-b247-23d7c66635e2"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359709454556`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"fbb364fa-1037-9249-b14c-ace15acf9b4a"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359709487953`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"e385d2e0-0900-2745-857a-c8675e65554e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\[Gamma]+\[Beta]-decay, 50 sec (20Hz)\"\>", TextForm]], 
       "InlineText",ExpressionUUID->"0d1f07cb-b232-0a45-95bb-da6e2649d77d"],
      Text["\[Gamma]+\[Beta]-decay, 50 sec (20Hz)"]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"1000", "0.05`", "21971", 
     RowBox[{"21.971`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.15\"\>",
         ShowStringCharacters->False],
        0.14822617852457776`,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "4.6873233300040225`", "3.6303358437393007`", 
     RowBox[{"439.42`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"3.\"\>",
         ShowStringCharacters->False],
        2.964523570491555,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359709528503`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"76cc0140-fd51-6749-98de-a3bad49f6ab1"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "13", "14", "15", "16", "17", "18", "19", "20", 
     "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", 
     "33", "35"},
    {"\<\"Number of occurences getting # counts\"\>", "1", "10", "12", "32", 
     "62", "54", "79", "95", "130", "106", "98", "88", "77", "45", "40", "24",
      "18", "13", "9", "2", "3", "2"},
    {"\<\"Probability Density\"\>", "0.001`", "0.01`", "0.012`", "0.032`", 
     "0.062`", "0.054`", "0.079`", "0.095`", "0.13`", "0.106`", "0.098`", 
     "0.088`", "0.077`", "0.045`", "0.04`", "0.024`", "0.018`", "0.013`", 
     "0.009`", "0.002`", "0.003`", "0.002`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359709561195`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"e2787246-deb6-434e-962f-54d96360a008"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, {}, {}, 
        {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{21., 0.}, {21., 130.}}], 
         LineBox[{{20., 0.}, {20., 95.}}], LineBox[{{23., 0.}, {23., 98.}}], 
         LineBox[{{17., 0.}, {17., 62.}}], LineBox[{{28., 0.}, {28., 24.}}], 
         LineBox[{{24., 0.}, {24., 88.}}], LineBox[{{22., 0.}, {22., 106.}}], 
         LineBox[{{26., 0.}, {26., 45.}}], LineBox[{{25., 0.}, {25., 77.}}], 
         LineBox[{{27., 0.}, {27., 40.}}], LineBox[{{18., 0.}, {18., 54.}}], 
         LineBox[{{31., 0.}, {31., 9.}}], LineBox[{{30., 0.}, {30., 13.}}], 
         LineBox[{{32., 0.}, {32., 2.}}], LineBox[{{19., 0.}, {19., 79.}}], 
         LineBox[{{14., 0.}, {14., 10.}}], LineBox[{{29., 0.}, {29., 18.}}], 
         LineBox[{{16., 0.}, {16., 32.}}], LineBox[{{15., 0.}, {15., 12.}}], 
         LineBox[{{13., 0.}, {13., 1.}}], LineBox[{{33., 0.}, {33., 3.}}], 
         LineBox[{{35., 0.}, {35., 2.}}]}}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFTBzDlkAChGUwg9IFwKN8cQjdEQPmGUNof
SttAaQs0OgxKm0H1R0H5VlC+G5RvCbU/GMq3htIuUNoISntDaXsorQSl7aC0
FpR2gNIMUNoY6h+Y+TpQWgVK26LZY4Bmjh6U1kCz54M9xB8wdRwQusERbj8A
3cMbxQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {
            Directive[
             RGBColor[1, 0, 0], 
             Opacity[0.3]], 
            Line[{{21., 0.}, {21., 130.}}], 
            Line[{{20., 0.}, {20., 95.}}], 
            Line[{{23., 0.}, {23., 98.}}], 
            Line[{{17., 0.}, {17., 62.}}], 
            Line[{{28., 0.}, {28., 24.}}], 
            Line[{{24., 0.}, {24., 88.}}], 
            Line[{{22., 0.}, {22., 106.}}], 
            Line[{{26., 0.}, {26., 45.}}], 
            Line[{{25., 0.}, {25., 77.}}], 
            Line[{{27., 0.}, {27., 40.}}], 
            Line[{{18., 0.}, {18., 54.}}], 
            Line[{{31., 0.}, {31., 9.}}], 
            Line[{{30., 0.}, {30., 13.}}], 
            Line[{{32., 0.}, {32., 2.}}], 
            Line[{{19., 0.}, {19., 79.}}], 
            Line[{{14., 0.}, {14., 10.}}], 
            Line[{{29., 0.}, {29., 18.}}], 
            Line[{{16., 0.}, {16., 32.}}], 
            Line[{{15., 0.}, {15., 12.}}], 
            Line[{{13., 0.}, {13., 1.}}], 
            Line[{{33., 0.}, {33., 3.}}], 
            Line[{{35., 0.}, {35., 2.}}]}}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             GeometricTransformation[
              Inset[
               Style["\[FilledDiamond]", FontSize -> 18], {0., 
               0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFTBzDlkAChGUwg9IFwKN8cQjdEQPmGUNof
SttAaQs0OgxKm0H1R0H5VlC+G5RvCbU/GMq3htIuUNoISntDaXsorQSl7aC0
FpR2gNIMUNoY6h+Y+TpQWgVK26LZY4Bmjh6U1kCz54M9xB8wdRwQusERbj8A
3cMbxQ==
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{12.541666666666696`, 35.}, {0, 130.}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {12.541666666666696`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{12.541666666666696`, 35.}, {0, 130.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {12.541666666666696`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, {}, {}, {
        Directive[
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        Line[{{21., 0.}, {21., 130.}}], 
        Line[{{20., 0.}, {20., 95.}}], 
        Line[{{23., 0.}, {23., 98.}}], 
        Line[{{17., 0.}, {17., 62.}}], 
        Line[{{28., 0.}, {28., 24.}}], 
        Line[{{24., 0.}, {24., 88.}}], 
        Line[{{22., 0.}, {22., 106.}}], 
        Line[{{26., 0.}, {26., 45.}}], 
        Line[{{25., 0.}, {25., 77.}}], 
        Line[{{27., 0.}, {27., 40.}}], 
        Line[{{18., 0.}, {18., 54.}}], 
        Line[{{31., 0.}, {31., 9.}}], 
        Line[{{30., 0.}, {30., 13.}}], 
        Line[{{32., 0.}, {32., 2.}}], 
        Line[{{19., 0.}, {19., 79.}}], 
        Line[{{14., 0.}, {14., 10.}}], 
        Line[{{29., 0.}, {29., 18.}}], 
        Line[{{16., 0.}, {16., 32.}}], 
        Line[{{15., 0.}, {15., 12.}}], 
        Line[{{13., 0.}, {13., 1.}}], 
        Line[{{33., 0.}, {33., 3.}}], 
        Line[{{35., 0.}, {35., 2.}}]}}, {
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 18], {0., 
           0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFTBzDlkAChGUwg9IFwKN8cQjdEQPmGUNof
SttAaQs0OgxKm0H1R0H5VlC+G5RvCbU/GMq3htIuUNoISntDaXsorQSl7aC0
FpR2gNIMUNoY6h+Y+TpQWgVK26LZY4Bmjh6U1kCz54M9xB8wdRwQusERbj8A
3cMbxQ==
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{12.541666666666696`, 35.}, {0, 130.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {12.541666666666696`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12.541666666666696`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Number of \[Nu] counts sec occurences\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[Nu] \[RightArrow]\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{12.541666666666696`, 35.}, {0, 130.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971000511*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"41bf9e3c-b0a3-0e4f-b4b7-d4744d3569fd"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{{}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{21., 0.}, {21., 0.13}}], 
          LineBox[{{20., 0.}, {20., 0.095}}], 
          LineBox[{{23., 0.}, {23., 0.098}}], 
          LineBox[{{17., 0.}, {17., 0.062}}], 
          LineBox[{{28., 0.}, {28., 0.024}}], 
          LineBox[{{24., 0.}, {24., 0.088}}], 
          LineBox[{{22., 0.}, {22., 0.106}}], 
          LineBox[{{26., 0.}, {26., 0.045}}], 
          LineBox[{{25., 0.}, {25., 0.077}}], 
          LineBox[{{27., 0.}, {27., 0.04}}], 
          LineBox[{{18., 0.}, {18., 0.054}}], 
          LineBox[{{31., 0.}, {31., 0.009}}], 
          LineBox[{{30., 0.}, {30., 0.013}}], 
          LineBox[{{32., 0.}, {32., 0.002}}], 
          LineBox[{{19., 0.}, {19., 0.079}}], 
          LineBox[{{14., 0.}, {14., 0.01}}], 
          LineBox[{{29., 0.}, {29., 0.018}}], 
          LineBox[{{16., 0.}, {16., 0.032}}], 
          LineBox[{{15., 0.}, {15., 0.012}}], 
          LineBox[{{13., 0.}, {13., 0.001}}], 
          LineBox[{{33., 0.}, {33., 0.003}}], 
          LineBox[{{35., 0.}, {35., 0.002}}]}}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction[
         "DynamicHighlight", {{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{21., 0.}, {21., 0.13}}], 
             Line[{{20., 0.}, {20., 0.095}}], 
             Line[{{23., 0.}, {23., 0.098}}], 
             Line[{{17., 0.}, {17., 0.062}}], 
             Line[{{28., 0.}, {28., 0.024}}], 
             Line[{{24., 0.}, {24., 0.088}}], 
             Line[{{22., 0.}, {22., 0.106}}], 
             Line[{{26., 0.}, {26., 0.045}}], 
             Line[{{25., 0.}, {25., 0.077}}], 
             Line[{{27., 0.}, {27., 0.04}}], 
             Line[{{18., 0.}, {18., 0.054}}], 
             Line[{{31., 0.}, {31., 0.009}}], 
             Line[{{30., 0.}, {30., 0.013}}], 
             Line[{{32., 0.}, {32., 0.002}}], 
             Line[{{19., 0.}, {19., 0.079}}], 
             Line[{{14., 0.}, {14., 0.01}}], 
             Line[{{29., 0.}, {29., 0.018}}], 
             Line[{{16., 0.}, {16., 0.032}}], 
             Line[{{15., 0.}, {15., 0.012}}], 
             Line[{{13., 0.}, {13., 0.001}}], 
             Line[{{33., 0.}, {33., 0.003}}], 
             Line[{{35., 0.}, {35., 0.002}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {12.541666666666696`, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {12.541666666666696`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, {}, {}, {
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         Line[{{21., 0.}, {21., 0.13}}], 
         Line[{{20., 0.}, {20., 0.095}}], 
         Line[{{23., 0.}, {23., 0.098}}], 
         Line[{{17., 0.}, {17., 0.062}}], 
         Line[{{28., 0.}, {28., 0.024}}], 
         Line[{{24., 0.}, {24., 0.088}}], 
         Line[{{22., 0.}, {22., 0.106}}], 
         Line[{{26., 0.}, {26., 0.045}}], 
         Line[{{25., 0.}, {25., 0.077}}], 
         Line[{{27., 0.}, {27., 0.04}}], 
         Line[{{18., 0.}, {18., 0.054}}], 
         Line[{{31., 0.}, {31., 0.009}}], 
         Line[{{30., 0.}, {30., 0.013}}], 
         Line[{{32., 0.}, {32., 0.002}}], 
         Line[{{19., 0.}, {19., 0.079}}], 
         Line[{{14., 0.}, {14., 0.01}}], 
         Line[{{29., 0.}, {29., 0.018}}], 
         Line[{{16., 0.}, {16., 0.032}}], 
         Line[{{15., 0.}, {15., 0.012}}], 
         Line[{{13., 0.}, {13., 0.001}}], 
         Line[{{33., 0.}, {33., 0.003}}], 
         Line[{{35., 0.}, {35., 0.002}}]}}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledDiamond]", FontSize -> 18], {0., 
            0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {12.541666666666696`, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{-0.25, 2.8715470603029094*^-10}, \
{0.25, 2.8715470603029094*^-10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{0.75, 2.8715470603029094*^-10}, \
{1.25, 6.309076046191522*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{1.75, 2.8715470603029094*^-10}, \
{2.25, 6.930835490543697*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{2.75, 2.8715470603029094*^-10}, \
{3.25, 5.075912885424518*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{3.75, 2.8715470603029094*^-10}, \
{4.25, 2.788072050141553*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{4.75, 2.8715470603029094*^-10}, \
{5.25, 0.000012251346202732011}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{5.75, 2.8715470603029094*^-10}, \
{6.25, 0.00004486238790337083}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{6.75, 2.8715470603029094*^-10}, \
{7.25, 0.0001408102178035658}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{7.75, 2.8715470603029094*^-10}, \
{8.25, 0.00038671766192026807}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{8.75, 2.8715470603029094*^-10}, \
{9.25, 0.0009440637500055788}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{9.75, 2.8715470603029094*^-10}, \
{10.25, 0.002074202465137257}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{10.75, 2.8715470603029094*^-10}, \
{11.25, 0.004142936578320971}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{11.75, 2.8715470603029094*^-10}, \
{12.25, 0.007585371630190837}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{12.75, 2.8715470603029094*^-10}, \
{13.25, 0.012819861545147915}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{13.75, 2.8715470603029094*^-10}, \
{14.25, 0.020118941286317485}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{14.75, 2.8715470603029094*^-10}, \
{15.25, 0.029468883933445433}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{15.75, 2.8715470603029094*^-10}, \
{16.25, 0.0404663030563581}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{16.75, 2.8715470603029094*^-10}, \
{17.25, 0.052299126144190806}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{17.75, 2.8715470603029094*^-10}, \
{18.25, 0.06383689447300091}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{18.75, 2.8715470603029094*^-10}, \
{19.25, 0.07381896886664752}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{19.75, 2.8715470603029094*^-10}, \
{20.25, 0.08109382824845564}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{20.75, 2.8715470603029094*^-10}, \
{21.25, 0.08484345240222946}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{21.75, 2.8715470603029094*^-10}, \
{22.25, 0.08473161330588108}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{22.75, 2.8715470603029094*^-10}, \
{23.25, 0.0809407946062397}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{23.75, 2.8715470603029094*^-10}, \
{24.25, 0.07409792492890384}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{24.75, 2.8715470603029094*^-10}, \
{25.25, 0.06512022034451787}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{25.75, 2.8715470603029094*^-10}, \
{26.25, 0.055029090814976984}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{26.75, 2.8715470603029094*^-10}, \
{27.25, 0.04477941312206887}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{27.75, 2.8715470603029094*^-10}, \
{28.25, 0.035137445918034825}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{28.75, 2.8715470603029094*^-10}, \
{29.25, 0.026620856009142865}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{29.75, 2.8715470603029094*^-10}, \
{30.25, 0.019496227579229267}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{30.75, 2.8715470603029094*^-10}, \
{31.25, 0.013817794069136973}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{31.75, 2.8715470603029094*^-10}, \
{32.25, 0.009487211046656516}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{32.75, 2.8715470603029094*^-10}, \
{33.25, 0.0063164701183663725}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{33.75, 2.8715470603029094*^-10}, \
{34.25, 0.004081740146194928}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{34.75, 2.8715470603029094*^-10}, \
{35.25, 0.002562283221487108}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{35.75, 2.8715470603029094*^-10}, \
{36.25, 0.0015637756849803679}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{36.75, 2.8715470603029094*^-10}, \
{37.25, 0.0009285869074244234}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{37.75, 2.8715470603029094*^-10}, \
{38.25, 0.0005368942879742633}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{38.75, 2.8715470603029094*^-10}, \
{39.25, 0.00030246421541237274}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{39.75, 2.8715470603029094*^-10}, \
{40.25, 0.00016613603192063107}]}},
       Annotation[#, "Charting`Private`Tag$25148#1"]& ]}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       2], {}, {{}, LineBox[CompressedData["
1:eJxd011IU2Ecx/Gl0pyGIVkuRNzUZZpr05lz7uX8N0sIR4mLXBaxbLqLKCuS
8kJmbxeLXlGKtIZGdaFGM1wNhHpQNhEtdGV1ETSiqFUSObEFjRqc/4LnOfBc
fPjyO5wD50ib2xpakgUCQXH8JOHhr9lnj7VjLx+MRfRojvYX7vpgZ+pnsdbA
e4nxH+5tq6Vjvvc4Oglor4SCZf0qeeoAOo1xBvya9sztPjiJzmS8BqzBZpV9
JIxeyzgbiraXhy3nhRzv9YxzIHfi2pUXJ/LRuYzzoLFv0Ztu1fDukjCWwk8x
d/LAjx3ofMYFoF0WR7/GbOhCxjL4LprNVESPojcwLgJFU+3I60wneiPjYiCL
vR6z8QK6hPEmyGo5VLe6twddylgO9e7fDdlyN3ozYwV0ytpm/z65yxuUtIkS
XHkzpyKBQexltEncpWn7bzd6sJfTJuUA9TlTM58eYVfRJiqIpeuGr46PYq+g
TSpAGbYumH1e7Ftok7hF63qinkSvpE0qYWfsaZnLl7i/mjZRg8yx7WNWNPF8
VbRJFSxJPQLfUOL9NLSJBo6ljH/wlw5jr6ZNqmFf65TfsnAfu5Y20UJ3e0ma
KzaAXUeb6ODdrecOp6kPu5420cOrc/aHc8vd2A20iQEm3ogWuswXsXO0CQd+
ryMsPHKWtwRo2wCG6ppc5vcdvPsZhwCGgymTyT78niVG2jYjCAPtu5wxO+4Z
h4xw5o56b8S9B/cm2jYTiC5nqC4dxv+tn3HIBN/mjKPTN4y4r6Ftq4HCFfPh
00EV7hmH4m6YvHczIMP91v/+B/rwhtY=
         "]]}, {}, {{}, {}}},
      Annotation[#, "Charting`Private`Tag$25148#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{12.541666666666696`, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{12.541666666666696`, 35.}, {0, 0.13}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971075821*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"7fd420a9-5db8-0145-82f8-f80575813053"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971175457*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"ef705b99-34a1-8b40-81a3-7b2f88ae45b0"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359711784706`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"40bacda2-dafd-8843-b485-d18e4d2c8f05"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\[Gamma]+\[Beta]-decay, 10 sec (20Hz)\"\>", TextForm]], 
       "InlineText",ExpressionUUID->"81267ee8-cc5e-7840-97f2-71e9af308b09"],
      Text["\[Gamma]+\[Beta]-decay, 10 sec (20Hz)"]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"200", "0.05`", "4375", 
     RowBox[{"21.875`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"0.33\"\>",
         ShowStringCharacters->False],
        0.33071891388307384`,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "4.677071733467427`", "3.7119087181204082`", 
     RowBox[{"437.5`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"6.6\"\>",
         ShowStringCharacters->False],
        6.614378277661476,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971182625*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"ef3b1e9e-9621-8a4b-8042-47f9816cec2b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "12", "14", "15", "16", "17", "18", "19", "20", 
     "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "32", "34"},
    {"\<\"Number of occurences getting # counts\"\>", "2", "1", "3", "12", 
     "2", "13", "20", "22", "18", "27", "16", "12", "18", "14", "6", "8", "2",
      "2", "1", "1"},
    {"\<\"Probability Density\"\>", "0.01`", "0.005`", "0.015`", "0.06`", 
     "0.01`", "0.065`", "0.1`", "0.11`", "0.09`", "0.135`", "0.08`", "0.06`", 
     "0.09`", "0.07`", "0.03`", "0.04`", "0.01`", "0.01`", "0.005`", "0.005`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359711859703`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"b75ce56f-2073-f140-946e-4efc1ca2f50d"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, {}, {}, 
        {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{20., 0.}, {20., 22.}}], 
         LineBox[{{19., 0.}, {19., 20.}}], LineBox[{{15., 0.}, {15., 3.}}], 
         LineBox[{{18., 0.}, {18., 13.}}], LineBox[{{14., 0.}, {14., 1.}}], 
         LineBox[{{21., 0.}, {21., 18.}}], LineBox[{{25., 0.}, {25., 18.}}], 
         LineBox[{{26., 0.}, {26., 14.}}], LineBox[{{22., 0.}, {22., 27.}}], 
         LineBox[{{24., 0.}, {24., 12.}}], LineBox[{{34., 0.}, {34., 1.}}], 
         LineBox[{{28., 0.}, {28., 8.}}], LineBox[{{16., 0.}, {16., 12.}}], 
         LineBox[{{17., 0.}, {17., 2.}}], LineBox[{{23., 0.}, {23., 16.}}], 
         LineBox[{{27., 0.}, {27., 6.}}], LineBox[{{30., 0.}, {30., 2.}}], 
         LineBox[{{29., 0.}, {29., 2.}}], LineBox[{{12., 0.}, {12., 2.}}], 
         LineBox[{{32., 0.}, {32., 1.}}]}}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETBwhtBqWNHVDF9aA0B5Q2gtJaUFoHSn+w
h9CmaOos0fhWaPpg9lpDaQsorQGlHdHMt4HyFaC0AZp6QyjNAKXN0dTB7JGA
0nZo6m3R+BpofAe4ewAgnRTs
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {
            Directive[
             RGBColor[1, 0, 0], 
             Opacity[0.3]], 
            Line[{{20., 0.}, {20., 22.}}], 
            Line[{{19., 0.}, {19., 20.}}], 
            Line[{{15., 0.}, {15., 3.}}], 
            Line[{{18., 0.}, {18., 13.}}], 
            Line[{{14., 0.}, {14., 1.}}], 
            Line[{{21., 0.}, {21., 18.}}], 
            Line[{{25., 0.}, {25., 18.}}], 
            Line[{{26., 0.}, {26., 14.}}], 
            Line[{{22., 0.}, {22., 27.}}], 
            Line[{{24., 0.}, {24., 12.}}], 
            Line[{{34., 0.}, {34., 1.}}], 
            Line[{{28., 0.}, {28., 8.}}], 
            Line[{{16., 0.}, {16., 12.}}], 
            Line[{{17., 0.}, {17., 2.}}], 
            Line[{{23., 0.}, {23., 16.}}], 
            Line[{{27., 0.}, {27., 6.}}], 
            Line[{{30., 0.}, {30., 2.}}], 
            Line[{{29., 0.}, {29., 2.}}], 
            Line[{{12., 0.}, {12., 2.}}], 
            Line[{{32., 0.}, {32., 1.}}]}}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             GeometricTransformation[
              Inset[
               Style["\[FilledDiamond]", FontSize -> 18], {0., 
               0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETBwhtBqWNHVDF9aA0B5Q2gtJaUFoHSn+w
h9CmaOos0fhWaPpg9lpDaQsorQGlHdHMt4HyFaC0AZp6QyjNAKXN0dTB7JGA
0nZo6m3R+BpofAe4ewAgnRTs
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{11.541666666666693`, 34.}, {0, 27.}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {11.541666666666693`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{11.541666666666693`, 34.}, {0, 27.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {11.541666666666693`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, {}, {}, {
        Directive[
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        Line[{{20., 0.}, {20., 22.}}], 
        Line[{{19., 0.}, {19., 20.}}], 
        Line[{{15., 0.}, {15., 3.}}], 
        Line[{{18., 0.}, {18., 13.}}], 
        Line[{{14., 0.}, {14., 1.}}], 
        Line[{{21., 0.}, {21., 18.}}], 
        Line[{{25., 0.}, {25., 18.}}], 
        Line[{{26., 0.}, {26., 14.}}], 
        Line[{{22., 0.}, {22., 27.}}], 
        Line[{{24., 0.}, {24., 12.}}], 
        Line[{{34., 0.}, {34., 1.}}], 
        Line[{{28., 0.}, {28., 8.}}], 
        Line[{{16., 0.}, {16., 12.}}], 
        Line[{{17., 0.}, {17., 2.}}], 
        Line[{{23., 0.}, {23., 16.}}], 
        Line[{{27., 0.}, {27., 6.}}], 
        Line[{{30., 0.}, {30., 2.}}], 
        Line[{{29., 0.}, {29., 2.}}], 
        Line[{{12., 0.}, {12., 2.}}], 
        Line[{{32., 0.}, {32., 1.}}]}}, {
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 18], {0., 
           0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETBwhtBqWNHVDF9aA0B5Q2gtJaUFoHSn+w
h9CmaOos0fhWaPpg9lpDaQsorQGlHdHMt4HyFaC0AZp6QyjNAKXN0dTB7JGA
0nZo6m3R+BpofAe4ewAgnRTs
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{11.541666666666693`, 34.}, {0, 27.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {11.541666666666693`, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{11.541666666666693`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Number of \[Nu] counts sec occurences\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[Nu] \[RightArrow]\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{11.541666666666693`, 34.}, {0, 27.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359712163734`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"0d6fac36-2248-7c4b-b9b5-d0750aff5e92"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{{}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{20., 0.}, {20., 0.11}}], 
          LineBox[{{19., 0.}, {19., 0.1}}], 
          LineBox[{{15., 0.}, {15., 0.015}}], 
          LineBox[{{18., 0.}, {18., 0.065}}], 
          LineBox[{{14., 0.}, {14., 0.005}}], 
          LineBox[{{21., 0.}, {21., 0.09}}], 
          LineBox[{{25., 0.}, {25., 0.09}}], 
          LineBox[{{26., 0.}, {26., 0.07}}], 
          LineBox[{{22., 0.}, {22., 0.135}}], 
          LineBox[{{24., 0.}, {24., 0.06}}], 
          LineBox[{{34., 0.}, {34., 0.005}}], 
          LineBox[{{28., 0.}, {28., 0.04}}], 
          LineBox[{{16., 0.}, {16., 0.06}}], 
          LineBox[{{17., 0.}, {17., 0.01}}], 
          LineBox[{{23., 0.}, {23., 0.08}}], 
          LineBox[{{27., 0.}, {27., 0.03}}], 
          LineBox[{{30., 0.}, {30., 0.01}}], 
          LineBox[{{29., 0.}, {29., 0.01}}], 
          LineBox[{{12., 0.}, {12., 0.01}}], 
          LineBox[{{32., 0.}, {32., 0.005}}]}}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction[
         "DynamicHighlight", {{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{20., 0.}, {20., 0.11}}], 
             Line[{{19., 0.}, {19., 0.1}}], 
             Line[{{15., 0.}, {15., 0.015}}], 
             Line[{{18., 0.}, {18., 0.065}}], 
             Line[{{14., 0.}, {14., 0.005}}], 
             Line[{{21., 0.}, {21., 0.09}}], 
             Line[{{25., 0.}, {25., 0.09}}], 
             Line[{{26., 0.}, {26., 0.07}}], 
             Line[{{22., 0.}, {22., 0.135}}], 
             Line[{{24., 0.}, {24., 0.06}}], 
             Line[{{34., 0.}, {34., 0.005}}], 
             Line[{{28., 0.}, {28., 0.04}}], 
             Line[{{16., 0.}, {16., 0.06}}], 
             Line[{{17., 0.}, {17., 0.01}}], 
             Line[{{23., 0.}, {23., 0.08}}], 
             Line[{{27., 0.}, {27., 0.03}}], 
             Line[{{30., 0.}, {30., 0.01}}], 
             Line[{{29., 0.}, {29., 0.01}}], 
             Line[{{12., 0.}, {12., 0.01}}], 
             Line[{{32., 0.}, {32., 0.005}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {11.541666666666693`, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {11.541666666666693`, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, {}, {}, {
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         Line[{{20., 0.}, {20., 0.11}}], 
         Line[{{19., 0.}, {19., 0.1}}], 
         Line[{{15., 0.}, {15., 0.015}}], 
         Line[{{18., 0.}, {18., 0.065}}], 
         Line[{{14., 0.}, {14., 0.005}}], 
         Line[{{21., 0.}, {21., 0.09}}], 
         Line[{{25., 0.}, {25., 0.09}}], 
         Line[{{26., 0.}, {26., 0.07}}], 
         Line[{{22., 0.}, {22., 0.135}}], 
         Line[{{24., 0.}, {24., 0.06}}], 
         Line[{{34., 0.}, {34., 0.005}}], 
         Line[{{28., 0.}, {28., 0.04}}], 
         Line[{{16., 0.}, {16., 0.06}}], 
         Line[{{17., 0.}, {17., 0.01}}], 
         Line[{{23., 0.}, {23., 0.08}}], 
         Line[{{27., 0.}, {27., 0.03}}], 
         Line[{{30., 0.}, {30., 0.01}}], 
         Line[{{29., 0.}, {29., 0.01}}], 
         Line[{{12., 0.}, {12., 0.01}}], 
         Line[{{32., 0.}, {32., 0.005}}]}}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledDiamond]", FontSize -> 18], {0., 
            0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {11.541666666666693`, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[2], 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{-0.25, 3.1608814543136926*^-10}, \
{0.25, 3.1608814543136926*^-10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{0.75, 3.1608814543136926*^-10}, \
{1.25, 6.914428181311202*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{1.75, 3.1608814543136926*^-10}, \
{2.25, 7.562655823309128*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{2.75, 3.1608814543136926*^-10}, \
{3.25, 5.514436537829572*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{3.75, 3.1608814543136926*^-10}, \
{4.25, 3.015707481625547*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{4.75, 3.1608814543136926*^-10}, \
{5.25, 0.00001319372023211177}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{5.75, 3.1608814543136926*^-10}, \
{6.25, 0.00004810210501290749}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{6.75, 3.1608814543136926*^-10}, \
{7.25, 0.0001503190781653359}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{7.75, 3.1608814543136926*^-10}, \
{8.25, 0.00041102872935834046}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{8.75, 3.1608814543136926*^-10}, \
{9.25, 0.0009990281616348551}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{9.75, 3.1608814543136926*^-10}, \
{10.25, 0.002185374103576246}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{10.75, 3.1608814543136926*^-10}, \
{11.25, 0.004345914410520943}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{11.75, 3.1608814543136926*^-10}, \
{12.25, 0.007922239810845468}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{12.75, 3.1608814543136926*^-10}, \
{13.25, 0.013330691989403435}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{13.75, 3.1608814543136926*^-10}, \
{14.25, 0.020829206233442865}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{14.75, 3.1608814543136926*^-10}, \
{15.25, 0.030375925757104176}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{15.75, 3.1608814543136926*^-10}, \
{16.25, 0.04152958599604087}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{16.75, 3.1608814543136926*^-10}, \
{17.25, 0.05343880550961141}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{17.75, 3.1608814543136926*^-10}, \
{18.25, 0.06494299280681942}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{18.75, 3.1608814543136926*^-10}, \
{19.25, 0.0747698930341671}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{19.75, 3.1608814543136926*^-10}, \
{20.25, 0.08177957050612028}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{20.75, 3.1608814543136926*^-10}, \
{21.25, 0.08518705261054194}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{21.75, 3.1608814543136926*^-10}, \
{22.25, 0.08470303526616386}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{22.75, 3.1608814543136926*^-10}, \
{23.25, 0.08055995201944932}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{23.75, 3.1608814543136926*^-10}, \
{24.25, 0.07342703960106058}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{24.75, 3.1608814543136926*^-10}, \
{25.25, 0.064248659650928}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{25.75, 3.1608814543136926*^-10}, \
{26.25, 0.054055362687078855}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{26.75, 3.1608814543136926*^-10}, \
{27.25, 0.04379485402888333}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{27.75, 3.1608814543136926*^-10}, \
{28.25, 0.0342147297100651}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{28.75, 3.1608814543136926*^-10}, \
{29.25, 0.025808524565781865}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{29.75, 3.1608814543136926*^-10}, \
{30.25, 0.018818715829215946}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{30.75, 3.1608814543136926*^-10}, \
{31.25, 0.013279335766583833}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{31.75, 3.1608814543136926*^-10}, \
{32.25, 0.009077670934188167}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{32.75, 3.1608814543136926*^-10}, \
{33.25, 0.006017395505617156}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{33.75, 3.1608814543136926*^-10}, \
{34.25, 0.0038714860789816263}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{34.75, 3.1608814543136926*^-10}, \
{35.25, 0.0024196787993635165}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{35.75, 3.1608814543136926*^-10}, \
{36.25, 0.0014702909371132479}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{36.75, 3.1608814543136926*^-10}, \
{37.25, 0.0008692598445770891}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{37.75, 3.1608814543136926*^-10}, \
{38.25, 0.0005003962921085217}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{38.75, 3.1608814543136926*^-10}, \
{39.25, 0.0002806709971762541}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.009166666666666668], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{39.75, 3.1608814543136926*^-10}, \
{40.25, 0.00015349195158076396}]}},
       Annotation[#, "Charting`Private`Tag$25385#1"]& ]}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.009166666666666668], AbsoluteThickness[
       2], {}, {{}, LineBox[CompressedData["
1:eJxd0mtIU2Ecx/F5WVKMqYil5mXLlZql25m7uLntv60SlhOZLgtSVuqrslGp
RELYGNFFejNN6kUzcxKtrGbhCKwH7I1gVlrQBduEICnZjC4QVBSc/4LnOfC8
+PDld+A8HOlBt6MjRSAQlP07yXj45/njthxt13j4uwFtor1sar73wXMqZDDy
/sb4l0nvPNmbau9CJwPtNZBarj602DeCXsdYDM/EA+GKuhl0JuMsUK4u5TYG
P6OzGW+AWMz8qES71sQ7l/FGuOm5LopMFKMLGBfBWH/t109xHe8+CWMp9LSI
HLrWBvQmxsWgOzM1k/7xAFrGeDPI/+i8wqdH0VsYl8C4W552rroPXcq4DLI5
oaLIfgG9lXE5SNLrWqFpEL2N8XYQX3rzfjHPj65gXAkDU3uCLdYAb5DTJnLY
fVHwpGl/ELuCNlHAbFB1NW/4LnaONuGgc6Q+UCibwK6kTZRwI2nOezp+H3sV
bVIFYXPS4Iu5B9hVtIkK9mU2F+beSXQ1baKGjB7bpM+feL+GNtHAl7MP7QWz
Iexa2kQLC5qU0cvHEt9XTZtUQ3nly9+y24n70dEmOkgT+o7XHh7DrqdN9BB7
Z5sf8l7DXkOb1ICrNjLd33kFu4E2MYBIVjqq3unDbqRNjNCYNLqL4/B/ARNt
YoLlfFtrw5CHtwRouwAcY931ocAJ3sOMowBH/FnWnEk37s20XWYIWFfK3PNt
uGccNcN0d3vk9fq9uLfQdlkgf8VpX+qtwz3jqAWkt169He4A3Ftpu6ywev4n
ibZzuGcctcKPeMaCs1CG+x3//RcmJmyW
         "]]}, {}, {{}, {}}},
      Annotation[#, "Charting`Private`Tag$25385#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{11.541666666666693`, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{11.541666666666693`, 34.}, {0, 0.135}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359713008327`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"96ba57b8-9495-f444-b6d8-a1bbfb41fe08"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971415018*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"948a69ab-1d56-e747-86b2-03809290f5f7"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971418028*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"31b3538e-ea96-4f44-aaff-81e87c1f48fe"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[Cell[BoxData[
       FormBox["\<\"\[Gamma]+\[Beta]-decay, 10 sec (5Hz)\"\>", TextForm]], 
       "InlineText",ExpressionUUID->"7ce3f7da-eb54-8648-b56d-b57fc00315de"],
      Text["\[Gamma]+\[Beta]-decay, 10 sec (5Hz)"]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"# of measurements\"\>", "\<\"Time, sec\"\>", "\<\"Total \
Counts\"\>", "\<\"Mean, counts\"\>", \
"\<\"\\!\\(\\*SqrtBox[\\(Mean\\)]\\)\"\>", "\<\"\[Sigma]\"\>", "\<\"Rate, \
#/sec\"\>"},
    {"50", "0.2`", "4333", 
     RowBox[{"86.66`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"1.3\"\>",
         ShowStringCharacters->False],
        1.316510539266587,
        AutoDelete->True],
       NumberForm[#, 2]& ]}], "9.309135298189624`", "7.904041849017527`", 
     RowBox[{"433.29999999999995`", "\[PlusMinus]", 
      TagBox[
       InterpretationBox[
        StyleBox["\<\"6.6\"\>",
         ShowStringCharacters->False],
        6.582552696332936,
        AutoDelete->True],
       NumberForm[#, 2]& ]}]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971418028*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"2f67c79b-47a1-b34b-9469-c495b793b2ec"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"# of counts\"\>", "70", "73", "74", "76", "77", "78", "79", "80", 
     "81", "82", "83", "84", "85", "86", "87", "88", "90", "91", "92", "93", 
     "94", "95", "97", "98", "102", "105", "106"},
    {"\<\"Number of occurences getting # counts\"\>", "1", "1", "1", "1", "1",
      "1", "5", "1", "1", "4", "3", "1", "2", "3", "1", "1", "7", "3", "1", 
     "3", "2", "1", "1", "1", "1", "1", "1"},
    {"\<\"Probability Density\"\>", "0.02`", "0.02`", "0.02`", "0.02`", 
     "0.02`", "0.02`", "0.1`", "0.02`", "0.02`", "0.08`", "0.06`", "0.02`", 
     "0.04`", "0.06`", "0.02`", "0.02`", "0.14`", "0.06`", "0.02`", "0.06`", 
     "0.04`", "0.02`", "0.02`", "0.02`", "0.02`", "0.02`", "0.02`"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971418028*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"e33cc811-0ceb-4744-9daf-2839e99f3377"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{{}, {}, {}, {}, 
        {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{94., 0.}, {94., 2.}}], 
         LineBox[{{81., 0.}, {81., 1.}}], LineBox[{{80., 0.}, {80., 1.}}], 
         LineBox[{{73., 0.}, {73., 1.}}], LineBox[{{92., 0.}, {92., 1.}}], 
         LineBox[{{77., 0.}, {77., 1.}}], LineBox[{{79., 0.}, {79., 5.}}], 
         LineBox[{{90., 0.}, {90., 7.}}], LineBox[{{87., 0.}, {87., 1.}}], 
         LineBox[{{105., 0.}, {105., 1.}}], LineBox[{{91., 0.}, {91., 3.}}], 
         LineBox[{{78., 0.}, {78., 1.}}], LineBox[{{106., 0.}, {106., 1.}}], 
         LineBox[{{84., 0.}, {84., 1.}}], LineBox[{{95., 0.}, {95., 1.}}], 
         LineBox[{{85., 0.}, {85., 2.}}], LineBox[{{93., 0.}, {93., 3.}}], 
         LineBox[{{83., 0.}, {83., 3.}}], LineBox[{{98., 0.}, {98., 1.}}], 
         LineBox[{{88., 0.}, {88., 1.}}], LineBox[{{82., 0.}, {82., 4.}}], 
         LineBox[{{86., 0.}, {86., 3.}}], LineBox[{{97., 0.}, {97., 1.}}], 
         LineBox[{{74., 0.}, {74., 1.}}], LineBox[{{70., 0.}, {70., 1.}}], 
         LineBox[{{102., 0.}, {102., 1.}}], LineBox[{{76., 0.}, {76., 1.}}]}}, 
       TagBox[
        {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
         AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
           StyleBox["\<\"\[FilledDiamond]\"\>",
            StripOnInput->False,
            FontSize->18], {0., 0.}], CompressedData["
1:eJxdUDkOgCAQXLWxtLDTxpfIF0QEtTSx9gv7NJ7kEyRhN4Yh2QyTOTim67F3
Q0RDmipNTbI4GNllNE74O2cEbizoAfS15FF5n5G98DFj3CB/Ql79reShn8FP
0Bfxfqrre1WX/uhKzjv0+5Kz+jvxa7/kDeQZ/o8X4Aec97/3A64OM/k=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
     StyleBox[
      DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction[
        "DynamicHighlight", {{{}, {}, {}, {}, {
            Directive[
             RGBColor[1, 0, 0], 
             Opacity[0.3]], 
            Line[{{94., 0.}, {94., 2.}}], 
            Line[{{81., 0.}, {81., 1.}}], 
            Line[{{80., 0.}, {80., 1.}}], 
            Line[{{73., 0.}, {73., 1.}}], 
            Line[{{92., 0.}, {92., 1.}}], 
            Line[{{77., 0.}, {77., 1.}}], 
            Line[{{79., 0.}, {79., 5.}}], 
            Line[{{90., 0.}, {90., 7.}}], 
            Line[{{87., 0.}, {87., 1.}}], 
            Line[{{105., 0.}, {105., 1.}}], 
            Line[{{91., 0.}, {91., 3.}}], 
            Line[{{78., 0.}, {78., 1.}}], 
            Line[{{106., 0.}, {106., 1.}}], 
            Line[{{84., 0.}, {84., 1.}}], 
            Line[{{95., 0.}, {95., 1.}}], 
            Line[{{85., 0.}, {85., 2.}}], 
            Line[{{93., 0.}, {93., 3.}}], 
            Line[{{83., 0.}, {83., 3.}}], 
            Line[{{98., 0.}, {98., 1.}}], 
            Line[{{88., 0.}, {88., 1.}}], 
            Line[{{82., 0.}, {82., 4.}}], 
            Line[{{86., 0.}, {86., 3.}}], 
            Line[{{97., 0.}, {97., 1.}}], 
            Line[{{74., 0.}, {74., 1.}}], 
            Line[{{70., 0.}, {70., 1.}}], 
            Line[{{102., 0.}, {102., 1.}}], 
            Line[{{76., 0.}, {76., 1.}}]}}, {
           Annotation[{
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]], 
             GeometricTransformation[
              Inset[
               Style["\[FilledDiamond]", FontSize -> 18], {0., 
               0.}], CompressedData["
1:eJxdUDkOgCAQXLWxtLDTxpfIF0QEtTSx9gv7NJ7kEyRhN4Yh2QyTOTim67F3
Q0RDmipNTbI4GNllNE74O2cEbizoAfS15FF5n5G98DFj3CB/Ql79reShn8FP
0Bfxfqrre1WX/uhKzjv0+5Kz+jvxa7/kDeQZ/o8X4Aec97/3A64OM/k=
              "]]}, "Charting`Private`Tag#1"]}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{69.25000000000016, 106.}, {0, 7.}}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {69.25000000000016, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{69.25000000000016, 106.}, {0, 7.}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {69.25000000000016, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              RGBColor[1, 0, 0]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListPlot, "GroupHighlight" -> False|>|>],
       ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}],
      Selectable->False]},
    Annotation[{{{}, {}, {}, {}, {
        Directive[
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        Line[{{94., 0.}, {94., 2.}}], 
        Line[{{81., 0.}, {81., 1.}}], 
        Line[{{80., 0.}, {80., 1.}}], 
        Line[{{73., 0.}, {73., 1.}}], 
        Line[{{92., 0.}, {92., 1.}}], 
        Line[{{77., 0.}, {77., 1.}}], 
        Line[{{79., 0.}, {79., 5.}}], 
        Line[{{90., 0.}, {90., 7.}}], 
        Line[{{87., 0.}, {87., 1.}}], 
        Line[{{105., 0.}, {105., 1.}}], 
        Line[{{91., 0.}, {91., 3.}}], 
        Line[{{78., 0.}, {78., 1.}}], 
        Line[{{106., 0.}, {106., 1.}}], 
        Line[{{84., 0.}, {84., 1.}}], 
        Line[{{95., 0.}, {95., 1.}}], 
        Line[{{85., 0.}, {85., 2.}}], 
        Line[{{93., 0.}, {93., 3.}}], 
        Line[{{83., 0.}, {83., 3.}}], 
        Line[{{98., 0.}, {98., 1.}}], 
        Line[{{88., 0.}, {88., 1.}}], 
        Line[{{82., 0.}, {82., 4.}}], 
        Line[{{86., 0.}, {86., 3.}}], 
        Line[{{97., 0.}, {97., 1.}}], 
        Line[{{74., 0.}, {74., 1.}}], 
        Line[{{70., 0.}, {70., 1.}}], 
        Line[{{102., 0.}, {102., 1.}}], 
        Line[{{76., 0.}, {76., 1.}}]}}, {
       Annotation[{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], 
          RGBColor[1, 0, 0]], 
         GeometricTransformation[
          Inset[
           Style["\[FilledDiamond]", FontSize -> 18], {0., 
           0.}], CompressedData["
1:eJxdUDkOgCAQXLWxtLDTxpfIF0QEtTSx9gv7NJ7kEyRhN4Yh2QyTOTim67F3
Q0RDmipNTbI4GNllNE74O2cEbizoAfS15FF5n5G98DFj3CB/Ql79reShn8FP
0Bfxfqrre1WX/uhKzjv0+5Kz+jvxa7/kDeQZ/o8X4Aec97/3A64OM/k=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
      "LayoutOptions" -> <|
       "PanelPlotLayout" -> <||>, 
        "PlotRange" -> {{69.25000000000016, 106.}, {0, 7.}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {69.25000000000016, 0}, 
        "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
        "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListPlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{69.25000000000016, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Number of \[Nu] counts sec occurences\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\[Nu] \[RightArrow]\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{69.25000000000016, 106.}, {0, 7.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971472393*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"d6a8386e-9bca-d549-bbfa-f30613d0cb44"],

Cell[BoxData[
 GraphicsBox[{{{}, 
    InterpretationBox[{
      TagBox[{{{}, {}, {}, {}, 
         {RGBColor[1, 0, 0], Opacity[0.3], LineBox[{{94., 0.}, {94., 0.04}}], 
          LineBox[{{81., 0.}, {81., 0.02}}], 
          LineBox[{{80., 0.}, {80., 0.02}}], 
          LineBox[{{73., 0.}, {73., 0.02}}], 
          LineBox[{{92., 0.}, {92., 0.02}}], 
          LineBox[{{77., 0.}, {77., 0.02}}], LineBox[{{79., 0.}, {79., 0.1}}],
           LineBox[{{90., 0.}, {90., 0.14}}], 
          LineBox[{{87., 0.}, {87., 0.02}}], 
          LineBox[{{105., 0.}, {105., 0.02}}], 
          LineBox[{{91., 0.}, {91., 0.06}}], 
          LineBox[{{78., 0.}, {78., 0.02}}], 
          LineBox[{{106., 0.}, {106., 0.02}}], 
          LineBox[{{84., 0.}, {84., 0.02}}], 
          LineBox[{{95., 0.}, {95., 0.02}}], 
          LineBox[{{85., 0.}, {85., 0.04}}], 
          LineBox[{{93., 0.}, {93., 0.06}}], 
          LineBox[{{83., 0.}, {83., 0.06}}], 
          LineBox[{{98., 0.}, {98., 0.02}}], 
          LineBox[{{88., 0.}, {88., 0.02}}], 
          LineBox[{{82., 0.}, {82., 0.08}}], 
          LineBox[{{86., 0.}, {86., 0.06}}], 
          LineBox[{{97., 0.}, {97., 0.02}}], 
          LineBox[{{74., 0.}, {74., 0.02}}], 
          LineBox[{{70., 0.}, {70., 0.02}}], 
          LineBox[{{102., 0.}, {102., 0.02}}], 
          LineBox[{{76., 0.}, {76., 0.02}}]}}, 
        TagBox[
         {RGBColor[1, 0, 0], PointSize[0.012833333333333334`], 
          AbsoluteThickness[2], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"\[FilledDiamond]\"\>",
             StripOnInput->False,
             FontSize->18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]},
       {"WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
      StyleBox[
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction[
         "DynamicHighlight", {{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{94., 0.}, {94., 0.04}}], 
             Line[{{81., 0.}, {81., 0.02}}], 
             Line[{{80., 0.}, {80., 0.02}}], 
             Line[{{73., 0.}, {73., 0.02}}], 
             Line[{{92., 0.}, {92., 0.02}}], 
             Line[{{77., 0.}, {77., 0.02}}], 
             Line[{{79., 0.}, {79., 0.1}}], 
             Line[{{90., 0.}, {90., 0.14}}], 
             Line[{{87., 0.}, {87., 0.02}}], 
             Line[{{105., 0.}, {105., 0.02}}], 
             Line[{{91., 0.}, {91., 0.06}}], 
             Line[{{78., 0.}, {78., 0.02}}], 
             Line[{{106., 0.}, {106., 0.02}}], 
             Line[{{84., 0.}, {84., 0.02}}], 
             Line[{{95., 0.}, {95., 0.02}}], 
             Line[{{85., 0.}, {85., 0.04}}], 
             Line[{{93., 0.}, {93., 0.06}}], 
             Line[{{83., 0.}, {83., 0.06}}], 
             Line[{{98., 0.}, {98., 0.02}}], 
             Line[{{88., 0.}, {88., 0.02}}], 
             Line[{{82., 0.}, {82., 0.08}}], 
             Line[{{86., 0.}, {86., 0.06}}], 
             Line[{{97., 0.}, {97., 0.02}}], 
             Line[{{74., 0.}, {74., 0.02}}], 
             Line[{{70., 0.}, {70., 0.02}}], 
             Line[{{102., 0.}, {102., 0.02}}], 
             Line[{{76., 0.}, {76., 0.02}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {69.25000000000016, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, 
            "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {69.25000000000016, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            ListPlot, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}],
       Selectable->False]},
     Annotation[{{{}, {}, {}, {}, {
         Directive[
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         Line[{{94., 0.}, {94., 0.04}}], 
         Line[{{81., 0.}, {81., 0.02}}], 
         Line[{{80., 0.}, {80., 0.02}}], 
         Line[{{73., 0.}, {73., 0.02}}], 
         Line[{{92., 0.}, {92., 0.02}}], 
         Line[{{77., 0.}, {77., 0.02}}], 
         Line[{{79., 0.}, {79., 0.1}}], 
         Line[{{90., 0.}, {90., 0.14}}], 
         Line[{{87., 0.}, {87., 0.02}}], 
         Line[{{105., 0.}, {105., 0.02}}], 
         Line[{{91., 0.}, {91., 0.06}}], 
         Line[{{78., 0.}, {78., 0.02}}], 
         Line[{{106., 0.}, {106., 0.02}}], 
         Line[{{84., 0.}, {84., 0.02}}], 
         Line[{{95., 0.}, {95., 0.02}}], 
         Line[{{85., 0.}, {85., 0.04}}], 
         Line[{{93., 0.}, {93., 0.06}}], 
         Line[{{83., 0.}, {83., 0.06}}], 
         Line[{{98., 0.}, {98., 0.02}}], 
         Line[{{88., 0.}, {88., 0.02}}], 
         Line[{{82., 0.}, {82., 0.08}}], 
         Line[{{86., 0.}, {86., 0.06}}], 
         Line[{{97., 0.}, {97., 0.02}}], 
         Line[{{74., 0.}, {74., 0.02}}], 
         Line[{{70., 0.}, {70., 0.02}}], 
         Line[{{102., 0.}, {102., 0.02}}], 
         Line[{{76., 0.}, {76., 0.02}}]}}, {
        Annotation[{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[2], 
           RGBColor[1, 0, 0]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledDiamond]", FontSize -> 18], {0., 
            0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
           "]]}, "Charting`Private`Tag#1"]}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
       "LayoutOptions" -> <|
        "PanelPlotLayout" -> <||>, 
         "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {69.25000000000016, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            PointSize[0.012833333333333334`], 
            AbsoluteThickness[2], 
            RGBColor[1, 0, 0]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         ListPlot, "GroupHighlight" -> False|>|>, 
      "DynamicHighlight"]], {{}, {}}}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004766666666666667],
       AbsoluteThickness[2], 
      TagBox[{
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{-0.25, 2.3122788046210684*^-38}, \
{0.25, 2.3122788046210684*^-38}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{0.75, 2.3122788046210684*^-38}, \
{1.25, 2.003820812084618*^-36}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{1.75, 2.3122788046210684*^-38}, \
{2.25, 8.68255557876265*^-35}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{2.75, 2.3122788046210684*^-38}, \
{3.25, 2.5081008881852375*^-33}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{3.75, 2.3122788046210684*^-38}, \
{4.25, 5.433800574253317*^-32}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{4.75, 2.3122788046210684*^-38}, \
{5.25, 9.41786315529585*^-31}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{5.75, 2.3122788046210684*^-38}, \
{6.25, 1.3602533683965637*^-29}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{6.75, 2.3122788046210684*^-38}, \
{7.25, 1.683993670074946*^-28}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{7.75, 2.3122788046210684*^-38}, \
{8.25, 1.824186143108685*^-27}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{8.75, 2.3122788046210684*^-38}, \
{9.25, 1.7564885684644293*^-26}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{9.75, 2.3122788046210684*^-38}, \
{10.25, 1.5221729934312745*^-25}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{10.75, 2.3122788046210684*^-38}, \
{11.25, 1.1991955600977662*^-24}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{11.75, 2.3122788046210684*^-38}, \
{12.25, 8.6601906031727*^-24}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{12.75, 2.3122788046210684*^-38}, \
{13.25, 5.773016289776508*^-23}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{13.75, 2.3122788046210684*^-38}, \
{14.25, 3.573497083371659*^-22}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{14.75, 2.3122788046210684*^-38}, \
{15.25, 2.064528381633253*^-21}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{15.75, 2.3122788046210684*^-38}, \
{16.25, 1.1182001847021107*^-20}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{16.75, 2.3122788046210684*^-38}, \
{17.25, 5.700189882722642*^-20}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{17.75, 2.3122788046210684*^-38}, \
{18.25, 2.7443247513152453*^-19}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{18.75, 2.3122788046210684*^-38}, \
{19.25, 1.2517009628893639*^-18}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{19.75, 2.3122788046210684*^-38}, \
{20.25, 5.423620272199614*^-18}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{20.75, 2.3122788046210684*^-38}, \
{21.25, 2.2381472989943743*^-17}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{21.75, 2.3122788046210684*^-38}, \
{22.25, 8.81626567867511*^-17}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{22.75, 2.3122788046210684*^-38}, \
{23.25, 3.321815581365153*^-16}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{23.75, 2.3122788046210684*^-38}, \
{24.25, 1.1994522428379342*^-15}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{24.75, 2.3122788046210684*^-38}, \
{25.25, 4.157781254573415*^-15}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{25.75, 2.3122788046210684*^-38}, \
{26.25, 1.3858204750820464*^-14}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{26.75, 2.3122788046210684*^-38}, \
{27.25, 4.4479704581707464*^-14}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{27.75, 2.3122788046210684*^-38}, \
{28.25, 1.3766468568038458*^-13}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{28.75, 2.3122788046210684*^-38}, \
{29.25, 4.1138005727800445*^-13}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{29.75, 2.3122788046210684*^-38}, \
{30.25, 1.1883398587903955*^-12}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{30.75, 2.3122788046210684*^-38}, \
{31.25, 3.321984908476635*^-12}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{31.75, 2.3122788046210684*^-38}, \
{32.25, 8.996350380268288*^-12}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{32.75, 2.3122788046210684*^-38}, \
{33.25, 2.3624961331940904*^-11}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{33.75, 2.3122788046210684*^-38}, \
{34.25, 6.021585732429407*^-11}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{34.75, 2.3122788046210684*^-38}, \
{35.25, 1.490944627349521*^-10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{35.75, 2.3122788046210684*^-38}, \
{36.25, 3.5890350390585974*^-10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{36.75, 2.3122788046210684*^-38}, \
{37.25, 8.406102067157245*^-10}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{37.75, 2.3122788046210684*^-38}, \
{38.25, 1.917033697736439*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{38.75, 2.3122788046210684*^-38}, \
{39.25, 4.2597471857907645*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{39.75, 2.3122788046210684*^-38}, \
{40.25, 9.228742278015692*^-9}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{40.75, 2.3122788046210684*^-38}, \
{41.25, 1.9506409897874142*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{41.75, 2.3122788046210684*^-38}, \
{42.25, 4.024822575594698*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{42.75, 2.3122788046210684*^-38}, \
{43.25, 8.111421497698523*^-8}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{43.75, 2.3122788046210684*^-38}, \
{44.25, 1.5975813340694411*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{44.75, 2.3122788046210684*^-38}, \
{45.25, 3.0765866313435055*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{45.75, 2.3122788046210684*^-38}, \
{46.25, 5.796021684178874*^-7}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{46.75, 2.3122788046210684*^-38}, \
{47.25, 1.068687742874343*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{47.75, 2.3122788046210684*^-38}, \
{48.25, 1.9294266624477205*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{48.75, 2.3122788046210684*^-38}, \
{49.25, 3.4123288687289676*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{49.75, 2.3122788046210684*^-38}, \
{50.25, 5.914248395281047*^-6}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{50.75, 2.3122788046210684*^-38}, \
{51.25, 0.000010049583645785403}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{51.75, 2.3122788046210684*^-38}, \
{52.25, 0.00001674801766814929}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{52.75, 2.3122788046210684*^-38}, \
{53.25, 0.000027384588889090894}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{53.75, 2.3122788046210684*^-38}, \
{54.25, 0.00004394719394682624}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{54.75, 2.3122788046210684*^-38}, \
{55.25, 0.00006924479686239931}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{55.75, 2.3122788046210684*^-38}, \
{56.25, 0.00010715632314456292}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{56.75, 2.3122788046210684*^-38}, \
{57.25, 0.00016291520988961092}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{57.75, 2.3122788046210684*^-38}, \
{58.25, 0.00024341779463851176}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{58.75, 2.3122788046210684*^-38}, \
{59.25, 0.00035753535734531244}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{59.75, 2.3122788046210684*^-38}, \
{60.25, 0.0005164002344590795}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{60.75, 2.3122788046210684*^-38}, \
{61.25, 0.0007336269560364563}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{61.75, 2.3122788046210684*^-38}, \
{62.25, 0.001025421161453537}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{62.75, 2.3122788046210684*^-38}, \
{63.25, 0.0014105237754216432}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{63.75, 2.3122788046210684*^-38}, \
{64.25, 0.0019099373496568686}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{64.75, 2.3122788046210684*^-38}, \
{65.25, 0.0025463872418656037}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{65.75, 2.3122788046210684*^-38}, \
{66.25, 0.0033434836118192914}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{66.75, 2.3122788046210684*^-38}, \
{67.25, 0.004324571489556116}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{67.75, 2.3122788046210684*^-38}, \
{68.25, 0.005511284783601956}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{68.75, 2.3122788046210684*^-38}, 
          {69.25, 0.006921854193433993}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{69.75, 2.3122788046210684*^-38}, \
{70.25, 0.008569255491471283}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{70.75, 2.3122788046210684*^-38}, \
{71.25, 0.010459319449167625}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{71.75, 2.3122788046210684*^-38}, \
{72.25, 0.012588953103678701}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{72.75, 2.3122788046210684*^-38}, \
{73.25, 0.014944639396778031}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{73.75, 2.3122788046210684*^-38}, \
{74.25, 0.01750138446114573}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{74.75, 2.3122788046210684*^-38}, \
{75.25, 0.02022226636537185}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{75.75, 2.3122788046210684*^-38}, \
{76.25, 0.02305870530556743}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{76.75, 2.3122788046210684*^-38}, \
{77.25, 0.02595152469844771}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{77.75, 2.3122788046210684*^-38}, \
{78.25, 0.028832809363685624}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{78.75, 2.3122788046210684*^-38}, \
{79.25, 0.03162849695515185}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{79.75, 2.3122788046210684*^-38}, \
{80.25, 0.03426156932666824}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{80.75, 2.3122788046210684*^-38}, \
{81.25, 0.036655649356161356}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{81.75, 2.3122788046210684*^-38}, \
{82.25, 0.03873876308786516}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{82.75, 2.3122788046210684*^-38}, \
{83.25, 0.040447002520414395}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{83.75, 2.3122788046210684*^-38}, \
{84.25, 0.041727824266894184}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{84.75, 2.3122788046210684*^-38}, \
{85.25, 0.04254274412904764}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{85.75, 2.3122788046210684*^-38}, \
{86.25, 0.04286923495608452}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{86.75, 2.3122788046210684*^-38}, \
{87.25, 0.04270170001487684}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{87.75, 2.3122788046210684*^-38}, \
{88.25, 0.04205146958283212}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{88.75, 2.3122788046210684*^-38}, \
{89.25, 0.040945846674699235}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{89.75, 2.3122788046210684*^-38}, \
{90.25, 0.03942630080921595}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{90.75, 2.3122788046210684*^-38}, \
{91.25, 0.03754596953985334}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{91.75, 2.3122788046210684*^-38}, \
{92.25, 0.035366670873083594}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{92.75, 2.3122788046210684*^-38}, \
{93.25, 0.0329556526651766}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{93.75, 2.3122788046210684*^-38}, \
{94.25, 0.030382307020895793}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{94.75, 2.3122788046210684*^-38}, \
{95.25, 0.02771506027821926}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{95.75, 2.3122788046210684*^-38}, \
{96.25, 0.025018615871984177}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{96.75, 2.3122788046210684*^-38}, \
{97.25, 0.02235168300480566}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{97.75, 2.3122788046210684*^-38}, \
{98.25, 0.01976527397139243}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{98.75, 2.3122788046210684*^-38}, \
{99.25, 0.017301602448089575}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{99.75, 2.3122788046210684*^-38}, \
{100.25, 0.014993568681514429}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{100.75, 2.3122788046210684*^-38}, \
{101.25, 0.012864778831089507}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{101.75, 2.3122788046210684*^-38}, \
{102.25, 0.010930016995119772}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{102.75, 2.3122788046210684*^-38}, \
{103.25, 0.009196070609680381}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{103.75, 2.3122788046210684*^-38}, \
{104.25, 0.007662802683027903}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{104.75, 2.3122788046210684*^-38}, \
{105.25, 0.00632436648105903}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.004766666666666667], AbsoluteThickness[2], Opacity[0.2], 
         RectangleBox[{105.75, 2.3122788046210684*^-38}, \
{106.25, 0.005170467917439392}]}},
       Annotation[#, "Charting`Private`Tag$25622#1"]& ]}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.004766666666666667], AbsoluteThickness[
       2], {}, {{}, LineBox[CompressedData["
1:eJxd03tMU2cYx3GGURRRcAgooNSpaLmMcpGbQB8ol3Iv0ELLUI50xCgRW8S7
gjMTAVfEgQy5yQQ2phPqDcJQPCpDnJewDQhDokeE4EbUQoxTp3NLzrMs79uk
f3zy5Jdvc9ouy9iamDnDyMgo69+3Mb75V9/Vl91edUt2O/iixaSfiMOq+6Mm
4w6hX1B+K865ayWMHR5BGwPpWeAevHXG2blOfrxNKc+HLGlSmd8pLXoBZUsI
nH388mzbC2gryjYQUL8hMjxoCr2Ysh1UV3oY27Q6+fNeQtkBBl3W549YZPA+
IKC8DDjh3F8Lu46jP6K8HLz7K+9N626iV1BeCT3Z7a8EHn+iHSmvAl/F0jeZ
hhVrea+mLASxe2XLtzkJaCfKzpA7KDFzNNqLdqHsCqdjwlw68hvQH1N2A+c5
t17bbvyJN4hIsyLYvzfPcuoXA97dSbPuIPhm7sxR8cIA/u5BmvWACPPbNe+s
ffDuSZr1hOT02KaFM1R49yLNeoFNV3Dk0N3deF9Dml0Ddot2HAjedALv3qRZ
b8hQZc8/87wd7z6kWR8426kJza8ewLsvadYXCjZv3VLZMY13P9KsH5i7zZrX
5mUeyN/9SbP+UCBzzvU0FeJ9LWl2LdhadteMpUvwHkCaDQDXvbrmG9NpeA8k
zQZCRcnLsnsTuXgPIs0GQZq9elLrq8O7mDQrBu2Iww95vQ28BUCaASg30z4c
eN3Bu54yB5DDxG+T6fpwH0yaCYYhh5rC2/vHcE+ZCwZ7ZWfr+HevcB9CmgmB
c5LVT6xGzYL4PWUuBDSN4yZVOwW8BRLSjASq3m4ObIz2wD1lTgIt6nDjkp8l
uA8lzYSC+or62KMpOe4pc6EwXDVb9311Ju7DSDNh8ChUmSbo2Y57ylwYfPmJ
6Uax9hDuw0kz4WA4IrQvairHPWUuHK60tzV15TTgPoI0EwFJqqITb56ewz1l
LgKUcZqCTW4s7qWkGSnMU285NXnyDu4pc1LwbZb7MveGcB9JmomE4h55iNxy
HPeUuUi4vOuc8Y2jU7iPIs1EQV3Vvrq/297injIXBX9sm2mdZ2oi5vfRpJlo
8GsDncHxQ971lLlouGruWLvcxh73MaSZGOh74/++IHUl7ilzMeB2xu9514Qb
7mNJM7Ew07jrdE62D+4pc7FQ/tDN/NEk4D6ONBMHjxVxY3amUtxT5uJgtLWy
4ukdGe7jSTPxoFttle5kn4J7ylw8nF6/oPZ+VDpvCxlpkQwG5zUHCkc+5S2j
rJGBVnh00W11Fu9SynoZvG96kNDYpuXdR9kgg9zRXUFGZTuwn0BalAAB3j7W
Nqn7sE9ZkwBJZueNrn/xGfYp6xPA8cFNm/NZh7BP2ZAAs1xetQT0FmE/kbQo
Ed5tOnskuroE+5Q1ifC0v9xkdPIY9inrE2F88Hriykvl2KdsSISxjgufX6j5
CvtJpEVJoBjUpswpq8I+ZU0S9EotrVQFtdinrE+CoUJrqHGvxz5lQxIYzIry
O4u/xr6ctEgOf5Vk5h3uPoV9yho5PC9c7H5soAH7lPVyeH3dxmPXpUbsUzbI
oWffUq1qXRP2FaRFCnDqya4V9qJllDUKsFgl7X8xjS6lrFfAtYRFUe9H0H2U
DQowv+Xt+uPh//rJpEXJsPTZ1frhl/h5ZZQ1yXBteNWyVjd0KWV9Mmgyilv8
/PB59FE2JIN0XZGu3A6fp0UKaVEK2NX1e5U+xO9LRlmTAmXFAvti+5PYp6xP
gZ7mD7yTN9Rgn7IhBTZkDz3eU3cC+0rSIiWUVFjMT3tcgX3KGiW0jHtbqQLx
91xKWa8EZ3nn6MF2/D/0UTYoQbhzccf0Rfw/WahIi1QQnnkn4zdlMfYpa1QQ
o44325NRgH3KehWcKRZeVA8cxD5lgwps91x6ZqLOx34qaVEqTNyXeJZP7MY+
ZU0qOEZ0/17vuh37//sfF0XhoA==
         "]]}, {}, {{}, {}}},
      Annotation[#, "Charting`Private`Tag$25622#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{69.25000000000016, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
    FormBox["\"Probability Density\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentPoint", 
    "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{69.25000000000016, 106.}, {0, 0.14}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.9372359715822754`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4605db8b-5f93-eb47-9303-9464a71e9256"],

Cell[BoxData["\<\"------------------------\"\>"], "Output",
 CellChangeTimes->{
  3.936885512555479*^9, 3.936885821975601*^9, 3.9368859347913704`*^9, 
   3.936886162813059*^9, {3.936891857465954*^9, 3.936891860523821*^9}, 
   3.937235557164404*^9, 3.937235971601528*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b6b31007-4e88-ca4d-9bdb-d59cdb640768"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The Physics and Calculations for each dataset share the same theoretical \
concepts.\n\n",
 StyleBox["The First Table for each of the datasets shows the", 
  "Subsubsection"],
 "\n- The total # of measurements is the Length of each of Our datasets \
calculated by Length[var]\n- Time, sec it the time interval between each of \
our measurements (Time Period = 1/frequency)\n- Total Counts (calculated as \
Total[var]) is the total number of particles detected in the entire duration \
of the specific experimental run\n- Mean is the average value of \
detections/measurement calculated as (Total # of Counts)/(# of measurements), \
(uncertainty in mean is calculated as Sqrt(mean/N) (SigmaBar - The std \
deviation of means within all possible subsets of the sample))\n- \[Sigma] = \
Sqrt( ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"N", "-", "1"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "i"], "-", 
         OverscriptBox["x", "_"]}], ")"}], "2"]}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"753ffb98-0c00-b14a-b5b7-d8b498a25e7a"],
 " depicts how spread out our data is.\n- The Rate, #/Second is the average \
expected detections per second calculated as the average (mean) Detections \
per measurement/time interval between measurements. (Simply Mean/Time)\n- The \
uncertainty in the Rate is calculated as (Uncertainty for counts) / time or \
(As per Poisson Statistics Approximations) ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"(", 
     SubscriptBox["\[Sqrt]", 
      RowBox[{"Total", " ", "Counts"}]]}]}], TraditionalForm]],ExpressionUUID->
  "140792b7-8de8-cb4f-a4b9-709b1d37ab30"],
 ")/Length) / time.\n\n",
 StyleBox["The second Table for each dataset shows the", "Subsubsection"],
 "\n- Tally of all occurrences of getting a certain number of detections in a \
single measurement\n- The probability distribution (density) depicts how \
likely we are to get certain detections within a certain interval of count \
interval\n\tCalculated in the software as Table[{N[Tally[var][[i, \
2]]/Length[var]]}, {i, Length[Tally[var]]}]\n\n",
 StyleBox["The Plots:", "Subsubsection"],
 "\t\nThe first plot plots actual measurement tally for each #detections or \
number of occurrences getting # counts (as depicted by the second Table).\n\
The Poisson distribution likely hood to get a certain value\n\nThe second \
plot overlays the probabilities calculated using the Poisson Distribution \
approximation for discrete datasets ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"x", ",", " ", "\[Mu]"}], ")"}]}], "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Mu]"}]], 
    RowBox[{
     SuperscriptBox["\[Mu]", "x"], "/", "x"}]}]}]], "Input",
  CellChangeTimes->{{3.62036640858217*^9, 3.620366427802291*^9}, {
    3.620366474209902*^9, 3.6203664790852537`*^9}, {3.620366515423551*^9, 
    3.620366604174761*^9}, {3.620366636425338*^9, 3.620366664758003*^9}, {
    3.620366877819783*^9, 3.620366879860447*^9}, {3.6203669389882517`*^9, 
    3.620366939354376*^9}, {3.620367007554491*^9, 3.620367027365584*^9}, {
    3.620368624877184*^9, 3.620368645291195*^9}, {3.620368729927086*^9, 
    3.620368809179925*^9}, {3.620368912803269*^9, 3.620368979807271*^9}, {
    3.6203690206950407`*^9, 3.620369026245367*^9}, {3.620369128004821*^9, 
    3.620369181325704*^9}, 3.6203713388729887`*^9, {3.6203714338488398`*^9, 
    3.620371436246683*^9}, {3.620371622751505*^9, 3.6203716771289873`*^9}, {
    3.620371827387702*^9, 3.620371832472508*^9}, 3.620374579591223*^9, {
    3.620374643237403*^9, 3.6203748740244617`*^9}, {3.620374904307818*^9, 
    3.620374957633007*^9}, {3.6203758846250257`*^9, 3.620375938655294*^9}, {
    3.620376057540099*^9, 3.6203761555522537`*^9}, 3.620376260926412*^9, {
    3.620376358223434*^9, 3.620376429420453*^9}, 3.6203765481351967`*^9, {
    3.620377238987687*^9, 3.62037727159805*^9}, {3.620377311072472*^9, 
    3.620377311885796*^9}, {3.6203773871363153`*^9, 3.6203773914737587`*^9}, {
    3.620458995566737*^9, 3.6204590511340933`*^9}, {3.620459208911106*^9, 
    3.620459211204475*^9}, {3.620459255212205*^9, 3.620459304146138*^9}, {
    3.6204593523581867`*^9, 3.620459363785693*^9}, {3.620459401535932*^9, 
    3.620459431793502*^9}, {3.6204595614673*^9, 3.620459593339095*^9}, {
    3.6204596944252577`*^9, 3.620459728768627*^9}, {3.620459771305159*^9, 
    3.620460044484503*^9}, {3.6204603852898693`*^9, 3.620460478324705*^9}, {
    3.6204605739459553`*^9, 3.6204605748160467`*^9}, {3.620460606231427*^9, 
    3.620460616007704*^9}, {3.620460663488751*^9, 3.6204607444100027`*^9}, {
    3.6204607918171062`*^9, 3.620460810072866*^9}, {3.620460868304084*^9, 
    3.620460913572468*^9}, {3.620460947250969*^9, 3.620460973103181*^9}, {
    3.620461053884869*^9, 3.620461127793209*^9}, {3.620461263188821*^9, 
    3.620461298072722*^9}, {3.620461461384941*^9, 3.620461473658826*^9}, 
    3.6205749780154343`*^9, {3.620575043120007*^9, 3.620575043335272*^9}, {
    3.6207134482429667`*^9, 3.6207135075137568`*^9}, {3.620714530021862*^9, 
    3.620714542092602*^9}, {3.620715069939713*^9, 3.620715126286542*^9}, 
    3.6207187525598307`*^9, {3.684515234709236*^9, 3.684515234812501*^9}, {
    3.684627787432392*^9, 3.684627792588664*^9}, 3.6846299270136423`*^9, {
    3.9368848633516407`*^9, 3.93688487193808*^9}, {3.936884908839529*^9, 
    3.93688512813043*^9}, {3.9368851762255363`*^9, 3.936885246750883*^9}, {
    3.936885287186802*^9, 3.936885319400566*^9}, {3.9368854101845303`*^9, 
    3.9368854711372547`*^9}, {3.9368857804150257`*^9, 
    3.9368859185566273`*^9}, {3.9368860732592583`*^9, 
    3.9368861617061176`*^9}},ExpressionUUID->
  "82b88662-2944-c24a-87d9-07e9593f7cf8"],
 " over the actual frequency distribution as in plot one.\n\nIt can clearly \
be scene that when we have a smaller value of the mean, the Distribution is \
very skewed (simply because rare events are more likely to not occur than to \
occur). But as the mean value increases and the likelihood increases, the \
dataset gets closer to a Bell curve, showing a symmetrical distribution.\n"
}], "Text",
 CellChangeTimes->{{3.9368859523318405`*^9, 3.936885960910099*^9}, {
   3.9368865156313496`*^9, 3.9368866359722004`*^9}, {3.936886678521618*^9, 
   3.9368868419048824`*^9}, {3.936887392156706*^9, 3.936887392869898*^9}, {
   3.9368874478181267`*^9, 3.9368874700118656`*^9}, {3.9368875225829506`*^9, 
   3.9368876384304276`*^9}, {3.9368881332026253`*^9, 
   3.9368881468040276`*^9}, {3.93688821587204*^9, 3.936888451781908*^9}, {
   3.9368886302168503`*^9, 3.936888650291012*^9}, {3.9368887181799316`*^9, 
   3.936888748611601*^9}, {3.936888863597767*^9, 3.9368888975304966`*^9}, {
   3.936889118564642*^9, 3.936889233341425*^9}, {3.936889284136118*^9, 
   3.93688935037286*^9}, 3.9368893807355976`*^9, {3.9368894153343124`*^9, 
   3.936889517622099*^9}, {3.93688962629484*^9, 3.9368896433395805`*^9}, {
   3.937236108494463*^9, 3.937236214429905*^9}, 3.9372362559119225`*^9, {
   3.937240589188862*^9, 3.9372406194575233`*^9}, {3.937240658926405*^9, 
   3.937240662305891*^9}, {3.937241528268732*^9, 3.9372415552561245`*^9}, {
   3.937241896819294*^9, 
   3.9372419275478935`*^9}},ExpressionUUID->"e472d889-c1b7-a049-9313-\
ac1d2f95f472"],

Cell[CellGroupData[{

Cell["\<\
Step3.
- When does the histogram resemble a Gaussian curve centered on \[Mu]?
- On these histograms that can be approximated by a Gaussian distribution, \
overlay a Gaussian curve fit with proper parameters \[Mu] and \[Sigma] on top \
of the histogram and Poisson distribution function.
If needed, check \[OpenCurlyQuote]Lab 1. Error Analysis I\[CloseCurlyQuote] \
to see how to define and plot a Gaussian distribution. Include all the \
plotting functions inside one Show[...] function to overlay them on top of \
each other.
- Draw a vertical line on the histograms at the position of the mean. Show \
the range \[Mu] \[PlusMinus] \[Sigma] range on the histograms.
- Explain the relation of the counts observed in the experiment to the \
Poisson distribution. Also compare square roots of the means and standard \
deviations.
- Explain why the Poisson distribution can model the random behavior of the \
Cs-137 radioactive decay.\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6185032352645617`*^9, 3.6185032518917503`*^9}, 
   3.618503418141266*^9, {3.62057462183501*^9, 3.620574848325094*^9}, {
   3.620574885544086*^9, 3.6205749577847977`*^9}, {3.620575135217271*^9, 
   3.620575169702916*^9}, {3.620575215456983*^9, 3.620575342365005*^9}, {
   3.62057555768246*^9, 3.6205756188428802`*^9}, {3.620575708479958*^9, 
   3.620575743129075*^9}, {3.620576520929832*^9, 3.620576555551998*^9}, {
   3.620713660494319*^9, 3.620713689214072*^9}, {3.684080760901957*^9, 
   3.684080790933023*^9}, {3.684080942966846*^9, 3.6840809923520184`*^9}, {
   3.684081234900304*^9, 3.684081241623364*^9}, {3.684518267925652*^9, 
   3.684518291595848*^9}, {3.684519083441864*^9, 3.684519090094589*^9}, {
   3.684520637596039*^9, 3.684520744993249*^9}, {3.6845211039858027`*^9, 
   3.68452120864929*^9}, {3.684625234345808*^9, 3.684625282870009*^9}, {
   3.684625325150165*^9, 3.684625529969837*^9}, {3.684625593310767*^9, 
   3.684625777103942*^9}, {3.684625841340457*^9, 3.684625856129895*^9}, {
   3.684626124458107*^9, 3.6846261246738*^9}, {3.6846278541697397`*^9, 
   3.6846279138241653`*^9}, {3.684627965962975*^9, 3.684628022602599*^9}, {
   3.6846285270781507`*^9, 3.6846285313721657`*^9}, {3.684628570310413*^9, 
   3.684628582710775*^9}, {3.684629884826672*^9, 3.684629886515798*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"088a2d68-1a9f-4fe4-8083-5b2705063d22"],

Cell["\<\
For a larger data set (which \[OpenCurlyDoubleQuote]seems\
\[CloseCurlyDoubleQuote] more continuous at surface), the histogram resembles \
a Gaussian curve centered on \[Mu]. I.e. datasets that detect \
\[Gamma]+\[Beta]-decay particles. This factor is there because practical \
datasets approach close resemblance to real datasets with greater sample space.
As explained earlier, a larger mean value is also a key factor into having a \
dataset seem closer to the gaussian curve. Lower mean value would mean a rare \
event, which in essence would be more likely to not occur than to occur. \
Hence, having a symmetry in the data is hard. As the mean value increases and \
the likelihood of the event increases, there seems to emerge a higher \
symmetry of the data about the mean value and hence, the data seems to more \
closely resemble the Gaussian Curve (The bell curve). This (as I would \
imagine) is the key that links the Poisson distribution to the Normal \
Distribution. Since the variance is mean, low mean values would mean a very \
skewed graph since it is all clumped besides the mean. With a high mean value \
however, there must be a high variance, and since the data is spread out, it \
is conna have a gradient like that in a bell curve. (if we think of a very \
high mean... the data would be centered about the mean value but spread \
across a very large area, exactly how a bell curve is!)
\
\>", "Text",
 CellChangeTimes->{{3.620575051609541*^9, 3.620575051932386*^9}, {
   3.9368903374397087`*^9, 3.9368903908928185`*^9}, 3.936890506315115*^9, {
   3.9368912834542103`*^9, 3.9368913086560535`*^9}, {3.937236258946867*^9, 
   3.937236387379219*^9}, {3.937238597390209*^9, 
   3.937238671508749*^9}},ExpressionUUID->"1a6da35e-78e8-40de-8ba0-\
0221b61d28a9"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9368905189531746`*^9, 3.936890520719408*^9}, 
   3.936891967472454*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"0d165b0b-3df9-924f-bb82-60115dfefe82"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.9368905300213947`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"7ecb6fb5-6c1e-5c45-b667-7801388e9521"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"x_", ",", "  ", "\[Mu]_", ",", " ", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", "*", "\[Pi]"}]], "*", "\[Sigma]"}]], "*", 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], 
      RowBox[{"2", "*", 
       SuperscriptBox[
        RowBox[{"(", "\[Sigma]", ")"}], "2"]}]]]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlotMyGaussian", "[", "dataset_", "]"}], " ", ":=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"x1", ",", " ", 
       RowBox[{"Mean", "[", "dataset", "]"}], ",", " ", 
       RowBox[{"StandardDeviation", "[", "dataset", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", 
       RowBox[{
        RowBox[{"Mean", "[", "dataset", "]"}], "-", 
        RowBox[{"3.5", " ", 
         RowBox[{"StandardDeviation", "[", "dataset", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Mean", "[", "dataset", "]"}], "+", 
        RowBox[{"3.5", " ", 
         RowBox[{"StandardDeviation", "[", "dataset", "]"}]}]}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9368907432998505`*^9, 3.93689078634655*^9}, {
  3.9368908735732174`*^9, 3.936890965673088*^9}, {3.936891122451023*^9, 
  3.936891127181116*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"cf84a15a-9f65-f24a-85c7-29c44e8c308d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"--", 
   RowBox[{"--", "--"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.936890988648983*^9, 3.9368909945502872`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"f53766b9-e6c8-e244-9151-8a88e0124d92"],

Cell[CellGroupData[{

Cell[BoxData[{"\"\<--------\[Beta]+\[Gamma] 50 seconds (20 Hz):--------\>\"", \
"\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Tally", "[", "up50", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up50", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"Length", "[", "up50", "]"}]}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Tally", "[", "up50", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", " ", 
     RowBox[{"PlotMarkers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", " ", "18"}], "}"}]}], ",", 
     " ", 
     RowBox[{"Filling", "->", "Axis"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"PoissonDistribution", "[", 
        RowBox[{"Mean", "[", "up50", "]"}], "]"}], ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
     RowBox[{"ExtentSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotMyGaussian", "[", "up50", "]"}], ",", "\[IndentingNewLine]", 
   " ", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Nu] \[RightArrow]\>\"", " ", ",", "\"\<Probability Density\>\""}],
      "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanUp50", "=", 
   RowBox[{"Mean", "[", "up50", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaUp50", " ", "=", " ", 
   RowBox[{"StandardDeviation", "[", "up50", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "meanUp50", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp50", "+", "sigmaUp50"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp50", "-", "sigmaUp50"}], 
  "]"}], "\[IndentingNewLine]", "\"\<--------\[Beta]+\[Gamma] 10 seconds (20 \
Hz):--------\>\"", "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up10Hz20", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"Length", "[", "up10Hz20", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Tally", "[", "up10Hz20", "]"}], "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", "18"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"PoissonDistribution", "[", 
        RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "40"}], "}"}], ",", 
     RowBox[{"ExtentSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".25", "]"}], ",", 
        RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotMyGaussian", "[", "up10Hz20", "]"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Nu] \[RightArrow]\>\"", ",", "\"\<Probability Density\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanUp10Hz20", "=", 
   RowBox[{"Mean", "[", "up10Hz20", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaUp10Hz20", " ", "=", " ", 
   RowBox[{"StandardDeviation", "[", "up10Hz20", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "meanUp10Hz20", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp10Hz20", "+", "sigmaUp10Hz20"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp10Hz20", "-", "sigmaUp10Hz20"}], 
  "]"}], "\[IndentingNewLine]", "\"\<--------\[Beta]+\[Gamma] 10 seconds (5 \
Hz):--------\>\"", "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "/", 
           RowBox[{"Length", "[", "up10Hz5", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"Tally", "[", "up10Hz5", "]"}], "]"}]}], "}"}]}], "]"}], 
     ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotMarkers", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<\[FilledDiamond]\>\"", ",", "18"}], "}"}]}], ",", 
     RowBox[{"Filling", "->", "Axis"}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"PoissonDistribution", "[", 
        RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], ",", "k"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"Tally", "[", "up10Hz5", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"ExtentSize", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".25", "]"}], ",", 
        RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", "All"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotMyGaussian", "[", "up10Hz5", "]"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Nu] \[RightArrow]\>\"", ",", "\"\<Probability Density\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanUp10Hz5", "=", 
   RowBox[{"Mean", "[", "up10Hz5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigmaUp10Hz5", " ", "=", " ", 
   RowBox[{"StandardDeviation", "[", "up10Hz5", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "meanUp10Hz5", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp10Hz5", "+", "sigmaUp10Hz5"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"meanUp10Hz5", "-", "sigmaUp10Hz5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.936890997245373*^9, 3.9368910011121616`*^9}, {
   3.936891037761959*^9, 3.93689109138175*^9}, {3.936891157543413*^9, 
   3.9368912498794937`*^9}, {3.9368913391881847`*^9, 
   3.9368913453812027`*^9}, {3.9368914087315025`*^9, 3.936891454435583*^9}, {
   3.9368915700929604`*^9, 3.9368915711054497`*^9}, {3.9368916859177628`*^9, 
   3.9368917380123425`*^9}, 3.936891894809513*^9, 3.937236445641348*^9, {
   3.937236492097185*^9, 3.937236493486702*^9}, {3.937236525385113*^9, 
   3.9372365417899456`*^9}, {3.937236994794695*^9, 3.937237324423895*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"8380ecdd-1378-d043-95cf-63f18687df02"],

Cell[BoxData["\<\"--------\[Beta]+\[Gamma] 50 seconds (20 Hz):--------\"\>"], \
"Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.937237327509083*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"a4140fa2-def4-8b45-bab3-b438d1a648f8"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{}, 
        InterpretationBox[{
          TagBox[{{{}, {}, {}, {}, {
              RGBColor[1, 0, 0], 
              Opacity[0.3], 
              LineBox[{{21., 0.}, {21., 0.13}}], 
              LineBox[{{20., 0.}, {20., 0.095}}], 
              LineBox[{{23., 0.}, {23., 0.098}}], 
              LineBox[{{17., 0.}, {17., 0.062}}], 
              LineBox[{{28., 0.}, {28., 0.024}}], 
              LineBox[{{24., 0.}, {24., 0.088}}], 
              LineBox[{{22., 0.}, {22., 0.106}}], 
              LineBox[{{26., 0.}, {26., 0.045}}], 
              LineBox[{{25., 0.}, {25., 0.077}}], 
              LineBox[{{27., 0.}, {27., 0.04}}], 
              LineBox[{{18., 0.}, {18., 0.054}}], 
              LineBox[{{31., 0.}, {31., 0.009}}], 
              LineBox[{{30., 0.}, {30., 0.013}}], 
              LineBox[{{32., 0.}, {32., 0.002}}], 
              LineBox[{{19., 0.}, {19., 0.079}}], 
              LineBox[{{14., 0.}, {14., 0.01}}], 
              LineBox[{{29., 0.}, {29., 0.018}}], 
              LineBox[{{16., 0.}, {16., 0.032}}], 
              LineBox[{{15., 0.}, {15., 0.012}}], 
              LineBox[{{13., 0.}, {13., 0.001}}], 
              LineBox[{{33., 0.}, {33., 0.003}}], 
              LineBox[{{35., 0.}, {35., 0.002}}]}}, 
            TagBox[{
              RGBColor[1, 0, 0], 
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              GeometricTransformationBox[
               InsetBox[
                StyleBox[
                "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 
                 18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
          StyleBox[
           DynamicBox[
            (Charting`HighlightActionBox["DynamicHighlight", {}, 
             Slot["HighlightElements"], 
             Slot["LayoutOptions"], 
             Slot["Meta"], 
             Charting`HighlightActionFunction[
             "DynamicHighlight", {{{}, {}, {}, {}, {
                 Directive[
                  RGBColor[1, 0, 0], 
                  Opacity[0.3]], 
                 Line[{{21., 0.}, {21., 0.13}}], 
                 Line[{{20., 0.}, {20., 0.095}}], 
                 Line[{{23., 0.}, {23., 0.098}}], 
                 Line[{{17., 0.}, {17., 0.062}}], 
                 Line[{{28., 0.}, {28., 0.024}}], 
                 Line[{{24., 0.}, {24., 0.088}}], 
                 Line[{{22., 0.}, {22., 0.106}}], 
                 Line[{{26., 0.}, {26., 0.045}}], 
                 Line[{{25., 0.}, {25., 0.077}}], 
                 Line[{{27., 0.}, {27., 0.04}}], 
                 Line[{{18., 0.}, {18., 0.054}}], 
                 Line[{{31., 0.}, {31., 0.009}}], 
                 Line[{{30., 0.}, {30., 0.013}}], 
                 Line[{{32., 0.}, {32., 0.002}}], 
                 Line[{{19., 0.}, {19., 0.079}}], 
                 Line[{{14., 0.}, {14., 0.01}}], 
                 Line[{{29., 0.}, {29., 0.018}}], 
                 Line[{{16., 0.}, {16., 0.032}}], 
                 Line[{{15., 0.}, {15., 0.012}}], 
                 Line[{{13., 0.}, {13., 0.001}}], 
                 Line[{{33., 0.}, {33., 0.003}}], 
                 Line[{{35., 0.}, {35., 0.002}}]}}, {
                Annotation[{
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]], 
                  GeometricTransformation[
                   Inset[
                    Style["\[FilledDiamond]", FontSize -> 18], {0., 
                    0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

                   "]]}, "Charting`Private`Tag#1"]}}, <|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
                 "Frame" -> {{False, False}, {False, False}}, 
                 "AxesOrigin" -> {12.541666666666696`, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {12.541666666666696`, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
            ImageSizeCache -> {{
             4.503599627370496*^15, -4.503599627370496*^15}, {
             4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
           False]}, 
         Annotation[{{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{21., 0.}, {21., 0.13}}], 
             Line[{{20., 0.}, {20., 0.095}}], 
             Line[{{23., 0.}, {23., 0.098}}], 
             Line[{{17., 0.}, {17., 0.062}}], 
             Line[{{28., 0.}, {28., 0.024}}], 
             Line[{{24., 0.}, {24., 0.088}}], 
             Line[{{22., 0.}, {22., 0.106}}], 
             Line[{{26., 0.}, {26., 0.045}}], 
             Line[{{25., 0.}, {25., 0.077}}], 
             Line[{{27., 0.}, {27., 0.04}}], 
             Line[{{18., 0.}, {18., 0.054}}], 
             Line[{{31., 0.}, {31., 0.009}}], 
             Line[{{30., 0.}, {30., 0.013}}], 
             Line[{{32., 0.}, {32., 0.002}}], 
             Line[{{19., 0.}, {19., 0.079}}], 
             Line[{{14., 0.}, {14., 0.01}}], 
             Line[{{29., 0.}, {29., 0.018}}], 
             Line[{{16., 0.}, {16., 0.032}}], 
             Line[{{15., 0.}, {15., 0.012}}], 
             Line[{{13., 0.}, {13., 0.001}}], 
             Line[{{33., 0.}, {33., 0.003}}], 
             Line[{{35., 0.}, {35., 0.002}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGAQA2JGIGZigAFThyUFtlzXFx+wh/BNHIJ2yLW+DtwB5Zs7
ePEwabeL7YTyDR0iLLecKNu3Hsq3cfhVl7WnZPIMKN/CYZcnSMM2KN/ModMx
4ekFpd1QvpUD0DKgjcuhfEuH5gOnFrpu2wzlWztUi6xzf1i1BMo3crh57nvw
46WroXx7B+v7/r3T85qgfDsHsHPmd0H5Dg5/Vn685JuUAOUbO1z2TRIAuhnK
14Ga3wLl20LNmwTlG0D1L4Dy9aD+64DytaDyARB+gwNUPgPKd4TbDwCfZ2Vf

               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{12.541666666666696`, 35.}, {0, 0.13}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {12.541666666666696`, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], {{}, {}}}, {{{
          RGBColor[0.368417, 0.506779, 0.709798], 
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          TagBox[{{
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{-0.25, 2.8715470603029094`*^-10}, {0.25, 
              2.8715470603029094`*^-10}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{0.75, 2.8715470603029094`*^-10}, {1.25, 
              6.309076046191522*^-9}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{1.75, 2.8715470603029094`*^-10}, {2.25, 
              6.930835490543697*^-8}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{2.75, 2.8715470603029094`*^-10}, {3.25, 
              5.075912885424518*^-7}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{3.75, 2.8715470603029094`*^-10}, {4.25, 
              2.788072050141553*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{4.75, 2.8715470603029094`*^-10}, {5.25, 
              0.000012251346202732011`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{5.75, 2.8715470603029094`*^-10}, {6.25, 
              0.00004486238790337083}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{6.75, 2.8715470603029094`*^-10}, {7.25, 
              0.0001408102178035658}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{7.75, 2.8715470603029094`*^-10}, {8.25, 
              0.00038671766192026807`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{8.75, 2.8715470603029094`*^-10}, {9.25, 
              0.0009440637500055788}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{9.75, 2.8715470603029094`*^-10}, {10.25, 
              0.002074202465137257}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{10.75, 2.8715470603029094`*^-10}, {11.25, 
              0.004142936578320971}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{11.75, 2.8715470603029094`*^-10}, {12.25, 
              0.007585371630190837}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{12.75, 2.8715470603029094`*^-10}, {13.25, 
              0.012819861545147915`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{13.75, 2.8715470603029094`*^-10}, {14.25, 
              0.020118941286317485`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{14.75, 2.8715470603029094`*^-10}, {15.25, 
              0.029468883933445433`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{15.75, 2.8715470603029094`*^-10}, {16.25, 
              0.0404663030563581}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{16.75, 2.8715470603029094`*^-10}, {17.25, 
              0.052299126144190806`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{17.75, 2.8715470603029094`*^-10}, {18.25, 
              0.06383689447300091}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{18.75, 2.8715470603029094`*^-10}, {19.25, 
              0.07381896886664752}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{19.75, 2.8715470603029094`*^-10}, {20.25, 
              0.08109382824845564}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{20.75, 2.8715470603029094`*^-10}, {21.25, 
              0.08484345240222946}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{21.75, 2.8715470603029094`*^-10}, {22.25, 
              0.08473161330588108}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{22.75, 2.8715470603029094`*^-10}, {23.25, 
              0.0809407946062397}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{23.75, 2.8715470603029094`*^-10}, {24.25, 
              0.07409792492890384}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{24.75, 2.8715470603029094`*^-10}, {25.25, 
              0.06512022034451787}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{25.75, 2.8715470603029094`*^-10}, {26.25, 
              0.055029090814976984`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{26.75, 2.8715470603029094`*^-10}, {27.25, 
              0.04477941312206887}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{27.75, 2.8715470603029094`*^-10}, {28.25, 
              0.035137445918034825`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{28.75, 2.8715470603029094`*^-10}, {29.25, 
              0.026620856009142865`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{29.75, 2.8715470603029094`*^-10}, {30.25, 
              0.019496227579229267`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{30.75, 2.8715470603029094`*^-10}, {31.25, 
              0.013817794069136973`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{31.75, 2.8715470603029094`*^-10}, {32.25, 
              0.009487211046656516}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{32.75, 2.8715470603029094`*^-10}, {33.25, 
              0.0063164701183663725`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{33.75, 2.8715470603029094`*^-10}, {34.25, 
              0.004081740146194928}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{34.75, 2.8715470603029094`*^-10}, {35.25, 
              0.002562283221487108}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{35.75, 2.8715470603029094`*^-10}, {36.25, 
              0.0015637756849803679`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{36.75, 2.8715470603029094`*^-10}, {37.25, 
              0.0009285869074244234}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{37.75, 2.8715470603029094`*^-10}, {38.25, 
              0.0005368942879742633}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{38.75, 2.8715470603029094`*^-10}, {39.25, 
              0.00030246421541237274`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{39.75, 2.8715470603029094`*^-10}, {40.25, 
              0.00016613603192063107`}]}}, 
           Annotation[#, "Charting`Private`Tag$42767#1"]& ]}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           PointSize[0.009166666666666668], 
           AbsoluteThickness[2], {}, {{}, 
            LineBox[CompressedData["
1:eJxd011IU2Ecx/Gl0pyGIVkuRNzUZZpr05lz7uX8N0sIR4mLXBaxbLqLKCuS
8kJmbxeLXlGKtIZGdaFGM1wNhHpQNhEtdGV1ETSiqFUSObEFjRqc/4LnOfBc
fPjyO5wD50ib2xpakgUCQXH8JOHhr9lnj7VjLx+MRfRojvYX7vpgZ+pnsdbA
e4nxH+5tq6Vjvvc4Oglor4SCZf0qeeoAOo1xBvya9sztPjiJzmS8BqzBZpV9
JIxeyzgbiraXhy3nhRzv9YxzIHfi2pUXJ/LRuYzzoLFv0Ztu1fDukjCWwk8x
d/LAjx3ofMYFoF0WR7/GbOhCxjL4LprNVESPojcwLgJFU+3I60wneiPjYiCL
vR6z8QK6hPEmyGo5VLe6twddylgO9e7fDdlyN3ozYwV0ytpm/z65yxuUtIkS
XHkzpyKBQexltEncpWn7bzd6sJfTJuUA9TlTM58eYVfRJiqIpeuGr46PYq+g
TSpAGbYumH1e7Ftok7hF63qinkSvpE0qYWfsaZnLl7i/mjZRg8yx7WNWNPF8
VbRJFSxJPQLfUOL9NLSJBo6ljH/wlw5jr6ZNqmFf65TfsnAfu5Y20UJ3e0ma
KzaAXUeb6ODdrecOp6kPu5420cOrc/aHc8vd2A20iQEm3ogWuswXsXO0CQd+
ryMsPHKWtwRo2wCG6ppc5vcdvPsZhwCGgymTyT78niVG2jYjCAPtu5wxO+4Z
h4xw5o56b8S9B/cm2jYTiC5nqC4dxv+tn3HIBN/mjKPTN4y4r6Ftq4HCFfPh
00EV7hmH4m6YvHczIMP91v/+B/rwhtY=
             "]]}, {}, {{}, {}}}, 
          Annotation[#, "Charting`Private`Tag$42767#1"]& ]}, {}, {}}, 
       InterpretationBox[{
         TagBox[{{{}, {}, 
            TagBox[{
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Opacity[1.], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[
           (Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1:eJwtmXk0ld/3x5GpIikSSTLPxB0Qd+9bMhciYyJJ5kRJpT5KJFPmDCkqQ+aQ
4d6bIVMDkaFQhspQkogolN/9rvX761mvdc6znz289zl7rWe3y+nDJ9lYWFhe
sLKw/O95XzdP5vYNCfzcOjjBeU0VftRXVCVFSeDWIA2P/jpV0NnXoJ9wSwLl
vV3zBFdVoU9/wC3mtgQKHglm/bZXDbjNN+aF5klgd3RqDNLUwMfltKxfmwTu
oFZdiGncA5o3yHJGXJJoSi7sVv2rAWHr9Wr0N0piOa0ij02SAN1R5oZ6fJLI
G7hrZpsRAbziPNxBSBJfzZq4cKQQ4G5aRj5RVhILxF9t4NAgAnvRmpyEgSRO
f0+QnrpAgs6uNvmVcEnMz/dO0qVoQQP5Ut6hKEmMEDbWWfPTgvK7KtL3b0li
pq5a/86HWpDsnSxulCqJdGei/tmN2uDAfULo9iNJnO0zv5syrA2T8I9do10S
W1mE/2je1oG1EsKoJ78UxtyrSFZRRJgV/OJYJyiFUTf1pX8bI3wKznjPLyKF
MylcTsueCC3GbO9qJKTwZmGMRkEhQtREZwcnQQoN+Z8pNKpSQUjMi37fWgp9
vrCIiO7fB6ox2SmDGUz7Js5Koml6ILBte9nYPSn8JLBQz1unB8t3Y1/MPJDC
y/f5du39rAetZZdW2YqksFcxOs5Y5QAc7T3iosiQQrkqscgDbQcgcscGleAP
UnjDuspxid0AJh75t+zcKY05AeW5tMdG0K7+dVh2tzTOneQc7hw2gnK60+89
0tJY/D1klxKPMVzuMFXUV5ZGXtn+ffRTxiAwJxPvqyuNlipcpRQJE9in+f5o
vaM08lSbxKnlmMLd1v0Lznel0THgacTNcTPgdnzRbH1fGuvSj4fe5jUH//lD
yaa50uhM7o9LkDMHA3F7kmaJNA7wjp5kczKH2Qt+QXx10phmnlvwusMcqMqZ
q0+HpDHs18F+gwoLGEtcZN+xUwYV/ssW0rpnCYcUgvs275ZB3e05ty7XW0JN
A2sup7QMfjZZUZ4bsYTo7zwGP5VkcFD6QKvbbisgGkjefKEjg0d5z3bE51pB
+LIZb9BRGWyUdZTZQTsC8scfCfZlyOBBj5zwHC5b0PzQ1yOeJYPUwaR3UXts
Qd+GLcH7oQyOU6LLyh1swfWgwyb2Yhn0y5HWbyqzhSwtXi6NOhl0uf9g9x9H
O9i+5czvuFEZlFrMymJtsQfuJs33ptKy+LnBPHu8zRGEKCfTUuVlUS9PXDV0
2RFkauNtxpRlcTlIVsNb+RjolU71XCLJYvJKJZ9E0jEIybjTXmAgi7iabSh7
0gl+B7DUcXvK4vEbx7f8inSGSannWc0lsuj47oPZRXsXmGqsXm4tl0V23Q9e
vYEuMHMsz+pFlSxKf99VYJXoAgup4dyv62TRtdxI43m7C7DwHvB791oW/VwM
uUKoJ0DkVyNMzcjiiJVwjI26KxxqoQ/zqcohv2Z8Vre6G1i4FGpu0ZDD0Wbd
s/ut3MBqLT1BgCyH2TESnSPn3MBB66K+MMjhs6Go1xm1buBerFkiYSaHPqQH
49L7T8HV5CeXiafl0HGm7mjBMXeoPFkq6lAqh2pjFoTaGk84OnnAtaJCDl/k
18vCZ09g9/hQuLFGDrczrLat8XqBlff6vYwGOXzc+ndQ2dULFvxP2O3slsPS
ZLnmg1u9gRAilDKywHx/d2FyR7APPEn/j89VWx4/qCWt1wM/OCa6zYZBkUee
RYfoE7Z+wHm36K7Afnns0elgf3jGD6yzB5RbTOTx6viAXcRDP1jM0zCVcZTH
5rgdKp82ngHSk8mIL//Jo50m96Wl0TNQ1WnG5tMij6p8u5wTcwLg07FfLI9f
yON7rR3SEc8CgG8mfW2hQx7fFZnSs0YCwJ1nYjX4rTxue/90SFfkLIgYBS9F
T8rjtItSrGL8Wbj8LH+6aL0CrmXK2s2FnQO9J6zvpg8q4G8nK9dN0efBTy+v
T+2wAgou04lPi89DZo9p71lrBZQVYfxN7DwPi3O336weU8DN4ya/a7cGQb6K
SjuPH9NeWKDht8wg4Mm3b1RKUEAVscwZFtoF6EmvKPR+q4Axd4V3T/AHw4KJ
qP6pQQUMmTJTIpGCQeDv9dHjwwqolHO+uMg+GKydrAVtJhQQlu6F8D4Mhn7J
P1eoiwroupQTkK15GYaLKIe3bVNEBduSfgWPK/Cl7sXv+iOKaHnOZ2nf2RBY
76eeSLNTxDXWNvgeEQIKuzOUnzgq4kuxj1eKMkPAK9TbpeCkIsa6J2/3bAuB
GQO+9qRziqjRb6HzecdVmO+yuueRrIjf5agWA8+vwr9PIwe29ikiq4xWAkEj
FJqDfnScGFDEX0ph/gmmoXBz09qRyiFFdK57sbrBLRQEtMXcjkwo4s+ot5am
aaGgEH80/PYSc3/ytyl+1utgDQOtO0SUMCbw+b3qvutQktFtIOWkhMMX8lo/
JYbDMasWI+JXJTyfEn7O8FQkbOdJ9dH5roTPo7beyA+LhO4mz/j9c0q4eDfU
RvJhJBzQ2Dxg8UcJael1rh4fI0Fpi4O773pltE7nCtZ0jILlztnwPHllfPbU
qGfaLhpSTESbhT2V0Zi3+tDfU7HQsS+A8m9KGYuuxO8M844HHu4jwnMzyij9
5vKDgSvxYNxBWvj8Uxm9bD6DTnw8tNosP3qxrIx+o49fKVbFQ533VcHkDSq4
VpSfXsmSAGUpt6YVFVTwedq8pV9qAiRMFabbeaigSTGfaX53ItgkjC1WTqpg
bvO3ALp/Cghs5BOe/KOKLkVz4sGzd+AMC+u20WA1zB0WiM5fyYaffDZWkVx7
8EC1et0Fg1xg6Yo9W3hrDxqfEZi9P1kAKa8VeLM2qaOtj+E7s/Ol0Hr8gf3h
VHWkLUc651PL4bJGiHj/dg3kpChsuBhXCa/TtDJ2PNTAnv+K/jmMV4ECZ9F1
Sq4G+t8v8Fj7XgVh/mK+x/M1sEhBTfLuYhXomKyj5hVpoOr9YZcOrmooWG2f
UH+igcLRqTo/5ash3MlZ3bhVA4O2qt475FMNFOkbL4K+aKBXiXqX6Gw1FJf1
LvUpEfA0h4aJ71gNsJXIqfaqEFAqUHyzyrcasC0MdutWI2Agd6/Ul7kaYM+V
6ntNIGDISXVZk7UasM84W96mw9zvJrrwSrgWOMMFfGpNCeh5PGmo4mAtODtY
fbrjTUDzrhnSUlktVNnmC2f4EtDKrM1jsaoWNlqvmqf5EVDkgTD1B4O5bv6w
PvksAf8LH33e8bwWePUX7sQGE7BJ4Vup7mgt0NSSbEKiCchD4Aod46WBAGdv
+4kiAipkCQYqudKAcW5lObqEgEfFXrW0eNDAdVxCvqqMgEE/FietT9OgsvlM
GPcTAs7LbYxxvkgDq1A+SvFTAg4u4dPNcTRIYjEpXXxNQH3Z2cmRWhro+PkP
7XpDQON417b5OhqMjaRtNOohIHu+hsRaEw0I9V9OZbwjoImbKnG1gwa9l8PF
cZSAdbRQ6q2PTP9WGuNvzhFwl+9YsgAXHRieX+vL55n+6ezqzNxIB9fBzTPv
fxGwdPERQWwzHSprnYxVlgmoyyPgzy5MB6ugv2w9bERU/PyR6KZAh6RfmmdF
BYg4mn105aIJHQRnS61LSUSsrBaSbA+nQ81sTXeFJhHVgyhCf27SwX6u8VCN
NhE1ngxO7Iyhw92fPfqNFCJO8P/jMUukg8yvJVKPPhFLFM1kzO7RgbwMQkvW
RAxO5lBrfkKHwWXDxBVbIt7c3ZPgU0OH4BULPhYHIlLbbuVuotOhYfUE13on
Im6PIb8jN9DBcO3GksgpIrb9jd4h85IOduxd7yjnibgS6L3X7wMdVtkHLPdf
IKKftPSdxGGmPxyfOg0uEfGC2NPIklE6fOJcaDP/j4iJ8W/Wvxqjg+f67TUu
N5jxbFFwuDtNB54NuwmnbhKRhe3A4uUZOpRsUCjziiJiKXvy5iOzdPi5USf/
7C0izuluYXydp8OlTc6p4beJqGo+2VC0TAcxPg+BqDQiHnYclDVcZfrP5x93
K4OI81JGrO//0oGd/3pE6j0ipr15wzHJwoDorflBBXlE3LGnUyWVkwEqAo8X
Sh4R0asjn+0HFwO6BGh+FYVEPHBLm6K7nsGcX9vdGaVEvJJJm6zfyIDM7bO2
r6v/F9+RMcfNDGDLCil7XkvEd5d+3/TkZ4CbLD93E52Ixa3nx3y3MO2T1Kur
64mYHBxQeUyAAQlPn20qbyQi6Q9JzliQAUt6lm5FTURcjnA9qLyNAQ2WZwWz
24iYuWUof1CIAVLv2X0yXhAxZ1vB0MPtDIhwSW5OfkVEe73xBjdhBlicqQqI
7CTibb+VW29EGFD1W//V9TdENExOvHhxBwNEQt5J/NdDxOE9Avw7RBnwKfb3
m4B3ROyLSIf9Oxmgv+2mvO8AEc0fpL59yeTCTOGr7u+J6Ll0WshYjAGbpQv6
XYaImKRbytrI5LNF2mqOI0TclzadpLqLAf0ar27YfGTmI62lK5nJOnSHEYvP
RDytNVI5z+SsfdMk03Ei8nwcRyNxBnC8DI7VnySi68mYsylM9rTgncCvRFRY
H2/2nsmv+zN1934josjlijdCuxmg7qySTPxORNPRumUTJqdM1k2r/iDirYbr
L88zednXTE9hjojZIsOYwWSnxZEMqXkinrEvdKxicvNlv3mxX0Q86NAr/oLJ
chysJsJLRGR3N4zsYXJ0dPz9rX+IyLr3X1ofk+e2SizzrhDR9t+8WSeTrTPK
Lbj/ErHJRLWogck0if2P2NaImKf0tOQRk8UKelj+spBwXrjcJpLJ1/a42i6x
kZBrVT7PhckTNQulc+wkvKVgmKnOZBMM45rmJKGBN1l7mRlvWZug0wQ3CZ8u
yl+pZbKAWW7V6AYSbvK18/BjctBb0qb3PCQMG+NcFWPyB8e2k32bSKg/eJHU
wswvjts87dxMwj4dDuETTM7x/iLwcgsJS9z+PvjNrJfvpfXNddtI2HS7tnID
k7vZ0nfUbifhx9MWe28w602KVAioECFhd+k/rxWmPtZSTSTyxUhol5HQ8ZKp
H1fxDxfui5Pw5KmINWkmP8/zfnNHgoRZg4+Hgph6i6uKCYmXIWGmO182B1OP
C7pi/VFy//Mv5gYw9WrXUqIarkBCjnu9omeYepbo7Ry+qMKMVyjbms7Uf8Uc
v64riYRpxaI7p5n94/ntXNRNTRIG/9KgtzP7S3x8YKBEm4TOg4TbD/gYENuf
HfiHQsKKAwO8BF4GeNTvKYs1IKE9UUVklNm/4rXJ/yqMSNiZ2/7Kn9nfb8v/
mA6YkLCMJNe6ws4AvdzGr5LmJNTsw4xZVgbsirGQrLUl4dUyy4WTK3R4G/7k
zLA9CaMnf2wv/EOH6BDhhnWOJCy1fZA4sUSH5YCPRw8dZ9ajip6AC3Tosz+T
8tmDhPuP9H4PYZ5nUXLx6zddIiHpjvVXwns67JP4ZaNxmYQt5Q9dRvvp8HuH
Xa7tfyR0qdKyuvaWDm58u/c/CCVhg8/Ogkdv6EBdLAvWjGbmc1jVPbyNDktN
XT9cMklYSz8dcfEx83x8SqBE3GPWJ0CoKbaEed9Up0YXZ5MwIXw1O62QDt0F
zvK/c0h44+4r28QcOhTHz7rElJAw5lw+m1AaHU44bX5bXU9C1cxzsi5X6CAw
dcS/ppGEcXlnD4ldokPz2YxNtU0kXFfhdbn7PPM+iZQxoLWRUK5UfE3iDB2m
KnVqGJ0krOPFCdcTdPDb4JHeOELCJwFR/3z16XDlSeOxV2skvLYuNL6Ckw6q
yLXyipWMZVPmS4FsdBh9aXq7fR0Z7bnfd6n/o8G+0XedHVxk/GhgPpP4iwYc
G2ewi4+MnjcsKaufaRDtLCLZt4uM+zgePXCvp0H6xoDJYSDjNuV+gw4/GmRy
R1/csI+MksaHd2t60SCLI4eXpEfG5aE7teknaZC39lYjxpCMOnvougb2zHlh
XjtkrwUZOZY9yJT9NHj9nk041YWMp6IdJB9tpQFbUYKxRRgZ9ZNHpzNLasHL
tLy46SUZY5yn7p55XQNqXYdFx9vJOD2UPS7eVgOLlvORnJ1kHJA+8vpFfQ2E
OBDcjXrImD1yLpv7cQ2keFZJdL4n49AJ7i17E2vgWQTt9uA0Gb/ufnfggnUN
iLQ8uzq3SRNvejkLxfRXw0vdniO7LDWRXN7wrqS9Csp8bAMPdWuimanniG1h
Jaip00z2HtXCnGK5A/V7ykGTGJK28kELe5OefZEsLIXXX2RfqDtoY5Oq/xMD
8UL4q1ZULDumjf19AspS53Khsjppw+yJvZgVzmHdGXgfOHrsRANn9qLHs3QU
18mEIaXQ3M7TOsgYM6jpWX8bOO00vrw8o4ObSm3en5tPAbWwz/KtATp4RiRz
XGYoBa4P7S9mnNdBW9YPBU/KUkAhlr3y0X86uM2VtyfMNgUCf4Q1ht7SwZuF
dsY/CpJhc3nEB3KpDvpej14csE+C/eTYLVkzOnil5nxs6EQ81Pfxm7TO6qDk
dESDVnc87D2bHDr9Uwe7JDRrWeriQePxnQXNJR2UovdMNSTHg6Ri4ds3azo4
8t/2pvX68bBu1/P0dfy6OMCl96zmURw0cbJJntLQxae+dzleLcfC/rfnNFSC
dNHDZ2uc0aNIoHG8r1W9qIvPnijJfI2MBDUi4p5gXTz6eE3/gXckiCZtOEgI
0UXpoKA/bmqRsGBxz007QhcFx6d6FGpvQk7H8zT9VF38PND0Oq0zArhadrA4
1eiiIc3peB3fDbiyEBLuTNPFhkuL928vhMOC5ASPC0MXB2PXfbo5EA6j18qE
TzboosDWVKnaB+FQgwc0vJ7rYvzf0kNUrXDwYPi6ne/XxdahK9XT7mHwqqKx
/dZvXcztHI0+PBgKSUeWjRjLulgQniOu0hAKR5fU276s6mJJaIigdG4ozGg/
bKSyUnDta/wHV/9Q2PwsvGp+PQXr7c//kucJBasukyybHRQcFNwzRdO7Bh+m
+wJ2USi4nWGScelFCDyM3TRnghTU6nDmzy4PAR81A9+gfRR8VdNbOpIRAv8C
atzf6FPwmHT7znzfEBBfSXcMNaNg9GfxlhOCIeC63tlg0pnJT4a+TL++At+l
p0RKQylY9nbhqODeYAg6VBDwJoyC/+LCJHYKBAPbec/2+RsUfBoaxGPx/RJs
fz51WTOagtse3mjWyboE+zy/jTYmUVCyuYNTnPsSpJZM5/bmUDAGLn9ZGrkA
euQf6sttFHSmX7j6r+Q8dDqVRom+pOBeI5EKw5jzYB9xeozSTsGmiJ9tNK/z
cHrgR3JoFwWteK8LbJM/D+mXZn/zDFBQ75tpVE5OIMzWz9XtmqLgxi0aaRty
z8EdwwXjAzyAB50F9rI3BcButpS5fZsAd22cx5W8AMilk1NxM2DRx0/H+WMC
oEzl0vheAcDLksSodJsAaBJgC1EXBcQzhLSdM/4wNcr3ZJcSoBA5qrBT3B80
LyjuWjYBJD9u7lS+4wdP1Ttalg4CelxyzO277gf7pn29f5kBSuRZOaT5+IGp
U3ntrCXg0oz9SgD4gdMBLatJB8D0Gq7cieenIZzf4GavF6A876FV7lO+0PPI
Zb4kCpDOPz1746UXFPS9i3sXAzice2ac754XXGM9qMISBxjePyDRHeAFanZk
D4skpr149zB2MS+I5eYZmb/D9Df3hqnIOU8wPPXkpWYJcwwJSffqU/YAhhT3
/WddgEHfzY9/b3ODRPPL8K0bcIfWMxuTB27gGfzzw9Y+YJ4Pnvs+XHED4d4P
QicHAI/Wam5NIblBYOjjGK5PgAVVQ9dO5J8EtU/2F0znmflAe0Fisit0d1rL
fduAGB19P5OU4AJ7VdjEvm9ENHi14XfcORd4GF289QcPYl9J2Ht+Oxc4Z8S+
9nMTYk/BRHK4uAtsb3rct7wFUSVK1ZD8+Dg4VvGEbtiBWOeYcy1+wBm+3Hk2
JK+IeD83s1k08hhYrPj0KCohVvTsjO2zOwY0O+EXysqIbx8tOr6RPwZR2/wq
96gi8u1qH4576QgqcTujtDQQT5W1CMjyOUJAaJCm0V7E2UvXEn0fOsA/D5VE
dxNE6u6LO93/2sLzqMzAk6aIXXnEf4w+W0go5rF3OYj43bX0hlGJLUjPTYkf
NUP8+yo1jtvZFkyD8krMLBHvLei7C7XaQHq4+EuSA3M9WdoC71gD+cEWVg4v
xKvXNytsPG0FLC1Xx1i9EXtnZje9P2gFLydm2/4xecoYPw4qWcExhc7Y376I
kmM0V49vlhD+OEp02h+xpC4mju5pCb317Jo9FxHNbikGsPkfBr8Pi77ZkYgL
99pfJGWbw4nqzo6KKMRmhTyLu6HmYJ2Qr9QajZhoIbez/6Q56BjaT03FIup8
2hz4XsEcuCufniQkIt7Vz/yn4WsGWVHXj7ZlIIapm2ZfKjsIXdpbjL8XIQp/
N5nsDjSGJsFv+WvFiL8CPmmz6BtD1WwT15ZSRH2xnxFXBI3hTu65FtJjxGv1
rQe8nxiB+5YBDHnCzG9HbvXab0NgmbpH3lqHePuFR8eDWANQTVOW1upE3PjL
Z//4rB5k6SwpaHUhKlfB77+v9GDzaIOa1htE/usP/Szy9GBWxkpHqwfxjX+j
W94xPSirvGip9Q7x+LBeCmfXfuY80HZVawRx3X3LVNOn+0CNy2VY6weiSNfG
L0P1CFkFimNas0y9zEasVWcjbD7066vWHDM+FR+bplCE2aSIX1rzzHVHtxJv
Q4QyiVIe7SXEbAGeAvZ8gD2UVW3tNUSO4rujy5O6oH4u5bY2HxXLRH+btRRo
w8uTYydsN1PxSHpv8baz2nDcWl0tkJ+KWQ894bWuNsSRXz9/vJWKUmJuDj7d
WjDzh2NZbjsVVzBO045FCwqvnDsqtJuKiSyjoba+ZNh3ukmOKEHFxpFNs/W6
ZBh04v91WJKK1c1ZPqG8ZNhALY6JlabiQk+3umgJCdzXjddxKDDtO6qoXJ8n
glSE1e4FdSp+Cur5XhBLAEbQ/e/8BCqmOm2qiz5BAEuP2VpVIhXte3fYNmoS
4Jpx9GEvMhWHXU9Uio9pwChPc+invczv2wq05FM0IDNeY6JLj4qPIz8lubGp
A+Ha1fKZA1TUGaG6Ej7sgXb/zis8BlQ8/XDpmmnVHli19BIyNKKicsCNAjuv
PWC/7YFh/UFmfHuKywb61eAn55zA0CEqJi/PrZuuVIObS5SPy2ZUJD5kLdeL
V4Oa/sELpMNU5CQKq7cZq4H5Czl9K0tmPvNq+GZl1WCyNnCLvxUVK/zMnRw5
1OBKQfPwrSNUXOr+Yr6zVRW2ZWwpLLam4vL//3/8P4OY2jw=
                   "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {9.264825065531877, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {9.264825065531877, 0}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> Plot, "GroupHighlight" -> False|>|>], 
           ImageSizeCache -> {{
            4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
          False]}, 
        Annotation[{{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1: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
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {9.264825065531877, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
        AbsoluteDashing[None], 
        LineBox[{{21.819013470994598`, 0.13490472568778378`}, {
         21.863033504377395`, -0.02171264900493297}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{25.516696291638816`, -0.00383783993422418}, {
         25.428656224873222`, 0.13362795361400273`}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{18.34143085024297, -0.002135477165825045}, {
         18.20937075009458, 0.1344791349982023}}]}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {12.541666666666696`, 0}, 
      DefaultBaseStyle -> "CanvasGraphics", DisplayFunction -> Identity, 
      Frame -> True, FrameLabel -> {
        FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
        FormBox["\"Probability Density\"", TraditionalForm]}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      ImagePadding -> {{39.634764, 1.5}, {32.34375, 0.5}}, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentPoint", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{12.073784722222252`, 
       35.46788194444444}, {-0.0027956989247311832`, 0.13698924731182796`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
      Ticks -> {Automatic, Automatic}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{{3.9372373466419773`*^9, 
  3.937237419792183*^9}},ExpressionUUID->"680816d7-799d-c84a-9cd2-\
01e745b32fcf"],

Cell[BoxData["21.971`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.937237328185858*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"cefe0140-2284-c941-9e64-c7886f876bd2"],

Cell[BoxData["25.6013358437393`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373281889305`*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"09c35b2f-f4b7-9244-ab06-d280b3848adf"],

Cell[BoxData["18.3406641562607`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373281919403`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"4574977d-7ce9-d04c-9eac-a984b42ce622"],

Cell[BoxData["\<\"--------\[Beta]+\[Gamma] 10 seconds (20 Hz):--------\"\>"], \
"Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373281942616`*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"dee62eed-8613-4443-ad28-3b029a8ab896"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{}, 
        InterpretationBox[{
          TagBox[{{{}, {}, {}, {}, {
              RGBColor[1, 0, 0], 
              Opacity[0.3], 
              LineBox[{{20., 0.}, {20., 0.11}}], 
              LineBox[{{19., 0.}, {19., 0.1}}], 
              LineBox[{{15., 0.}, {15., 0.015}}], 
              LineBox[{{18., 0.}, {18., 0.065}}], 
              LineBox[{{14., 0.}, {14., 0.005}}], 
              LineBox[{{21., 0.}, {21., 0.09}}], 
              LineBox[{{25., 0.}, {25., 0.09}}], 
              LineBox[{{26., 0.}, {26., 0.07}}], 
              LineBox[{{22., 0.}, {22., 0.135}}], 
              LineBox[{{24., 0.}, {24., 0.06}}], 
              LineBox[{{34., 0.}, {34., 0.005}}], 
              LineBox[{{28., 0.}, {28., 0.04}}], 
              LineBox[{{16., 0.}, {16., 0.06}}], 
              LineBox[{{17., 0.}, {17., 0.01}}], 
              LineBox[{{23., 0.}, {23., 0.08}}], 
              LineBox[{{27., 0.}, {27., 0.03}}], 
              LineBox[{{30., 0.}, {30., 0.01}}], 
              LineBox[{{29., 0.}, {29., 0.01}}], 
              LineBox[{{12., 0.}, {12., 0.01}}], 
              LineBox[{{32., 0.}, {32., 0.005}}]}}, 
            TagBox[{
              RGBColor[1, 0, 0], 
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              GeometricTransformationBox[
               InsetBox[
                StyleBox[
                "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 
                 18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
          StyleBox[
           DynamicBox[
            (Charting`HighlightActionBox["DynamicHighlight", {}, 
             Slot["HighlightElements"], 
             Slot["LayoutOptions"], 
             Slot["Meta"], 
             Charting`HighlightActionFunction[
             "DynamicHighlight", {{{}, {}, {}, {}, {
                 Directive[
                  RGBColor[1, 0, 0], 
                  Opacity[0.3]], 
                 Line[{{20., 0.}, {20., 0.11}}], 
                 Line[{{19., 0.}, {19., 0.1}}], 
                 Line[{{15., 0.}, {15., 0.015}}], 
                 Line[{{18., 0.}, {18., 0.065}}], 
                 Line[{{14., 0.}, {14., 0.005}}], 
                 Line[{{21., 0.}, {21., 0.09}}], 
                 Line[{{25., 0.}, {25., 0.09}}], 
                 Line[{{26., 0.}, {26., 0.07}}], 
                 Line[{{22., 0.}, {22., 0.135}}], 
                 Line[{{24., 0.}, {24., 0.06}}], 
                 Line[{{34., 0.}, {34., 0.005}}], 
                 Line[{{28., 0.}, {28., 0.04}}], 
                 Line[{{16., 0.}, {16., 0.06}}], 
                 Line[{{17., 0.}, {17., 0.01}}], 
                 Line[{{23., 0.}, {23., 0.08}}], 
                 Line[{{27., 0.}, {27., 0.03}}], 
                 Line[{{30., 0.}, {30., 0.01}}], 
                 Line[{{29., 0.}, {29., 0.01}}], 
                 Line[{{12., 0.}, {12., 0.01}}], 
                 Line[{{32., 0.}, {32., 0.005}}]}}, {
                Annotation[{
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]], 
                  GeometricTransformation[
                   Inset[
                    Style["\[FilledDiamond]", FontSize -> 18], {0., 
                    0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
                   "]]}, "Charting`Private`Tag#1"]}}, <|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
                 "Frame" -> {{False, False}, {False, False}}, 
                 "AxesOrigin" -> {11.541666666666693`, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {11.541666666666693`, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
            ImageSizeCache -> {{
             4.503599627370496*^15, -4.503599627370496*^15}, {
             4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
           False]}, 
         Annotation[{{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{20., 0.}, {20., 0.11}}], 
             Line[{{19., 0.}, {19., 0.1}}], 
             Line[{{15., 0.}, {15., 0.015}}], 
             Line[{{18., 0.}, {18., 0.065}}], 
             Line[{{14., 0.}, {14., 0.005}}], 
             Line[{{21., 0.}, {21., 0.09}}], 
             Line[{{25., 0.}, {25., 0.09}}], 
             Line[{{26., 0.}, {26., 0.07}}], 
             Line[{{22., 0.}, {22., 0.135}}], 
             Line[{{24., 0.}, {24., 0.06}}], 
             Line[{{34., 0.}, {34., 0.005}}], 
             Line[{{28., 0.}, {28., 0.04}}], 
             Line[{{16., 0.}, {16., 0.06}}], 
             Line[{{17., 0.}, {17., 0.01}}], 
             Line[{{23., 0.}, {23., 0.08}}], 
             Line[{{27., 0.}, {27., 0.03}}], 
             Line[{{30., 0.}, {30., 0.01}}], 
             Line[{{29., 0.}, {29., 0.01}}], 
             Line[{{12., 0.}, {12., 0.01}}], 
             Line[{{32., 0.}, {32., 0.005}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGAQAWJGIGZigAETB82Y/kNfNfbYQ/jGDrNmgsBOKF/PYYdc
6+vAHX1QvpHDkgJbruuLN0D5Og7VIuvcH1aVQPmmDkBJoIrtUL4lGt/K4U0g
yMSNUL6Zg8fDKqAJB6F8C6h966B8RzTzbaD8JVC+AZp6Q6h8C5RvDuVvgfKt
oernQfl2aOpt0fgaaHwHuHsAUhpXVA==
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{11.541666666666693`, 34.}, {0, 0.135}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {11.541666666666693`, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], {{}, {}}}, {{{
          RGBColor[0.368417, 0.506779, 0.709798], 
          PointSize[0.009166666666666668], 
          AbsoluteThickness[2], 
          TagBox[{{
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{-0.25, 3.1608814543136926`*^-10}, {0.25, 
              3.1608814543136926`*^-10}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{0.75, 3.1608814543136926`*^-10}, {1.25, 
              6.914428181311202*^-9}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{1.75, 3.1608814543136926`*^-10}, {2.25, 
              7.562655823309128*^-8}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{2.75, 3.1608814543136926`*^-10}, {3.25, 
              5.514436537829572*^-7}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{3.75, 3.1608814543136926`*^-10}, {4.25, 
              3.015707481625547*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{4.75, 3.1608814543136926`*^-10}, {5.25, 
              0.00001319372023211177}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{5.75, 3.1608814543136926`*^-10}, {6.25, 
              0.00004810210501290749}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{6.75, 3.1608814543136926`*^-10}, {7.25, 
              0.0001503190781653359}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{7.75, 3.1608814543136926`*^-10}, {8.25, 
              0.00041102872935834046`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{8.75, 3.1608814543136926`*^-10}, {9.25, 
              0.0009990281616348551}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{9.75, 3.1608814543136926`*^-10}, {10.25, 
              0.002185374103576246}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{10.75, 3.1608814543136926`*^-10}, {11.25, 
              0.004345914410520943}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{11.75, 3.1608814543136926`*^-10}, {12.25, 
              0.007922239810845468}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{12.75, 3.1608814543136926`*^-10}, {13.25, 
              0.013330691989403435`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{13.75, 3.1608814543136926`*^-10}, {14.25, 
              0.020829206233442865`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{14.75, 3.1608814543136926`*^-10}, {15.25, 
              0.030375925757104176`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{15.75, 3.1608814543136926`*^-10}, {16.25, 
              0.04152958599604087}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{16.75, 3.1608814543136926`*^-10}, {17.25, 
              0.05343880550961141}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{17.75, 3.1608814543136926`*^-10}, {18.25, 
              0.06494299280681942}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{18.75, 3.1608814543136926`*^-10}, {19.25, 
              0.0747698930341671}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{19.75, 3.1608814543136926`*^-10}, {20.25, 
              0.08177957050612028}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{20.75, 3.1608814543136926`*^-10}, {21.25, 
              0.08518705261054194}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{21.75, 3.1608814543136926`*^-10}, {22.25, 
              0.08470303526616386}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{22.75, 3.1608814543136926`*^-10}, {23.25, 
              0.08055995201944932}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{23.75, 3.1608814543136926`*^-10}, {24.25, 
              0.07342703960106058}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{24.75, 3.1608814543136926`*^-10}, {25.25, 
              0.064248659650928}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{25.75, 3.1608814543136926`*^-10}, {26.25, 
              0.054055362687078855`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{26.75, 3.1608814543136926`*^-10}, {27.25, 
              0.04379485402888333}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{27.75, 3.1608814543136926`*^-10}, {28.25, 
              0.0342147297100651}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{28.75, 3.1608814543136926`*^-10}, {29.25, 
              0.025808524565781865`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{29.75, 3.1608814543136926`*^-10}, {30.25, 
              0.018818715829215946`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{30.75, 3.1608814543136926`*^-10}, {31.25, 
              0.013279335766583833`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{31.75, 3.1608814543136926`*^-10}, {32.25, 
              0.009077670934188167}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{32.75, 3.1608814543136926`*^-10}, {33.25, 
              0.006017395505617156}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{33.75, 3.1608814543136926`*^-10}, {34.25, 
              0.0038714860789816263`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{34.75, 3.1608814543136926`*^-10}, {35.25, 
              0.0024196787993635165`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{35.75, 3.1608814543136926`*^-10}, {36.25, 
              0.0014702909371132479`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{36.75, 3.1608814543136926`*^-10}, {37.25, 
              0.0008692598445770891}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{37.75, 3.1608814543136926`*^-10}, {38.25, 
              0.0005003962921085217}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{38.75, 3.1608814543136926`*^-10}, {39.25, 
              0.0002806709971762541}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.009166666666666668], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{39.75, 3.1608814543136926`*^-10}, {40.25, 
              0.00015349195158076396`}]}}, 
           Annotation[#, "Charting`Private`Tag$43007#1"]& ]}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           PointSize[0.009166666666666668], 
           AbsoluteThickness[2], {}, {{}, 
            LineBox[CompressedData["
1:eJxd0mtIU2Ecx/F5WVKMqYil5mXLlZql25m7uLntv60SlhOZLgtSVuqrslGp
RELYGNFFejNN6kUzcxKtrGbhCKwH7I1gVlrQBduEICnZjC4QVBSc/4LnOfC8
+PDld+A8HOlBt6MjRSAQlP07yXj45/njthxt13j4uwFtor1sar73wXMqZDDy
/sb4l0nvPNmbau9CJwPtNZBarj602DeCXsdYDM/EA+GKuhl0JuMsUK4u5TYG
P6OzGW+AWMz8qES71sQ7l/FGuOm5LopMFKMLGBfBWH/t109xHe8+CWMp9LSI
HLrWBvQmxsWgOzM1k/7xAFrGeDPI/+i8wqdH0VsYl8C4W552rroPXcq4DLI5
oaLIfgG9lXE5SNLrWqFpEL2N8XYQX3rzfjHPj65gXAkDU3uCLdYAb5DTJnLY
fVHwpGl/ELuCNlHAbFB1NW/4LnaONuGgc6Q+UCibwK6kTZRwI2nOezp+H3sV
bVIFYXPS4Iu5B9hVtIkK9mU2F+beSXQ1baKGjB7bpM+feL+GNtHAl7MP7QWz
Iexa2kQLC5qU0cvHEt9XTZtUQ3nly9+y24n70dEmOkgT+o7XHh7DrqdN9BB7
Z5sf8l7DXkOb1ICrNjLd33kFu4E2MYBIVjqq3unDbqRNjNCYNLqL4/B/ARNt
YoLlfFtrw5CHtwRouwAcY931ocAJ3sOMowBH/FnWnEk37s20XWYIWFfK3PNt
uGccNcN0d3vk9fq9uLfQdlkgf8VpX+qtwz3jqAWkt169He4A3Ftpu6ywev4n
ibZzuGcctcKPeMaCs1CG+x3//RcmJmyW
             "]]}, {}, {{}, {}}}, 
          Annotation[#, "Charting`Private`Tag$43007#1"]& ]}, {}, {}}, 
       InterpretationBox[{
         TagBox[{{{}, {}, 
            TagBox[{
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Opacity[1.], 
              LineBox[CompressedData["
1:eJwtmXk0ld/3xwmVITSolMjsmuM+12zvKxQposykDGWeyZhMIUShEtKAUGgy
3Js+CJGSDJGpkgxlqIQM6Xe/a/3+etZrnb32Oue933ufs9YjfMrb1HkdExNT
KzMT0/++Iak+cTqNwqjCvJzT2CEPEz2t7BYtwthimbQIXApguUc01f21MIY3
95eLHVQA1fs9WRndwrhT58R72XoFWGhVvzc2KoyrV0LVxW0VIYCNrS2JTQTz
x6wH79ntA+/w67xd+iLoK046QE9WhuEXvzLGDUWwdXTtaM1DZTjCacS/ekQE
SXWc9ovvlUE+e01Y3EIEe5f5WQkRMkxVOSoHnxbBBluyRz2dDG5zcua7E0Qw
qP1dUPAKAc5uDTccW0Xw0lzCvFqFKjhMcay+fSOC3uvXeIc/q4Ktl5mtZqcI
HnmVxDe0VQ1M/UYF+AZEsPZpu8TMWTXA0PV5zVMiuNU6o9zjgDoIJBnmk3hF
ceTFm50OCxrQWdx5d9ZcFCvsBw775AO0y+xms7URxX83kl/kDgO0PnB0bjkh
is2uLBtzuRHqHv4Wv3VGFAW8rX9+OoxQVrO9yDRUFJP5z7/ifYuQ2Gpd/DRX
FIfdufPsB6mAkyMPwkZFsbLVxFNdXBfM816w5E6I4ibNOZKtgS54mt21ej4l
inviqk5We+pCdq0zG/O8KJ67OX1RuEoX5tMnbOPZxHCz1LFP/xnpQYn6DGe6
hBg+KiW7BMXow7bkJdfCM2JoXcFuLCdsANLU/v9eeojh/QaZr7qHDYC6QOOb
9BFDq1dt87dCDMDLIbxeJkQM3/7880+uywBayf92PkwUQ+EJkb3XEg0hcoi1
hV4ihq6+KMDOagTj8rwS76bE0PPzYbcdSsag3WjyfOiHGMZOPeG/5GIMWVbp
5t9+iyGv+rn84zeMQTd2ywWWv2J4e7uZ08Q6E7j9YdsEsUkc4yuGzfS8TcA2
lr8kW04ct++tjXtsfBTefRCRd/ISxyNWcbI9imYg5e3Y7OMnjv8ZWwo4mZhB
FOtd+4ggcexm1iQJ+5iBvIL4paxIcdzn/DxCosIMkmMlf7SkiuOiZetxJ6Vj
oK8g+0iuXBwb3EdTPsJxoMcSlMVZcSxu/aUTGGUBececS2x+i+MFL6UB72IL
iBbLFKz7I47R/3mlFXdawMHG3+sTmSXwfpNE1oC4JXSzPOndtVUCdy/2rOq8
tYSpaKUQbYoEPpxJzT0tbw0C5xWexYVL4MGf6o+t99rBP5MTit+iJHBh8tm5
gaN2MLL30t0jcRIYaz3FXxhjB/fqZpJ3pEogz79Nwrsm7IDMVGZXfFMCBQe+
eV14Yg9G52T/vW6QwEebFTq/yDlARARJZxu7JAa++2irNncSwqN+lsptksTd
um8X57hPQWhMDd+BzZKo/j1kuEv6FAQlGkyG8Euizel9+1gdT4FXpmvaR5Ik
piXfPSnTcwocHhQPlxhKopp21EJVnSPoDpHCqMmS+FSv8OvsU2fQ+fRz1DpN
Ep/8sr16970z4JeaIwEZknif7joQs+gMWpMGIkU5jPwqCa8a1FyAMu/ayvVA
EjPj3+w6UOcCUptKdvS9kcS8ps6ktJ7TwKkl/cSLRwpLXEwOOYm4QUbo56WP
W6WQO2CJZeWQGwhWX4OjO6Ww3OWa76tAN1BS3tCmLCyFGm2WttteuYE1afTz
HyUpVG16xmkT6A4lfHk8MeZSeKUVhSbfe4DhzGb3q7lSqK8XoVHz0hu6ZVor
Nt6WwpT59CtDf7zB3jVqIaRQCtuaeZSE+XzAb3TmvG25FCaZ5amM6/tAdn/b
NeF6KTzze+3GSqkPTDbHNZeOSmHT7Qsip8J9IeHmknCdDAnflb2s4lTxB9Na
3hIBRRKGJt3ItDPzhz0DkkohZBImc4uFdXr7w6Pt5jpKWiRMefplULzYH4ZS
Hp26e4SEUtxmoUF7AkAp3P1Ogi8J2zeoqgxwBcKQ5ZDY0SoScrg0e2ZuCIZ7
Qb/vP6CT0NUiuC5eKhj8MjgJjjoSZv2ZkrppEAwbO9T0XrSQ0IJr4blecjAo
HchyJvpJqM6ReMNz61lIIIwL+f+S0Lujg12PFAJKW+olR3SkcXPeT+MV/zDY
6ehTMKcvjXmzf3jPXQ2DtcdComyHpPHFh3RvKXoYvDoeKShlJo0YxOU3tS4c
Tl7X4PNylMaZ2ydjNTPCIW1v5brlGGlM4GW+ve15BEzLlw5tbpLGi5c3ujzc
EQWd56xtRFul8UHHeo9xmSio7mD/QH4jjc+5e37twyiI9TvTbdEjjb5Ck9Ws
rlEgUCnelvtVGr+8aMq/TY8CQ638atJ6GdQWeFjU5nQe7h3KvEI9IIO6hZKW
ii+jYVev8nTJIRlMzuqP/vcxGi6e6tTfZsKIl4ytn/gTDV4hPMtjljJYvb+r
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

               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[
           (Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1:eJwtmXk0ld/3xwmVITSolMjsmuM+12zvKxQposykDGWeyZhMIUShEtKAUGgy
3Js+CJGSDJGpkgxlqIQM6Xe/a/3+etZrnb32Oue933ufs9YjfMrb1HkdExNT
KzMT0/++Iak+cTqNwqjCvJzT2CEPEz2t7BYtwthimbQIXApguUc01f21MIY3
95eLHVQA1fs9WRndwrhT58R72XoFWGhVvzc2KoyrV0LVxW0VIYCNrS2JTQTz
x6wH79ntA+/w67xd+iLoK046QE9WhuEXvzLGDUWwdXTtaM1DZTjCacS/ekQE
SXWc9ovvlUE+e01Y3EIEe5f5WQkRMkxVOSoHnxbBBluyRz2dDG5zcua7E0Qw
qP1dUPAKAc5uDTccW0Xw0lzCvFqFKjhMcay+fSOC3uvXeIc/q4Ktl5mtZqcI
HnmVxDe0VQ1M/UYF+AZEsPZpu8TMWTXA0PV5zVMiuNU6o9zjgDoIJBnmk3hF
ceTFm50OCxrQWdx5d9ZcFCvsBw775AO0y+xms7URxX83kl/kDgO0PnB0bjkh
is2uLBtzuRHqHv4Wv3VGFAW8rX9+OoxQVrO9yDRUFJP5z7/ifYuQ2Gpd/DRX
FIfdufPsB6mAkyMPwkZFsbLVxFNdXBfM816w5E6I4ibNOZKtgS54mt21ej4l
inviqk5We+pCdq0zG/O8KJ67OX1RuEoX5tMnbOPZxHCz1LFP/xnpQYn6DGe6
hBg+KiW7BMXow7bkJdfCM2JoXcFuLCdsANLU/v9eeojh/QaZr7qHDYC6QOOb
9BFDq1dt87dCDMDLIbxeJkQM3/7880+uywBayf92PkwUQ+EJkb3XEg0hcoi1
hV4ihq6+KMDOagTj8rwS76bE0PPzYbcdSsag3WjyfOiHGMZOPeG/5GIMWVbp
5t9+iyGv+rn84zeMQTd2ywWWv2J4e7uZ08Q6E7j9YdsEsUkc4yuGzfS8TcA2
lr8kW04ct++tjXtsfBTefRCRd/ISxyNWcbI9imYg5e3Y7OMnjv8ZWwo4mZhB
FOtd+4ggcexm1iQJ+5iBvIL4paxIcdzn/DxCosIMkmMlf7SkiuOiZetxJ6Vj
oK8g+0iuXBwb3EdTPsJxoMcSlMVZcSxu/aUTGGUBececS2x+i+MFL6UB72IL
iBbLFKz7I47R/3mlFXdawMHG3+sTmSXwfpNE1oC4JXSzPOndtVUCdy/2rOq8
tYSpaKUQbYoEPpxJzT0tbw0C5xWexYVL4MGf6o+t99rBP5MTit+iJHBh8tm5
gaN2MLL30t0jcRIYaz3FXxhjB/fqZpJ3pEogz79Nwrsm7IDMVGZXfFMCBQe+
eV14Yg9G52T/vW6QwEebFTq/yDlARARJZxu7JAa++2irNncSwqN+lsptksTd
um8X57hPQWhMDd+BzZKo/j1kuEv6FAQlGkyG8Euizel9+1gdT4FXpmvaR5Ik
piXfPSnTcwocHhQPlxhKopp21EJVnSPoDpHCqMmS+FSv8OvsU2fQ+fRz1DpN
Ep/8sr16970z4JeaIwEZknif7joQs+gMWpMGIkU5jPwqCa8a1FyAMu/ayvVA
EjPj3+w6UOcCUptKdvS9kcS8ps6ktJ7TwKkl/cSLRwpLXEwOOYm4QUbo56WP
W6WQO2CJZeWQGwhWX4OjO6Ww3OWa76tAN1BS3tCmLCyFGm2WttteuYE1afTz
HyUpVG16xmkT6A4lfHk8MeZSeKUVhSbfe4DhzGb3q7lSqK8XoVHz0hu6ZVor
Nt6WwpT59CtDf7zB3jVqIaRQCtuaeZSE+XzAb3TmvG25FCaZ5amM6/tAdn/b
NeF6KTzze+3GSqkPTDbHNZeOSmHT7Qsip8J9IeHmknCdDAnflb2s4lTxB9Na
3hIBRRKGJt3ItDPzhz0DkkohZBImc4uFdXr7w6Pt5jpKWiRMefplULzYH4ZS
Hp26e4SEUtxmoUF7AkAp3P1Ogi8J2zeoqgxwBcKQ5ZDY0SoScrg0e2ZuCIZ7
Qb/vP6CT0NUiuC5eKhj8MjgJjjoSZv2ZkrppEAwbO9T0XrSQ0IJr4blecjAo
HchyJvpJqM6ReMNz61lIIIwL+f+S0Lujg12PFAJKW+olR3SkcXPeT+MV/zDY
6ehTMKcvjXmzf3jPXQ2DtcdComyHpPHFh3RvKXoYvDoeKShlJo0YxOU3tS4c
Tl7X4PNylMaZ2ydjNTPCIW1v5brlGGlM4GW+ve15BEzLlw5tbpLGi5c3ujzc
EQWd56xtRFul8UHHeo9xmSio7mD/QH4jjc+5e37twyiI9TvTbdEjjb5Ck9Ws
rlEgUCnelvtVGr+8aMq/TY8CQ638atJ6GdQWeFjU5nQe7h3KvEI9IIO6hZKW
ii+jYVev8nTJIRlMzuqP/vcxGi6e6tTfZsKIl4ytn/gTDV4hPMtjljJYvb+r
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

                   "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {8.883320016851265, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {8.883320016851265, 0}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> Plot, "GroupHighlight" -> False|>|>], 
           ImageSizeCache -> {{
            4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
          False]}, 
        Annotation[{{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJwtmXk0ld/3xwmVITSolMjsmuM+12zvKxQposykDGWeyZhMIUShEtKAUGgy
3Js+CJGSDJGpkgxlqIQM6Xe/a/3+etZrnb32Oue933ufs9YjfMrb1HkdExNT
KzMT0/++Iak+cTqNwqjCvJzT2CEPEz2t7BYtwthimbQIXApguUc01f21MIY3
95eLHVQA1fs9WRndwrhT58R72XoFWGhVvzc2KoyrV0LVxW0VIYCNrS2JTQTz
x6wH79ntA+/w67xd+iLoK046QE9WhuEXvzLGDUWwdXTtaM1DZTjCacS/ekQE
SXWc9ovvlUE+e01Y3EIEe5f5WQkRMkxVOSoHnxbBBluyRz2dDG5zcua7E0Qw
qP1dUPAKAc5uDTccW0Xw0lzCvFqFKjhMcay+fSOC3uvXeIc/q4Ktl5mtZqcI
HnmVxDe0VQ1M/UYF+AZEsPZpu8TMWTXA0PV5zVMiuNU6o9zjgDoIJBnmk3hF
ceTFm50OCxrQWdx5d9ZcFCvsBw775AO0y+xms7URxX83kl/kDgO0PnB0bjkh
is2uLBtzuRHqHv4Wv3VGFAW8rX9+OoxQVrO9yDRUFJP5z7/ifYuQ2Gpd/DRX
FIfdufPsB6mAkyMPwkZFsbLVxFNdXBfM816w5E6I4ibNOZKtgS54mt21ej4l
inviqk5We+pCdq0zG/O8KJ67OX1RuEoX5tMnbOPZxHCz1LFP/xnpQYn6DGe6
hBg+KiW7BMXow7bkJdfCM2JoXcFuLCdsANLU/v9eeojh/QaZr7qHDYC6QOOb
9BFDq1dt87dCDMDLIbxeJkQM3/7880+uywBayf92PkwUQ+EJkb3XEg0hcoi1
hV4ihq6+KMDOagTj8rwS76bE0PPzYbcdSsag3WjyfOiHGMZOPeG/5GIMWVbp
5t9+iyGv+rn84zeMQTd2ywWWv2J4e7uZ08Q6E7j9YdsEsUkc4yuGzfS8TcA2
lr8kW04ct++tjXtsfBTefRCRd/ISxyNWcbI9imYg5e3Y7OMnjv8ZWwo4mZhB
FOtd+4ggcexm1iQJ+5iBvIL4paxIcdzn/DxCosIMkmMlf7SkiuOiZetxJ6Vj
oK8g+0iuXBwb3EdTPsJxoMcSlMVZcSxu/aUTGGUBececS2x+i+MFL6UB72IL
iBbLFKz7I47R/3mlFXdawMHG3+sTmSXwfpNE1oC4JXSzPOndtVUCdy/2rOq8
tYSpaKUQbYoEPpxJzT0tbw0C5xWexYVL4MGf6o+t99rBP5MTit+iJHBh8tm5
gaN2MLL30t0jcRIYaz3FXxhjB/fqZpJ3pEogz79Nwrsm7IDMVGZXfFMCBQe+
eV14Yg9G52T/vW6QwEebFTq/yDlARARJZxu7JAa++2irNncSwqN+lsptksTd
um8X57hPQWhMDd+BzZKo/j1kuEv6FAQlGkyG8Euizel9+1gdT4FXpmvaR5Ik
piXfPSnTcwocHhQPlxhKopp21EJVnSPoDpHCqMmS+FSv8OvsU2fQ+fRz1DpN
Ep/8sr16970z4JeaIwEZknif7joQs+gMWpMGIkU5jPwqCa8a1FyAMu/ayvVA
EjPj3+w6UOcCUptKdvS9kcS8ps6ktJ7TwKkl/cSLRwpLXEwOOYm4QUbo56WP
W6WQO2CJZeWQGwhWX4OjO6Ww3OWa76tAN1BS3tCmLCyFGm2WttteuYE1afTz
HyUpVG16xmkT6A4lfHk8MeZSeKUVhSbfe4DhzGb3q7lSqK8XoVHz0hu6ZVor
Nt6WwpT59CtDf7zB3jVqIaRQCtuaeZSE+XzAb3TmvG25FCaZ5amM6/tAdn/b
NeF6KTzze+3GSqkPTDbHNZeOSmHT7Qsip8J9IeHmknCdDAnflb2s4lTxB9Na
3hIBRRKGJt3ItDPzhz0DkkohZBImc4uFdXr7w6Pt5jpKWiRMefplULzYH4ZS
Hp26e4SEUtxmoUF7AkAp3P1Ogi8J2zeoqgxwBcKQ5ZDY0SoScrg0e2ZuCIZ7
Qb/vP6CT0NUiuC5eKhj8MjgJjjoSZv2ZkrppEAwbO9T0XrSQ0IJr4blecjAo
HchyJvpJqM6ReMNz61lIIIwL+f+S0Lujg12PFAJKW+olR3SkcXPeT+MV/zDY
6ehTMKcvjXmzf3jPXQ2DtcdComyHpPHFh3RvKXoYvDoeKShlJo0YxOU3tS4c
Tl7X4PNylMaZ2ydjNTPCIW1v5brlGGlM4GW+ve15BEzLlw5tbpLGi5c3ujzc
EQWd56xtRFul8UHHeo9xmSio7mD/QH4jjc+5e37twyiI9TvTbdEjjb5Ck9Ws
rlEgUCnelvtVGr+8aMq/TY8CQ638atJ6GdQWeFjU5nQe7h3KvEI9IIO6hZKW
ii+jYVev8nTJIRlMzuqP/vcxGi6e6tTfZsKIl4ytn/gTDV4hPMtjljJYvb+r
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

               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {8.883320016851265, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
        AbsoluteDashing[None], 
        LineBox[{{21.831474240022082`, -0.002243955043455953}, {
         21.743434173256485`, 0.14095094397534483`}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{25.617197126208723`, -0.002243954952224625}, {
         25.485137026060332`, 0.1382991866773391}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{18.35389161804728, -0.0013600358224789555`}, {
         18.0897714177505, 0.13785722711246626`}}]}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {11.541666666666693`, 0}, 
      DefaultBaseStyle -> "CanvasGraphics", DisplayFunction -> Identity, 
      Frame -> True, FrameLabel -> {
        FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
        FormBox["\"Probability Density\"", TraditionalForm]}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      ImagePadding -> {{39.634764, 1.5}, {32.34375, 2.520411}}, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentPoint", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{11.073784722222248`, 
       34.46788194444444}, {-0.002903225806451613, 0.14225806451612905`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
      Ticks -> {Automatic, Automatic}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{{3.9372376791088123`*^9, 
  3.9372377448600445`*^9}},ExpressionUUID->"d78654aa-5890-0d4c-8ab2-\
300d6f2ff87b"],

Cell[BoxData["21.875`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.937237328666809*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"6f07cfb4-9cf7-8a42-b4fe-41a7cdc74665"],

Cell[BoxData["25.58690871812041`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373286709614`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"c002bd24-8bcf-234f-9122-4203da775c74"],

Cell[BoxData["18.16309128187959`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373286966076`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"462022df-cd0e-3a4b-b782-3cd18009948c"],

Cell[BoxData["\<\"--------\[Beta]+\[Gamma] 10 seconds (5 Hz):--------\"\>"], \
"Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.937237328701002*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"78d365f3-f30a-a04f-b1c2-eeb9d3dbf05d"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[{{{}, 
        InterpretationBox[{
          TagBox[{{{}, {}, {}, {}, {
              RGBColor[1, 0, 0], 
              Opacity[0.3], 
              LineBox[{{94., 0.}, {94., 0.04}}], 
              LineBox[{{81., 0.}, {81., 0.02}}], 
              LineBox[{{80., 0.}, {80., 0.02}}], 
              LineBox[{{73., 0.}, {73., 0.02}}], 
              LineBox[{{92., 0.}, {92., 0.02}}], 
              LineBox[{{77., 0.}, {77., 0.02}}], 
              LineBox[{{79., 0.}, {79., 0.1}}], 
              LineBox[{{90., 0.}, {90., 0.14}}], 
              LineBox[{{87., 0.}, {87., 0.02}}], 
              LineBox[{{105., 0.}, {105., 0.02}}], 
              LineBox[{{91., 0.}, {91., 0.06}}], 
              LineBox[{{78., 0.}, {78., 0.02}}], 
              LineBox[{{106., 0.}, {106., 0.02}}], 
              LineBox[{{84., 0.}, {84., 0.02}}], 
              LineBox[{{95., 0.}, {95., 0.02}}], 
              LineBox[{{85., 0.}, {85., 0.04}}], 
              LineBox[{{93., 0.}, {93., 0.06}}], 
              LineBox[{{83., 0.}, {83., 0.06}}], 
              LineBox[{{98., 0.}, {98., 0.02}}], 
              LineBox[{{88., 0.}, {88., 0.02}}], 
              LineBox[{{82., 0.}, {82., 0.08}}], 
              LineBox[{{86., 0.}, {86., 0.06}}], 
              LineBox[{{97., 0.}, {97., 0.02}}], 
              LineBox[{{74., 0.}, {74., 0.02}}], 
              LineBox[{{70., 0.}, {70., 0.02}}], 
              LineBox[{{102., 0.}, {102., 0.02}}], 
              LineBox[{{76., 0.}, {76., 0.02}}]}}, 
            TagBox[{
              RGBColor[1, 0, 0], 
              PointSize[0.012833333333333334`], 
              AbsoluteThickness[2], 
              GeometricTransformationBox[
               InsetBox[
                StyleBox[
                "\"\[FilledDiamond]\"", StripOnInput -> False, FontSize -> 
                 18], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {
           "WolframDynamicHighlight", <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>}], 
          StyleBox[
           DynamicBox[
            (Charting`HighlightActionBox["DynamicHighlight", {}, 
             Slot["HighlightElements"], 
             Slot["LayoutOptions"], 
             Slot["Meta"], 
             Charting`HighlightActionFunction[
             "DynamicHighlight", {{{}, {}, {}, {}, {
                 Directive[
                  RGBColor[1, 0, 0], 
                  Opacity[0.3]], 
                 Line[{{94., 0.}, {94., 0.04}}], 
                 Line[{{81., 0.}, {81., 0.02}}], 
                 Line[{{80., 0.}, {80., 0.02}}], 
                 Line[{{73., 0.}, {73., 0.02}}], 
                 Line[{{92., 0.}, {92., 0.02}}], 
                 Line[{{77., 0.}, {77., 0.02}}], 
                 Line[{{79., 0.}, {79., 0.1}}], 
                 Line[{{90., 0.}, {90., 0.14}}], 
                 Line[{{87., 0.}, {87., 0.02}}], 
                 Line[{{105., 0.}, {105., 0.02}}], 
                 Line[{{91., 0.}, {91., 0.06}}], 
                 Line[{{78., 0.}, {78., 0.02}}], 
                 Line[{{106., 0.}, {106., 0.02}}], 
                 Line[{{84., 0.}, {84., 0.02}}], 
                 Line[{{95., 0.}, {95., 0.02}}], 
                 Line[{{85., 0.}, {85., 0.04}}], 
                 Line[{{93., 0.}, {93., 0.06}}], 
                 Line[{{83., 0.}, {83., 0.06}}], 
                 Line[{{98., 0.}, {98., 0.02}}], 
                 Line[{{88., 0.}, {88., 0.02}}], 
                 Line[{{82., 0.}, {82., 0.08}}], 
                 Line[{{86., 0.}, {86., 0.06}}], 
                 Line[{{97., 0.}, {97., 0.02}}], 
                 Line[{{74., 0.}, {74., 0.02}}], 
                 Line[{{70., 0.}, {70., 0.02}}], 
                 Line[{{102., 0.}, {102., 0.02}}], 
                 Line[{{76., 0.}, {76., 0.02}}]}}, {
                Annotation[{
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]], 
                  GeometricTransformation[
                   Inset[
                    Style["\[FilledDiamond]", FontSize -> 18], {0., 
                    0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
                   "]]}, "Charting`Private`Tag#1"]}}, <|
              "HighlightElements" -> <|
                "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
               "LayoutOptions" -> <|
                "PanelPlotLayout" -> <||>, 
                 "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
                 "Frame" -> {{False, False}, {False, False}}, 
                 "AxesOrigin" -> {69.25000000000016, 0}, 
                 "ImageSize" -> {360, 360/GoldenRatio}, 
                 "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
                 GoldenRatio^(-1), "DefaultStyle" -> {
                   Directive[
                    PointSize[0.012833333333333334`], 
                    AbsoluteThickness[2], 
                    RGBColor[1, 0, 0]]}, 
                 "HighlightLabelingFunctions" -> <|
                  "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                   "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                 False|>, 
               "Meta" -> <|
                "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                 "Function" -> ListPlot, "GroupHighlight" -> False|>|>]]& )[<|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, 
                "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
                "Frame" -> {{False, False}, {False, False}}, 
                "AxesOrigin" -> {69.25000000000016, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   PointSize[0.012833333333333334`], 
                   AbsoluteThickness[2], 
                   RGBColor[1, 0, 0]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> ListPlot, "GroupHighlight" -> False|>|>], 
            ImageSizeCache -> {{
             4.503599627370496*^15, -4.503599627370496*^15}, {
             4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
           False]}, 
         Annotation[{{{}, {}, {}, {}, {
             Directive[
              RGBColor[1, 0, 0], 
              Opacity[0.3]], 
             Line[{{94., 0.}, {94., 0.04}}], 
             Line[{{81., 0.}, {81., 0.02}}], 
             Line[{{80., 0.}, {80., 0.02}}], 
             Line[{{73., 0.}, {73., 0.02}}], 
             Line[{{92., 0.}, {92., 0.02}}], 
             Line[{{77., 0.}, {77., 0.02}}], 
             Line[{{79., 0.}, {79., 0.1}}], 
             Line[{{90., 0.}, {90., 0.14}}], 
             Line[{{87., 0.}, {87., 0.02}}], 
             Line[{{105., 0.}, {105., 0.02}}], 
             Line[{{91., 0.}, {91., 0.06}}], 
             Line[{{78., 0.}, {78., 0.02}}], 
             Line[{{106., 0.}, {106., 0.02}}], 
             Line[{{84., 0.}, {84., 0.02}}], 
             Line[{{95., 0.}, {95., 0.02}}], 
             Line[{{85., 0.}, {85., 0.04}}], 
             Line[{{93., 0.}, {93., 0.06}}], 
             Line[{{83., 0.}, {83., 0.06}}], 
             Line[{{98., 0.}, {98., 0.02}}], 
             Line[{{88., 0.}, {88., 0.02}}], 
             Line[{{82., 0.}, {82., 0.08}}], 
             Line[{{86., 0.}, {86., 0.06}}], 
             Line[{{97., 0.}, {97., 0.02}}], 
             Line[{{74., 0.}, {74., 0.02}}], 
             Line[{{70., 0.}, {70., 0.02}}], 
             Line[{{102., 0.}, {102., 0.02}}], 
             Line[{{76., 0.}, {76., 0.02}}]}}, {
            Annotation[{
              Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[2], 
               RGBColor[1, 0, 0]], 
              GeometricTransformation[
               Inset[
                Style["\[FilledDiamond]", FontSize -> 18], {0., 
                0.}], CompressedData["
1:eJxTTMoPSmVmYGCQBmJGIGZigIKGcIdqkXXuD6uW2IP5DiFQ/hQInwGN7xCE
Jh+OJh+Myj8Q7DBrJgjshPAbwhzeBO6Qa319ECofiqY/Ck1/mANIdeCOdVD9
aOY3oKlnQDPvALr7QtH8G45q/oEQNPsi0MwPQ7MfFj5boPxQVP0OaPob0MKv
IRCNH4lmH8K/AM+ug+c=
               "]]}, "Charting`Private`Tag#1"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"IndicatedBall"}|>, 
           "LayoutOptions" -> <|
            "PanelPlotLayout" -> <||>, 
             "PlotRange" -> {{69.25000000000016, 106.}, {0, 0.14}}, 
             "Frame" -> {{False, False}, {False, False}}, 
             "AxesOrigin" -> {69.25000000000016, 0}, 
             "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.012833333333333334`], 
                AbsoluteThickness[2], 
                RGBColor[1, 0, 0]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> ListPlot, "GroupHighlight" -> False|>|>, 
          "DynamicHighlight"]], {{}, {}}}, {{{
          RGBColor[0.368417, 0.506779, 0.709798], 
          PointSize[0.004766666666666667], 
          AbsoluteThickness[2], 
          TagBox[{{
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{-0.25, 2.3122788046210684`*^-38}, {0.25, 
              2.3122788046210684`*^-38}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{0.75, 2.3122788046210684`*^-38}, {1.25, 
              2.003820812084618*^-36}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{1.75, 2.3122788046210684`*^-38}, {2.25, 
              8.68255557876265*^-35}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{2.75, 2.3122788046210684`*^-38}, {3.25, 
              2.5081008881852375`*^-33}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{3.75, 2.3122788046210684`*^-38}, {4.25, 
              5.433800574253317*^-32}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             RectangleBox[{4.75, 2.3122788046210684`*^-38}, {5.25, 
              9.41786315529585*^-31}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{5.75, 2.3122788046210684`*^-38}, {6.25, 
              1.3602533683965637`*^-29}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{6.75, 2.3122788046210684`*^-38}, {7.25, 
              1.683993670074946*^-28}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{7.75, 2.3122788046210684`*^-38}, {8.25, 
              1.824186143108685*^-27}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{8.75, 2.3122788046210684`*^-38}, {9.25, 
              1.7564885684644293`*^-26}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{9.75, 2.3122788046210684`*^-38}, {10.25, 
              1.5221729934312745`*^-25}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{10.75, 2.3122788046210684`*^-38}, {11.25, 
              1.1991955600977662`*^-24}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{11.75, 2.3122788046210684`*^-38}, {12.25, 
              8.6601906031727*^-24}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{12.75, 2.3122788046210684`*^-38}, {13.25, 
              5.773016289776508*^-23}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{13.75, 2.3122788046210684`*^-38}, {14.25, 
              3.573497083371659*^-22}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{14.75, 2.3122788046210684`*^-38}, {15.25, 
              2.064528381633253*^-21}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{15.75, 2.3122788046210684`*^-38}, {16.25, 
              1.1182001847021107`*^-20}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{16.75, 2.3122788046210684`*^-38}, {17.25, 
              5.700189882722642*^-20}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{17.75, 2.3122788046210684`*^-38}, {18.25, 
              2.7443247513152453`*^-19}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{18.75, 2.3122788046210684`*^-38}, {19.25, 
              1.2517009628893639`*^-18}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{19.75, 2.3122788046210684`*^-38}, {20.25, 
              5.423620272199614*^-18}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{20.75, 2.3122788046210684`*^-38}, {21.25, 
              2.2381472989943743`*^-17}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{21.75, 2.3122788046210684`*^-38}, {22.25, 
              8.81626567867511*^-17}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{22.75, 2.3122788046210684`*^-38}, {23.25, 
              3.321815581365153*^-16}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{23.75, 2.3122788046210684`*^-38}, {24.25, 
              1.1994522428379342`*^-15}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{24.75, 2.3122788046210684`*^-38}, {25.25, 
              4.157781254573415*^-15}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{25.75, 2.3122788046210684`*^-38}, {26.25, 
              1.3858204750820464`*^-14}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{26.75, 2.3122788046210684`*^-38}, {27.25, 
              4.4479704581707464`*^-14}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{27.75, 2.3122788046210684`*^-38}, {28.25, 
              1.3766468568038458`*^-13}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{28.75, 2.3122788046210684`*^-38}, {29.25, 
              4.1138005727800445`*^-13}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{29.75, 2.3122788046210684`*^-38}, {30.25, 
              1.1883398587903955`*^-12}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{30.75, 2.3122788046210684`*^-38}, {31.25, 
              3.321984908476635*^-12}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{31.75, 2.3122788046210684`*^-38}, {32.25, 
              8.996350380268288*^-12}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{32.75, 2.3122788046210684`*^-38}, {33.25, 
              2.3624961331940904`*^-11}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{33.75, 2.3122788046210684`*^-38}, {34.25, 
              6.021585732429407*^-11}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{34.75, 2.3122788046210684`*^-38}, {35.25, 
              1.490944627349521*^-10}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{35.75, 2.3122788046210684`*^-38}, {36.25, 
              3.5890350390585974`*^-10}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{36.75, 2.3122788046210684`*^-38}, {37.25, 
              8.406102067157245*^-10}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{37.75, 2.3122788046210684`*^-38}, {38.25, 
              1.917033697736439*^-9}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{38.75, 2.3122788046210684`*^-38}, {39.25, 
              4.2597471857907645`*^-9}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{39.75, 2.3122788046210684`*^-38}, {40.25, 
              9.228742278015692*^-9}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{40.75, 2.3122788046210684`*^-38}, {41.25, 
              1.9506409897874142`*^-8}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{41.75, 2.3122788046210684`*^-38}, {42.25, 
              4.024822575594698*^-8}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{42.75, 2.3122788046210684`*^-38}, {43.25, 
              8.111421497698523*^-8}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{43.75, 2.3122788046210684`*^-38}, {44.25, 
              1.5975813340694411`*^-7}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{44.75, 2.3122788046210684`*^-38}, {45.25, 
              3.0765866313435055`*^-7}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{45.75, 2.3122788046210684`*^-38}, {46.25, 
              5.796021684178874*^-7}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{46.75, 2.3122788046210684`*^-38}, {47.25, 
              1.068687742874343*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{47.75, 2.3122788046210684`*^-38}, {48.25, 
              1.9294266624477205`*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{48.75, 2.3122788046210684`*^-38}, {49.25, 
              3.4123288687289676`*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{49.75, 2.3122788046210684`*^-38}, {50.25, 
              5.914248395281047*^-6}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{50.75, 2.3122788046210684`*^-38}, {51.25, 
              0.000010049583645785403`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{51.75, 2.3122788046210684`*^-38}, {52.25, 
              0.00001674801766814929}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{52.75, 2.3122788046210684`*^-38}, {53.25, 
              0.000027384588889090894`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{53.75, 2.3122788046210684`*^-38}, {54.25, 
              0.00004394719394682624}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{54.75, 2.3122788046210684`*^-38}, {55.25, 
              0.00006924479686239931}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{55.75, 2.3122788046210684`*^-38}, {56.25, 
              0.00010715632314456292`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{56.75, 2.3122788046210684`*^-38}, {57.25, 
              0.00016291520988961092`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{57.75, 2.3122788046210684`*^-38}, {58.25, 
              0.00024341779463851176`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{58.75, 2.3122788046210684`*^-38}, {59.25, 
              0.00035753535734531244`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{59.75, 2.3122788046210684`*^-38}, {60.25, 
              0.0005164002344590795}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{60.75, 2.3122788046210684`*^-38}, {61.25, 
              0.0007336269560364563}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{61.75, 2.3122788046210684`*^-38}, {62.25, 
              0.001025421161453537}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{62.75, 2.3122788046210684`*^-38}, {63.25, 
              0.0014105237754216432`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{63.75, 2.3122788046210684`*^-38}, {64.25, 
              0.0019099373496568686`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{64.75, 2.3122788046210684`*^-38}, {65.25, 
              0.0025463872418656037`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{65.75, 2.3122788046210684`*^-38}, {66.25, 
              0.0033434836118192914`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{66.75, 2.3122788046210684`*^-38}, {67.25, 
              0.004324571489556116}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{67.75, 2.3122788046210684`*^-38}, {68.25, 
              0.005511284783601956}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{68.75, 2.3122788046210684`*^-38}, {69.25, 
              0.006921854193433993}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{69.75, 2.3122788046210684`*^-38}, {70.25, 
              0.008569255491471283}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{70.75, 2.3122788046210684`*^-38}, {71.25, 
              0.010459319449167625`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{71.75, 2.3122788046210684`*^-38}, {72.25, 
              0.012588953103678701`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{72.75, 2.3122788046210684`*^-38}, {73.25, 
              0.014944639396778031`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{73.75, 2.3122788046210684`*^-38}, {74.25, 
              0.01750138446114573}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{74.75, 2.3122788046210684`*^-38}, {75.25, 
              0.02022226636537185}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{75.75, 2.3122788046210684`*^-38}, {76.25, 
              0.02305870530556743}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             RectangleBox[{76.75, 2.3122788046210684`*^-38}, {77.25, 
              0.02595152469844771}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{77.75, 2.3122788046210684`*^-38}, {78.25, 
              0.028832809363685624`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{78.75, 2.3122788046210684`*^-38}, {79.25, 
              0.03162849695515185}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{79.75, 2.3122788046210684`*^-38}, {80.25, 
              0.03426156932666824}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{80.75, 2.3122788046210684`*^-38}, {81.25, 
              0.036655649356161356`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{81.75, 2.3122788046210684`*^-38}, {82.25, 
              0.03873876308786516}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{82.75, 2.3122788046210684`*^-38}, {83.25, 
              0.040447002520414395`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{83.75, 2.3122788046210684`*^-38}, {84.25, 
              0.041727824266894184`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{84.75, 2.3122788046210684`*^-38}, {85.25, 
              0.04254274412904764}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{85.75, 2.3122788046210684`*^-38}, {86.25, 
              0.04286923495608452}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{86.75, 2.3122788046210684`*^-38}, {87.25, 
              0.04270170001487684}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{87.75, 2.3122788046210684`*^-38}, {88.25, 
              0.04205146958283212}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{88.75, 2.3122788046210684`*^-38}, {89.25, 
              0.040945846674699235`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{89.75, 2.3122788046210684`*^-38}, {90.25, 
              0.03942630080921595}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{90.75, 2.3122788046210684`*^-38}, {91.25, 
              0.03754596953985334}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{91.75, 2.3122788046210684`*^-38}, {92.25, 
              0.035366670873083594`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{92.75, 2.3122788046210684`*^-38}, {93.25, 
              0.0329556526651766}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{93.75, 2.3122788046210684`*^-38}, {94.25, 
              0.030382307020895793`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{94.75, 2.3122788046210684`*^-38}, {95.25, 
              0.02771506027821926}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{95.75, 2.3122788046210684`*^-38}, {96.25, 
              0.025018615871984177`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{96.75, 2.3122788046210684`*^-38}, {97.25, 
              0.02235168300480566}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{97.75, 2.3122788046210684`*^-38}, {98.25, 
              0.01976527397139243}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{98.75, 2.3122788046210684`*^-38}, {99.25, 
              0.017301602448089575`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{99.75, 2.3122788046210684`*^-38}, {100.25, 
              0.014993568681514429`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{100.75, 2.3122788046210684`*^-38}, {101.25, 
              0.012864778831089507`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{101.75, 2.3122788046210684`*^-38}, {102.25, 
              0.010930016995119772`}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{102.75, 2.3122788046210684`*^-38}, {103.25, 
              0.009196070609680381}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{103.75, 2.3122788046210684`*^-38}, {104.25, 
              0.007662802683027903}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             
             RectangleBox[{104.75, 2.3122788046210684`*^-38}, {105.25, 
              0.00632436648105903}]}, {
             RGBColor[0.368417, 0.506779, 0.709798], 
             PointSize[0.004766666666666667], 
             AbsoluteThickness[2], 
             Opacity[0.2], 
             RectangleBox[{105.75, 2.3122788046210684`*^-38}, {106.25, 
              0.005170467917439392}]}}, 
           Annotation[#, "Charting`Private`Tag$43251#1"]& ]}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           PointSize[0.004766666666666667], 
           AbsoluteThickness[2], {}, {{}, 
            LineBox[CompressedData["
1:eJxd03tMU2cYx3GGURRRcAgooNSpaLmMcpGbQB8ol3Iv0ELLUI50xCgRW8S7
gjMTAVfEgQy5yQQ2phPqDcJQPCpDnJewDQhDokeE4EbUQoxTp3NLzrMs79uk
f3zy5Jdvc9ouy9iamDnDyMgo69+3Mb75V9/Vl91edUt2O/iixaSfiMOq+6Mm
4w6hX1B+K865ayWMHR5BGwPpWeAevHXG2blOfrxNKc+HLGlSmd8pLXoBZUsI
nH388mzbC2gryjYQUL8hMjxoCr2Ysh1UV3oY27Q6+fNeQtkBBl3W549YZPA+
IKC8DDjh3F8Lu46jP6K8HLz7K+9N626iV1BeCT3Z7a8EHn+iHSmvAl/F0jeZ
hhVrea+mLASxe2XLtzkJaCfKzpA7KDFzNNqLdqHsCqdjwlw68hvQH1N2A+c5
t17bbvyJN4hIsyLYvzfPcuoXA97dSbPuIPhm7sxR8cIA/u5BmvWACPPbNe+s
ffDuSZr1hOT02KaFM1R49yLNeoFNV3Dk0N3deF9Dml0Ddot2HAjedALv3qRZ
b8hQZc8/87wd7z6kWR8426kJza8ewLsvadYXCjZv3VLZMY13P9KsH5i7zZrX
5mUeyN/9SbP+UCBzzvU0FeJ9LWl2LdhadteMpUvwHkCaDQDXvbrmG9NpeA8k
zQZCRcnLsnsTuXgPIs0GQZq9elLrq8O7mDQrBu2Iww95vQ28BUCaASg30z4c
eN3Bu54yB5DDxG+T6fpwH0yaCYYhh5rC2/vHcE+ZCwZ7ZWfr+HevcB9CmgmB
c5LVT6xGzYL4PWUuBDSN4yZVOwW8BRLSjASq3m4ObIz2wD1lTgIt6nDjkp8l
uA8lzYSC+or62KMpOe4pc6EwXDVb9311Ju7DSDNh8ChUmSbo2Y57ylwYfPmJ
6Uax9hDuw0kz4WA4IrQvairHPWUuHK60tzV15TTgPoI0EwFJqqITb56ewz1l
LgKUcZqCTW4s7qWkGSnMU285NXnyDu4pc1LwbZb7MveGcB9JmomE4h55iNxy
HPeUuUi4vOuc8Y2jU7iPIs1EQV3Vvrq/297injIXBX9sm2mdZ2oi5vfRpJlo
8GsDncHxQ971lLlouGruWLvcxh73MaSZGOh74/++IHUl7ilzMeB2xu9514Qb
7mNJM7Ew07jrdE62D+4pc7FQ/tDN/NEk4D6ONBMHjxVxY3amUtxT5uJgtLWy
4ukdGe7jSTPxoFttle5kn4J7ylw8nF6/oPZ+VDpvCxlpkQwG5zUHCkc+5S2j
rJGBVnh00W11Fu9SynoZvG96kNDYpuXdR9kgg9zRXUFGZTuwn0BalAAB3j7W
Nqn7sE9ZkwBJZueNrn/xGfYp6xPA8cFNm/NZh7BP2ZAAs1xetQT0FmE/kbQo
Ed5tOnskuroE+5Q1ifC0v9xkdPIY9inrE2F88Hriykvl2KdsSISxjgufX6j5
CvtJpEVJoBjUpswpq8I+ZU0S9EotrVQFtdinrE+CoUJrqHGvxz5lQxIYzIry
O4u/xr6ctEgOf5Vk5h3uPoV9yho5PC9c7H5soAH7lPVyeH3dxmPXpUbsUzbI
oWffUq1qXRP2FaRFCnDqya4V9qJllDUKsFgl7X8xjS6lrFfAtYRFUe9H0H2U
DQowv+Xt+uPh//rJpEXJsPTZ1frhl/h5ZZQ1yXBteNWyVjd0KWV9Mmgyilv8
/PB59FE2JIN0XZGu3A6fp0UKaVEK2NX1e5U+xO9LRlmTAmXFAvti+5PYp6xP
gZ7mD7yTN9Rgn7IhBTZkDz3eU3cC+0rSIiWUVFjMT3tcgX3KGiW0jHtbqQLx
91xKWa8EZ3nn6MF2/D/0UTYoQbhzccf0Rfw/WahIi1QQnnkn4zdlMfYpa1QQ
o44325NRgH3KehWcKRZeVA8cxD5lgwps91x6ZqLOx34qaVEqTNyXeJZP7MY+
ZU0qOEZ0/17vuh37//sfF0XhoA==
             "]]}, {}, {{}, {}}}, 
          Annotation[#, "Charting`Private`Tag$43251#1"]& ]}, {}, {}}, 
       InterpretationBox[{
         TagBox[{{{}, {}, 
            TagBox[{
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Opacity[1.], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag#1"]& ]}, {}}, {
          "WolframDynamicHighlight", <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
         StyleBox[
          DynamicBox[
           (Charting`HighlightActionBox["DynamicHighlight", {}, 
            Slot["HighlightElements"], 
            Slot["LayoutOptions"], 
            Slot["Meta"], 
            Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
                Annotation[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]], 
                  Line[CompressedData["
1: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
                   "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
             "HighlightElements" -> <|
               "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
              "LayoutOptions" -> <|
               "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
                "Frame" -> {{True, True}, {True, True}}, 
                "AxesOrigin" -> {58.99585465758762, 0}, 
                "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True},
                 "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
                "DefaultStyle" -> {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[2]]}, 
                "HighlightLabelingFunctions" -> <|
                 "CoordinatesToolOptions" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), 
                  "ScalingFunctions" -> {{Identity, Identity}, {
                    Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
                False|>, 
              "Meta" -> <|
               "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
                "Function" -> Plot, "GroupHighlight" -> False|>|>]]& )[<|
            "HighlightElements" -> <|
              "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
             "LayoutOptions" -> <|
              "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
               "Frame" -> {{True, True}, {True, True}}, 
               "AxesOrigin" -> {58.99585465758762, 0}, 
               "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
               "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
               "DefaultStyle" -> {
                 Directive[
                  Opacity[1.], 
                  RGBColor[0.368417, 0.506779, 0.709798], 
                  AbsoluteThickness[2]]}, 
               "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), 
                 "ScalingFunctions" -> {{Identity, Identity}, {
                   Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
               False|>, 
             "Meta" -> <|
              "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
               "Function" -> Plot, "GroupHighlight" -> False|>|>], 
           ImageSizeCache -> {{
            4.503599627370496*^15, -4.503599627370496*^15}, {
            4.503599627370496*^15, -4.503599627370496*^15}}], Selectable -> 
          False]}, 
        Annotation[{{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1: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
               "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PanelPlotLayout" -> <||>, "PlotRange" -> {All, All}, 
            "Frame" -> {{True, True}, {True, True}}, 
            "AxesOrigin" -> {58.99585465758762, 0}, 
            "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
            "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
            "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], {
        AbsoluteDashing[None], 
        LineBox[{{86.52006363013486, -0.0024244721261900137`}, {
         86.59209641203398, 0.1442406279205012}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{94.5877352272953, -0.002424471945032647}, {
         94.80383357299266, 0.14057400060049127`}}]}, {
        AbsoluteDashing[None], 
        LineBox[{{78.5244248637912, -0.001966143507386775}, {
         78.59645764569032, 0.141948985913429}}]}}, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {69.25000000000016, 0}, 
      DefaultBaseStyle -> "CanvasGraphics", DisplayFunction -> Identity, 
      Frame -> True, FrameLabel -> {
        FormBox["\"\[Nu] \[RightArrow]\"", TraditionalForm], 
        FormBox["\"Probability Density\"", TraditionalForm]}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      ImagePadding -> {{39.634764, 1.5}, {32.34375, 0.5}}, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[2]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> 
        "CurrentPoint", "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{68.48437500000016, 106.765625}, {-0.003010752688172044, 
       0.14752688172043013`}}, PlotRangeClipping -> True, PlotRangePadding -> 
      Automatic, Ticks -> {Automatic, Automatic}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{{3.9372377724154415`*^9, 
  3.9372378195254765`*^9}},ExpressionUUID->"84646787-2d81-924d-bf4a-\
e4ba245908e9"],

Cell[BoxData["86.66`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373289633293`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"ea615ee5-2a57-2645-8f4d-266ded147822"],

Cell[BoxData["94.56404184901753`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373289673805`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"d3d5e431-e141-0042-a472-63ca77237f0a"],

Cell[BoxData["78.75595815098247`"], "Output",
 CellChangeTimes->{
  3.936891354861437*^9, 3.93689158453199*^9, 3.9368916909080353`*^9, 
   3.9368917390858173`*^9, 3.93689190167074*^9, 3.9372355595490665`*^9, 
   3.9372364796138306`*^9, {3.937236535383873*^9, 3.937236544198391*^9}, 
   3.9372372174970245`*^9, 3.9372373289715576`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"d94e1f63-c417-b04c-a854-279f4439532e"]
}, Open  ]],

Cell["\<\
The Poisson Distribution can be seen to highly correlate with the actual data \
when the number of data-points is large (especially when the mean is very \
small). This is also when the Sqrt(mean) is very close to the standard \
deviation. As the sample space decreases and the mean value increases, the \
Poisson distribution doesn\[CloseCurlyQuote]t quite match the data-points as \
it does for a large number of low-valued data-points.

The Poisson distribution is used to model the probability of a certain number \
of DISCRETE events occurring in a fixed time interval when those events happen:

Randomly
Independently
At a predictable average rate (even if the individual events are random)

A radioactive decay shoots off discrete particles randomly, with each decay \
being independent. The overall decay rate is predictable (it is a 1st order \
reaction with a well known half-life). Hence, the Cs-137 radioactive decay \
has all the characteristics to be modelled by the Poisson distribution.\
\>", "Text",
 CellChangeTimes->{{3.937238105332983*^9, 3.9372382104480133`*^9}, {
  3.9372388030295353`*^9, 3.937238880487999*^9}, {3.937238914716818*^9, 
  3.937239046374449*^9}, {3.9372391135988846`*^9, 
  3.9372391170437336`*^9}},ExpressionUUID->"4b73ec0e-5a6b-8444-bccb-\
35cb9b0b6b07"],

Cell[TextData[{
 "Step4.\n- Collect and present all the calculations in one cumulative table \
with proper labels. Use Grid function. Write one row for each data set bg50, \
down50, .... To be able to show the numbers in correct format and with \
correct number of significant figures, use the functions, PlusMinus[a, b] \
which is a \[PlusMinus] b, or Interval[a, b] which is the interval [a, b], \
and also check the functions ",
 ButtonBox["ScientificForm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/ScientificForm.html"], 
    None},
  ButtonNote->"http://reference.wolfram.com/language/ref/ScientificForm.html"],
 ", ",
 ButtonBox["EngineeringForm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/EngineeringForm.html"], 
    None},
  ButtonNote->
   "http://reference.wolfram.com/language/ref/EngineeringForm.html"],
 ", or ",
 ButtonBox["NumberForm",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://reference.wolfram.com/language/ref/NumberForm.html"], None},
  ButtonNote->"http://reference.wolfram.com/language/ref/NumberForm.html"],
 " to write numbers with correct number of significant figures.\n- Explain \
the difference between decay rates and their uncertainties in different runs. \
Explain statistical differences between results of the runs B and C; also \
between runs C, D, and E.\n- Use error propagation rules for the errors and \
calculate the \[Gamma]-decay rate and the \[Beta]-decay rate of the \
radioactive source [do background subtraction]. Compare to the ",
 ButtonBox["decay diagram",
  BaseStyle->"Hyperlink",
  ButtonData->"Diagram"],
 " above. Explain the discrepancy."
}], "Subsubtitle",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6185032352645617`*^9, 3.6185032518917503`*^9}, 
   3.618503418141266*^9, {3.62057462183501*^9, 3.620574848325094*^9}, {
   3.620574885544086*^9, 3.6205749577847977`*^9}, {3.620575135217271*^9, 
   3.620575169702916*^9}, {3.620575215456983*^9, 3.620575367966268*^9}, 
   3.62057544525276*^9, {3.6205758509896717`*^9, 3.620575926962956*^9}, {
   3.62057607513019*^9, 3.620576142252966*^9}, 3.620576412021985*^9, 
   3.6205772541345243`*^9, {3.620577302998715*^9, 3.620577433692396*^9}, 
   3.620713729173321*^9, {3.620713759820991*^9, 3.62071376243745*^9}, {
   3.6840807701511183`*^9, 3.68408079943296*^9}, {3.6840810774404593`*^9, 
   3.684081092460546*^9}, {3.684081174618628*^9, 3.684081191956407*^9}, {
   3.684081230167211*^9, 3.684081246925405*^9}, {3.68408135728399*^9, 
   3.684081357285058*^9}, {3.684081466260833*^9, 3.684081484513729*^9}, {
   3.684516399825201*^9, 3.68451642318222*^9}, {3.684517563820931*^9, 
   3.684517649415378*^9}, {3.684517894117333*^9, 3.684517895250423*^9}, {
   3.684518227861369*^9, 3.684518228688651*^9}, {3.684519323529649*^9, 
   3.684519466841638*^9}, {3.684520111464094*^9, 3.684520148480809*^9}, {
   3.684520188687134*^9, 3.684520215030168*^9}, {3.6845206116336527`*^9, 
   3.6845206127427273`*^9}, {3.684521582529875*^9, 3.684521583407082*^9}, {
   3.684522105363926*^9, 3.684522124056033*^9}, {3.684625941335874*^9, 
   3.684625970098298*^9}, {3.684626591589159*^9, 3.684626647809704*^9}, {
   3.68462668982508*^9, 3.684626806038714*^9}, {3.684627222183174*^9, 
   3.684627331736882*^9}, {3.6846273920319967`*^9, 3.684627499366096*^9}, {
   3.684627653542021*^9, 3.684627678844339*^9}, {3.684628043051483*^9, 
   3.6846283961568127`*^9}, 3.684628472555552*^9, 3.684628524948203*^9, {
   3.684629714716839*^9, 3.684629744161167*^9}, {3.684629774275947*^9, 
   3.684629843472145*^9}},
 Background->RGBColor[
  0.88, 1, 0.88],ExpressionUUID->"5ac75004-1b6c-4bab-ab66-70f4646255e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "show", " ", "PlusMinus", " ", "notation"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PlusMinus", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"a", ",", "\"\< \[PlusMinus] \>\"", ",", "b"}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Define", " ", "time", " ", "intervals", " ", "for", " ", "20", "Hz", " ",
      "and", " ", "5", "Hz"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"time20Hz", "=", 
     RowBox[{"1", "/", "20"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Corresponding", " ", "to", " ", "50", "ms", " ", "or", " ", "20", "Hz"}],
     "*)"}], "\n", 
   RowBox[{
    RowBox[{"time5Hz", "=", 
     RowBox[{"1", "/", "5"}]}], ";"}], "   ", 
   RowBox[{"(*", 
    RowBox[{
    "Corresponding", " ", "to", " ", "200", "ms", " ", "or", " ", "5", "Hz"}],
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Grid", " ", "structure", " ", "for", " ", "results", " ", "table"}], 
    "*)"}], "\n", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"Headers", " ", "for", " ", "the", " ", "table"}], "*)"}], 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Dataset\>\"", ",", "\"\<# of Measurements\>\"", ",", 
         "\"\<Total Time (sec)\>\"", ",", "\"\<Total Counts\>\"", ",", 
         "\"\<Mean Counts\>\"", ",", "\"\<Error in Mean (\[PlusMinus])\>\"", 
         ",", "\"\<Standard Deviation (\[Sigma])\>\"", ",", 
         "\"\<Rate (#/sec)\>\""}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Data", " ", "for", " ", "bg50", " ", 
         RowBox[{"(", 
          RowBox[{"Background", ",", 
           RowBox[{"50", " ", "sec", " ", "at", " ", "20", "Hz"}]}], ")"}]}], 
        "*)"}], 
       RowBox[{"{", 
        RowBox[{"\"\<Background, 50 sec (20Hz)\>\"", ",", 
         RowBox[{"Length", "[", "bg50", "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "bg50", "]"}], "*", "time20Hz"}], ",", 
         RowBox[{"Total", "[", "bg50", "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "bg50", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "bg50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "bg50", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "bg50", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "bg50", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "bg50", "]"}], "/", "time20Hz"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"Total", "[", "bg50", "]"}], "]"}], "/", 
                RowBox[{"Length", "[", "bg50", "]"}]}], "/", "time20Hz"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Data", " ", "for", " ", "down50", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gamma", " ", "decay"}], ",", 
           RowBox[{"50", " ", "sec", " ", "at", " ", "20", "Hz"}]}], ")"}]}], 
        "*)"}], 
       RowBox[{"{", 
        RowBox[{"\"\<\[Gamma]-decay, 50 sec (20Hz)\>\"", ",", 
         RowBox[{"Length", "[", "down50", "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "down50", "]"}], "*", "time20Hz"}], ",", 
         RowBox[{"Total", "[", "down50", "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "down50", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "down50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "down50", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "down50", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "down50", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "down50", "]"}], "/", "time20Hz"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"Total", "[", "down50", "]"}], "]"}], "/", 
                RowBox[{"Length", "[", "down50", "]"}]}], "/", "time20Hz"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Data", " ", "for", " ", "up50", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gamma", "+", 
            RowBox[{"Beta", " ", "decay"}]}], ",", 
           RowBox[{"50", " ", "sec", " ", "at", " ", "20", "Hz"}]}], ")"}]}], 
        "*)"}], 
       RowBox[{"{", 
        RowBox[{"\"\<\[Gamma]+\[Beta]-decay, 50 sec (20Hz)\>\"", ",", 
         RowBox[{"Length", "[", "up50", "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "up50", "]"}], "*", "time20Hz"}], ",", 
         RowBox[{"Total", "[", "up50", "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "up50", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up50", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up50", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "up50", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "up50", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "up50", "]"}], "/", "time20Hz"}], "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"Total", "[", "up50", "]"}], "]"}], "/", 
                RowBox[{"Length", "[", "up50", "]"}]}], "/", "time20Hz"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Data", " ", "for", " ", "up10Hz20", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gamma", "+", 
            RowBox[{"Beta", " ", "decay"}]}], ",", 
           RowBox[{"10", " ", "sec", " ", "at", " ", "20", "Hz"}]}], ")"}]}], 
        "*)"}], 
       RowBox[{"{", 
        RowBox[{"\"\<\[Gamma]+\[Beta]-decay, 10 sec (20Hz)\>\"", ",", 
         RowBox[{"Length", "[", "up10Hz20", "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "up10Hz20", "]"}], "*", "time20Hz"}], ",", 
         RowBox[{"Total", "[", "up10Hz20", "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz20", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz20", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "up10Hz20", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "up10Hz20", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "up10Hz20", "]"}], "/", "time20Hz"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"Total", "[", "up10Hz20", "]"}], "]"}], "/", 
                RowBox[{"Length", "[", "up10Hz20", "]"}]}], "/", "time20Hz"}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"Data", " ", "for", " ", "up10Hz5", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gamma", "+", 
            RowBox[{"Beta", " ", "decay"}]}], ",", 
           RowBox[{"10", " ", "sec", " ", "at", " ", "5", "Hz"}]}], ")"}]}], 
        "*)"}], 
       RowBox[{"{", 
        RowBox[{"\"\<\[Gamma]+\[Beta]-decay, 10 sec (5Hz)\>\"", ",", 
         RowBox[{"Length", "[", "up10Hz5", "]"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "up10Hz5", "]"}], "*", "time5Hz"}], ",", 
         RowBox[{"Total", "[", "up10Hz5", "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"Total", "[", "up10Hz5", "]"}], "]"}], "/", 
               RowBox[{"Length", "[", "up10Hz5", "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"Mean", "[", "up10Hz5", "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NumberForm", "[", 
          RowBox[{
           RowBox[{"N", "[", 
            RowBox[{"StandardDeviation", "[", "up10Hz5", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"PlusMinus", "[", 
          RowBox[{
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"Mean", "[", "up10Hz5", "]"}], "/", "time5Hz"}], "]"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{"Total", "[", "up10Hz5", "]"}], "]"}], "/", 
                RowBox[{"Length", "[", "up10Hz5", "]"}]}], "/", "time5Hz"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "2"}], "}"}]}], "]"}]}], "]"}]}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"Frame", "->", "All"}]}], "]"}], "\n"}]}]], "Input",
 CellChangeTimes->{{3.937240368700918*^9, 3.937240368700918*^9}, 
   3.9372419580746117`*^9},
 CellLabel->
  "In[161]:=",ExpressionUUID->"1b2c3ec1-0297-6949-bd10-6a191264a7f5"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Dataset\"\>", "\<\"# of Measurements\"\>", "\<\"Total Time \
(sec)\"\>", "\<\"Total Counts\"\>", "\<\"Mean Counts\"\>", "\<\"Error in Mean \
(\[PlusMinus])\"\>", "\<\"Standard Deviation (\[Sigma])\"\>", "\<\"Rate \
(#/sec)\"\>"},
    {"\<\"Background, 50 sec (20Hz)\"\>", "1000", "50", "20", 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"0.02\"", ShowStringCharacters -> False], 0.02, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.00\"", ShowStringCharacters -> False], 
         0.00447213595499958, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.14\"\>",
        ShowStringCharacters->False],
       0.1414213562373095,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.14\"\>",
        ShowStringCharacters->False],
       0.14007005254378832`,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"0.40\"", ShowStringCharacters -> False], 0.4, AutoDelete -> 
         True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.09\"", ShowStringCharacters -> False], 
         0.08944271909999159, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"]},
    {"\<\"\[Gamma]-decay, 50 sec (20Hz)\"\>", "1000", "50", "815", 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"0.81\"", ShowStringCharacters -> False], 0.815, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.03\"", ShowStringCharacters -> False], 
         0.028548204847240397`, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.90\"\>",
        ShowStringCharacters->False],
       0.9027735042633895,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"0.91\"\>",
        ShowStringCharacters->False],
       0.9075233322612696,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"16.30\"", ShowStringCharacters -> False], 16.3, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.57\"", ShowStringCharacters -> False], 
         0.570964096944808, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"]},
    {"\<\"\[Gamma]+\[Beta]-decay, 50 sec (20Hz)\"\>", "1000", "50", "21971", 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"21.97\"", ShowStringCharacters -> False], 21.971, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.15\"", ShowStringCharacters -> False], 
         0.14822617852457776`, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"4.69\"\>",
        ShowStringCharacters->False],
       4.6873233300040225`,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"3.63\"\>",
        ShowStringCharacters->False],
       3.6303358437393007`,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"439.42\"", ShowStringCharacters -> False], 439.42, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"2.96\"", ShowStringCharacters -> False], 
         2.964523570491555, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"]},
    {"\<\"\[Gamma]+\[Beta]-decay, 10 sec (20Hz)\"\>", "200", "10", "4375", 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"21.88\"", ShowStringCharacters -> False], 21.875, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"0.33\"", ShowStringCharacters -> False], 
         0.33071891388307384`, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"4.68\"\>",
        ShowStringCharacters->False],
       4.677071733467427,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"3.71\"\>",
        ShowStringCharacters->False],
       3.7119087181204082`,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"437.50\"", ShowStringCharacters -> False], 437.5, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"6.61\"", ShowStringCharacters -> False], 
         6.614378277661476, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"]},
    {"\<\"\[Gamma]+\[Beta]-decay, 10 sec (5Hz)\"\>", "50", "10", "4333", 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"86.66\"", ShowStringCharacters -> False], 86.66, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"1.32\"", ShowStringCharacters -> False], 
         1.316510539266587, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"9.31\"\>",
        ShowStringCharacters->False],
       9.309135298189624,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TagBox[
      InterpretationBox[
       StyleBox["\<\"7.90\"\>",
        ShowStringCharacters->False],
       7.904041849017527,
       AutoDelete->True],
      NumberForm[#, {5, 2}]& ], 
     TemplateBox[{
       TagBox[
        InterpretationBox[
         StyleBox["\"433.30\"", ShowStringCharacters -> False], 433.3, 
         AutoDelete -> True], NumberForm[#, {5, 2}]& ], "\" \[PlusMinus] \"", 
       TagBox[
        InterpretationBox[
         StyleBox["\"6.58\"", ShowStringCharacters -> False], 
         6.582552696332936, AutoDelete -> True], NumberForm[#, {5, 2}]& ]},
      "RowDefault"]}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.9372403701816425`*^9, 3.937241961904009*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"140b7f45-e106-7b49-8b18-41ec1e2d7936"]
}, Open  ]],

Cell[TextData[{
 "The Decay rates and their their uncertainties represent the number of \
particles expected to be detected per second. As expected, the background \
radioactivity measurements (A) have a very low (near zero) decay rate.\n\n\
Since Gamma decay (B) is rare, it has a non-zero but still small decay rate.\n\
\nC, D and E have similar decay rates that are very high as one would expect \
since they are measuring the radioactivity for both \[Gamma] and \[Beta] \
particles.\n\nThe uncertainty is related to both the decay rate itself and \
the Sample space. A smaller sample space giving lesser confidence. A Small \
decay rate would have a small uncertainty too (Even as per the Poisson \
distribution, this is true as std deviation = Sqrt(mean)).\[LineSeparator]\n\
Hence, A has low decay rate as well as uncertainty in the decay rate.\nB has \
a relatively higher but still low decay rate with slightly higher \
uncertainty.\nC has a much higher decay rate and uncertainty since it\
\[CloseCurlyQuote]s detecting both Beta and Gamma particles.\nD and E have a \
lower sample space hence their uncertainty is even larger. The small \
differences in rates (between about 4 counts/sec) could be attributed to the \
shorter measurement time and increased statistical fluctuations in the lower \
count rates of runs D and E.\n---\nOverall, Differences Between B and C are \
experimental, they are dealing with completely different datasets as the rate \
and uncertainty suggest.\n\nC, D and E have purely statistical differences in \
a sense that they deal with the same data - the same rate of \[Beta] and \
\[Gamma] particles but they do it over different intervals and sample rates. \
Hence, they have differences in their measurement. Although not much \
difference can be scene in case of C and D since the only thing that changes \
is the duration of the experiment; there is a notable difference when we get \
to E since a change is sample rate fundamentally means less  precision in the \
experiment.\n---\n\n\[Gamma]-decay rate with background subtraction can be \
calculated as \n\[Gamma]-decay rate (from experiment) - background \
radioactivity rate (from experiment) = 15.90 \[PlusMinus] 0.66 counts/sec \
(error adds up while means subtract)\n\nThe \[Beta]-decay rate can simply be \
calculated by subtracting off the value of the decay rate of the \[Gamma] \
particles as well as any background radioactivity from our \[Gamma]+\[Beta] \
particle detection dataset decay rate.\nI would take the dataset with the \
highest precision within our sample (C) since others have a smaller sample \
space.\n\nHence, the \[Beta]-decay rate = (439.42 \[PlusMinus] 2.96) - (15.90 \
\[PlusMinus] 0.66) - (0.40 \[PlusMinus] 0.09) = 423.12 \[PlusMinus] 3.71 \
counts/sec\n\n---\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzsnQm8nNP5x8+duy/ZkBCRIGJNlMRe1Va1VFFLlJZ/tdS+VxG1tqVFW9RW
O601pbYIQUlI0OwkgkT23Ju7ztxZ3v0973nP/zznvDP3Zq01Ivl9eztmefcZ
n8/79WzbnnLBMaenGGO/qVEPx5w86sCLLjr5tyN7qxc/Of83Z51x/mmnHnr+
xaedcdpF+55Srt7MqWX/XsEYPZcAALChEhcf9V8kpS/pUca+jCx6TBYR6pGr
T/UyUtoy8um1FIF0Hcn9ZHNpGS+VUV4tpN7J0+d6YZlXq0eC1ohoGyG9H+m9
yIxULyPaSyTddX7+AAAAAAAAAPD1Ie72RNtZYAxOKMmyV2Nw5tNI+1gUqvfU
8g6975OpqVVCl3wuFup1QRqDU15mGYOj9WQYqy11GVxWaqHT+4fBAQAAAAAA
AMCaiVcIw0Va0+iNOJSxS4/a3boZXJ4MLtR/ZGlCGZxHz9KxbCdJ87QESjeQ
vGA2S3LnksHp7cckb8I86K3YtOHY7D/8iq4CAAAAAAAAAHwdiLuF4bqyKSX5
Vcy1tInS+zpCl4mkzoYMEtnTWudqg8vSEsbgYsGl7ySr03biFTZeeiGMChbf
EOv+AgAAAAAAAADA1wcdDNNa1eVWXf80oTJh9E0bnBtLm+Qu1LE1Soy0fZkN
qLqtqGshLRpRMmWmJGiyu8HFxV13GR0vBvsAAAAAAAAAAKwJE2tLHE2/DNU7
vFQQV4yg6QRIE3azqEmJKZnTBhdQziQlSWodc02Nm164XWueeV8kyidKLyl5
sqh3PrkeFA4AAAAAAAAA1kaibKYCjmyOGpiEflKfpt/Rn2qbMx5nitdc/VGS
Xcm1wWkDMzVyJhTnx7oCTmua+r9F70cm+KasMIyKa1FcT0kcDA4AAAAAAAAA
1obQDSFDE3TTQwQyMnYdKTuT+BkZWeJ3UuhOknotypBsJo+LyOSi2EwKMBKm
dKxdTxygAQFxEmjjSdvJosFFeqc8aW9i0d5QBgcAAAAAAAAAa0NIPyfjMNBN
/6n/JG+VTjovZauUOaqB82TkKslyKZVSmHaRnGYIdEjZKMI8TQbwE4NT79oU
ZHMdbzEZXKj+5+nZBDLwbZI+ZYhJ7qXaRKC266uPYhODc2FwAAAAAAAAALBW
BKVNcsfXXSSl3ynDxsXv/3fUTfd9xPVAN+Vcse/r9pMyojCdoJid9d8p/znz
zJPKGVN/Q7Yd9q/Rr7Z1kgOqjRQim2JtodX04YzNB/VLVTYwVqsWqypnVYxV
sGr1kqVozYHbj2hqJ6XLOm2C5PGrvRQAAAAAAAAAsF7DI0+GWRm7VkyDuZvm
Tr/z0hPqGRt++C8+kjKnlggLUrihmR7gW1Eo/DB9/V8vZWXKyHr2qK2rKFNS
xsrLev34mHOWZJycnhJnK/eL/JdH30yCV1aZKqvuUVep9E3JWxWrqkwpg0ux
qpqfnnphIZR5yqykXE3u+V/19QAAAAAAAACA9RkuRV7GdiaUtzz42KaVbCBj
PRjbc+SZ83QipfSUk9m+qZILXSn9Rx67+/SzTpo7b36o574tnT/tput/y1iK
VfS56qZ785JMkPIh7cypR+3FqmsqatX2UhVa3+pTrGdlFTmf0rqGvg889XIh
pmq7nG0V8hndFRMAAAAAAAAAwOqh8rWwQ0a5Ox8e/ae7Hnr1yfsuO2pYH8b2
GHn2VF3qRjmWwnbjpM/J/HlTf3PRhb5P7UdcP6M7mYT59mVXX32R0rIjTrow
q/uYhNztXDTrZ9/e4+U3J3darh4cEMrIl9yhtEwRP/nMuM23Gz631bH08mpr
vudEfvarvh4AAAAAAAAAsP5CBhe0y9hSGlVQLzsX/fWX+/VibPdjz58oZJvU
BudlAhODE157yyIr53FqReLHFKPLSk95mXzooTtZDTvtsutbhc69lPa4x+9v
+e90V6/oh1nhFCRXtmirffmedeRPTr78j/cUdKKmm4wtUCKX+0ovBgAAAAAA
AACs14SRJ91mZVXtAY0PkFH7bad9a4tyNuL4X08zWZRhXvqdJYMznSTtwOEy
qwyOB03SV2omb/7LbXWbbvnOwsYOKdN6WnfcnpaWsCI9GTzOSxHSIALfUdK3
ZMncbXbY+5W3F+a1NuaEDCIZU89KxOAAAAAAAAAAYI1w4UuRkUHakjJPr9vu
PO2APoztcNjpM6VskjoGF1nUfTLUfSkdCpZFMuPLllgJV9ymjO2//3n9Gzt8
e8yrszppRFy+00x286jFpHpw4iAUaTI4V0juK0l8/PEHR+zzoyyXzT45m9qk
7ZlJcpmv+HIAAAAAAAAAwHoMdR0JuQxpWhtVvYUL7z91r76M7Xj8ea/rid0y
8GRk2ybR0U8XyMyUdVnUPNKVuUXv3XTNKbUV7B8PT2vOUUWbJ8N8TOJmB5GS
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
jutiL9I0bXB2RGVkpaqsLB1T8pFZ2Ka6PXqTwnCCJwE417QHiS0ZZmXn8g/f
WrDHiO/tf/ix8zsLxm71tAbXUicWhQsnvbP7VoMWLSDHTXo1htz2YnWYhdy8
v13w4yGMNZRvxnoMu/rl6dRfUR2nTxFJrnuI6HagE7Lv/3vLFCtngw4deUOb
q4vt3OVcttjSdshPl80dd/eWZIIDT752UktemPxPi5sMRuGHjhCrj8FRwxdL
2bGu2qNfhGhZ9MHfb762ZwXbso6uqlJjVl7Fqgb8/Jp7O3WKZimC1r23J1/B
4LplS64QgzMGpzuf6ApE9aYThJbnJp/q1isBn3r52eds13O/SZNaWslqeUF3
gtGVieory9IvSMlcIDxTtgkAAAAAAMAGDYVRtMHF1E2DGln8+cwjezC29zEn
fZDkVdJiicHxQBZaeURGRuYlfOFIutOneNz0jyaNLuu31/Uv5xppjQ4ZZaiq
jcdKKhxKz7Pmvzh2q9pe/5nxUZtMEhYdzn2zCypzCnPqDl0ZUnvj62Nua6hk
FdTlcuszzrkuz7viL3kn6XsRKiuKdJKkcjs/62i/e2/8k7sztjljVdse/l+X
6uB0ARsFawo0MjwT6eONuwzONXmSMb2vOyt2GRwFt6LE4EJ9DbJSnY02uLDY
2zI0ATiRl+nGzOxpvesH77bnITMXt9k0CYB2E1CMMVQamW5bduEpJ89+5x3O
edI8U23VEzp/Ve0mK5dPOXZrpvSZ1Q6uPeTSWbpnpXTbZETHTMMZhC1zY47Y
dbMqpVPl+/99zDIKklKP/cWS2srINJ1bk+Rv/+aYnStYD1Z92EsT38voVjA5
iqjRBQu4v9oYnJ44QP1DHNc3ubHZdMvVl5z7xrhngmyjdJa+cM8fyODKKln9
4OOvvMe0OikNDjANVIJi183V6lupDq5ocH7J4EQclEJ4IomSqt+MUu9M3NH0
i28fOmSrPV5+v7XRaKxu26J/QrYMstL11Wo2pgkCAAAAAICNAD18LZSepfvm
h5K3XXfGT+oY2/Pw4xp1lqFpgaHsgEq8qAzp41gG7TocReVVsUnts6TfeMul
Fw39zgmTA7mQ0uLI4MynnvRF1Cq93D1X3fidfQ5udIKcCaUV22oYB1J38lkl
I37ruH/c3LeapagsrP/QvX48t6XTIXXUwb4k4GPraBoVRun2j2pflonQyWD5
1Lt/05exhiFHvePoaQXU+YL6tOgYXLoQWbqrv9T6RAYX6z6SgqbWUaiOU2Kl
DIQe3cZlsfOGr50uQwansy6VOLqhkRGPTl/ks4s+OmCn7VmPrcaNf4/acOp6
M3XRyMMi8pS7HrrjoX8/bIWWjqzRWZuGio65mIESznlT/nJCH2VJDQPZiCve
sfVJykYKTioB8tSRLZx816W71Ncyts2W3zxvLgU31Vl8KKMPpEeZonlyJyWe
U6eMvoQyHtmQ3b51RLuX+K8jzAGrY1pNJ5PE4GIRdylYqM9X+ylvbpn+fP9q
HYOrHjzyyvvbjdwrg4uCKIp4N4MzvUo8105aUxpnlKY1aWnjKxpc5K/UuzKg
5FoKvErR3DH1oe369Bgy4lfj55KExxRcpVLKmNI9LckzInZzZjgFAAAAAAAA
GzSUTud7MlQm53Z4ymhyN1x0qnKn7448YWmsp4oF1IHDFKApg3v/uT/12qTs
9/c/kdVuEwTck1EcOAtem7DfoN0mfZD50FTPqdv+sD3gnWndMESKRplp/dZu
B91w0yO5WN2yu1wKoxWxmYZGjTOsQDa3T35sxJapGrKP/qxqxNgprU1B7JgJ
a8Xm/Lqui0SMwjZKtyIayGaboAxv96eOPnrvXVm/74yepWOIrlBnF5JoqXPt
ULbQ6eip0RSMaqMYXMBDn6tzoEOKZKedDASPSV4Ej1c0OL0Tan6izsqLQ+6S
pbnN0kn/31FH1bPKs2+4vSknTY2cKZSja+w5MrQnfzjlg9xSiuEFeiS2Vh1T
fkg5perscx92PPvrLZWf1Qxg2/7mjSxlscayidqkmE6Une8cP2RoH6aWGHTQ
hTfNodhbnirjxFKabhCYOB01lmmb8fiwzSicl9p0x/v//ZqVlPCVJt6tOQYX
lxq96DYmZr3YklFT+7RnBlRpg6vZ7ugrH0ybTpQiKA3vNrMKaC6eKI7/Fh4N
IAi9OI6dICo2fpFc6IxL9RF12vRj7hqDy1q2x0mv1XdiJK6TzK9V5p/7961X
lrPhB//sjkbK6V0Wys7YiLCvdkRDzV2j8AAAAAAAAGzQ0L061Z0Feji1P2Pa
hF232qyasZ32+dbUJR2mU0SsFSPQTf4nPj6qvJKxyp77/+CkmVMWRjGN7Jo0
8Y1rT78sM4c6jTRKuVwIuvl326XMt9JOLNk5a87r43rUbzfunYVmNnckw8QK
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
1hzE4PKLRfq5iWNH9Nv+cKnrH/nrX7YHy1De/hitet8r73o+hXcKQw0u6YK0
zPIQC5J6tJncd8JY9epjF2sJ7fif3Vkwxaopb+5aiRXqktto9eUMzgMGB5dP
TjxdGvWQIdKuGkcVUOHD7Wb0HI637RmGm4fq6D5mzqRcixy0dgGDZ7nVYs2M
g3epr4EWs9VaYvT4oy9os2jPEBQSwyRGgcEr+aYNFqxkcKsmTxg/Rtti59fa
4R4gBQseBTmcHXiaHjgq0dWpUkYtoXrU+vhfw8OtQG5L49TJewwaWKn1O/Pq
exbDXIa0WAdyf9EMABto2fKXboAtnJWDtfr9LvnH22iB54u5lItVJnEgCpaT
8cAiKky657ptNG0gJGht9au7XllBx4EUJto8s7TTFs30JXPW83eepfUf8u+3
m8FAys265vS9IWGxZq9tvnsFphB3+D3ZkL0kGcCEBMYEjgk5aK0P/PUcVWkw
Pvz0G/89WzLHokdJVK4pcpBqmc07mGoGRS+zWDcGhkmH4TJFdvEfT/j6aLQk
B+53+ieQ/YX2s5zqdkpOolZJMxw/++Gs72z5tU8Wr1pESadu6uX7bpQr5Y7H
38C9XfLZ2w6RNi+wHclw8qhvnhea8dKOL9Iv+awwm/52+c/lpNhuz6Mmf9bZ
Bk8TmhGo9CFXR1+E0/NIbExYSwxuzwpkcDVHvLXEJQYHjZ3lmBjS6vRQhFr6
mmkHjIontJoR+//i3VYBwVVvlZyiKYyE+kbfd6ptZAxOzWeKwVFrCcfEds/h
TrGQxHmULiDMFjHn5QMGVWhV9T+44ylooqmKmMiBQ05LNirWupQy0hSdc+cs
2Klm1+f/9mYGvF5y8sy541cHwSVV7z7i5Js6wd8kl2+muZe01LWk9TSKZfJ4
p21xxHdGjG3MLFpSnL7fXsNwx3dSa/jayHE/W9ZM8qctY6dVeU8pfMyUSaWr
ih0iNeX0b+8SG7bHM7OhGnF2yr+2pt7Usa9VanvfMS2NoiANaR4ubTGTuilr
0rzqhBnR3pb553/+e+z3T6IKVMmYdt75Zz37/H8yeVu1EcP9cS7k1ViR8cTk
SP2tey49ZSB8sRr2xPXf45npKWxx7kDDShvyPy0VtkOm7cydNfVNrWrkKWf+
IY/VRkzlFrPJBnBD4g1XCA7DwF0r+UvBFKr4MVaYWXLdbyeCBqzZ6d0FUMwn
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
ryfcOeNuOAe8jmu33uHUKz9UdsMCLPNqBSfU9zjkQu9Z6BzttUamLbzLzzln
t8ZhL74JnkjQlJjkHyJArLzonHToSPA72XbP0xZj1kiIIZZDLcTuR925+ad+
59svvvi6nD8UuyGjllRsrSGWY3Lk7Wf6VPMWLNJLRfDBLdedl0nJi2in4y/6
83zMNOOShwytS2O2T301xQrOX5OCRsz/ACs4gRaTZMaSSZMmSe0m2ySFXZt8
8c4771BGyk2wJNwqFZy/OP/eGDmlb27cwcjsZ6RHXvCLP7TPmgJhYpGwC7AA
5oBoavPE+9f+8axGmGwM33azL7/3gdlNS/qyuwqTAd1AUsS52HGpOAU7O2/6
hD23HSIHmuNOO6fFhbliq4oUDiFU311mt87+wl6fNaqG/vBXN1GtH0v2jVID
4nyDlt+Elxd+y4oZ40498mCjKn3wiT96swW+CifG7e0TR3/t8/s1GZkfnPPj
NyZNL6CzkBovQly2xrn13KkfbjV863Gv/DdnBU7s7QZdGUwcQtdTP6787cHL
PTvrvZfkJGpoRgqb3c+99v52/GZLrRvDUOhjanaXEttD8rScKCy+/LzjIBy8
BtIODmpuhLzxVdXpukZYXaiurYLM8bUpWOYcYlRtla7befSYiehbKPIli6xv
QVwGr1hUYhmLHfhaaIA/krNYTHpml1SDMfzAx6Z34yTECQJKZy1Z4YWLQpFb
PH3ivrXpppQcI4ZddO39yhPJxTJqmPbZRs0t3Oz0p+7eXJ6nNOR1NTL73vb0
9G7yRbHRdQ9WuuXUpNNrmXLwnlvWk13PaGyub7rgvP/31ntvagX69qS3br39
jlRm6CWXXBVEYXchB0ekXEMdsDHiGaXLskSh6VLL2yGmEXHc0kcXHD0So923
GPblM95eEeqIwD6AkyhVCwBcXmHYQnOhI+zlE/99E4TCpRtHnXp+i49nUt0n
uoU9LdbkI7S6Ixe8yArZFU4x9+iD9+60VXNT2hg+uPnZZ172oIYXxjQEItCK
Sdng1I1B2flgcUCo4m70AhVcx7gbf4CL0ttufdofQZsHbYH6qhyuVZhlRSiy
y5a+dcyxX5LX13HHXzh9JljPc5D+vFvuJLSu7XUunnvSGScZgze/4Hd/K0Qo
J8FjNpRTRahvBye7/aaLvze4ythyxA7vzMt2oEpEJ7gSulA6QZyTHOdgsNtF
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
iSLb333uCtlUDbuc/EGHQMfNNjtcKr9qziPn1hqZ1PZnTbfBuleSM11IzZF9
/v+zdx5wUlXXH3/TdraxsCxVUBEU7LEbNdHEf2yo8W/XmKYxaiyxpahRY+zm
b6JJbElMw9iNBY0l2LuIoFKEBWkLy/bpr793//ec++bN7M6iYFQm4ff9jLg7
8+a9++57A/c7595zbv/BsKg2ZrujX+0UbMWrhNfOhkVKeepR+26qaSOpLN/w
bY+/4h2L8pl4ep9n9emOYVh5FVeUV+KtB+8aGZWiHdHidYlxk99vy2WtcI4p
JTMxOVtIYHCfaoym0uDkr7JlhUy7cN7t/eDhyVtN2O3g77XmaK6q7CIhlgm3
XSWn7MuL+bOf33KUVhMdpsm/XZIUfqPJo2RwDc3xIVRUXv46IqE1DZu0/3Fz
17C9fRJFyVGGT1U0zy2YztJf3vzDCO294awzf9nTTWKYM7Ou0A1Xtz+Pcgvr
R7VlMrELFAnme36laH/x0gtPadx8p3+91sZrL/O68OU93y3/WpAK55g21sEB
AAAAGwIY3EaIqh0gkT8cffTRWhk/+tGPRDHEFuZ8eO6558IN5Fs+3Tx+H53J
xHa8YJqkm1IxuH2HJ2q0IVfd+WqXsjXL84NgnCn8jGdnbJXpUToop/Eng+ta
KZa8fNzW2x568vWz1DNkcJSlRK30E4VuoadvuvTK/9n9wHmcV4SzPkoxMmgC
Ge2966VHLqtJaCO2P2FOt8hScC8j90BxuH+c1lgzrHGXC98vyCF3kK9PZLue
uu3k4VKNtzjwrTwbnPuhcNt0OpmscLuvO/9EaXAjNC02bItxh148jzNScgwu
5/PCLgpH+Y50WJFa+buLziH1iSW1+PDDvn1Bt86Fuznc5lJ5ZdOiZWSeWhj3
qV2XoruFHqfS4KTIKHqWvTZt0zpt932OfHUVpeynk3JMry/DFRB6fcolIs74
3neld44fvcPv//TXPmdNWqwxWfVefPzV7x/3LelzDUPZ7JKNUoxvuPNfnflP
Uk1AXr78Gi4M4ZvLl79+4GGTqcZD3dBzz701naHZpVkr44p2R3T6KmhZZVRf
NYFMJq/SjUqTmyMK7x1z8HGbtezz4ktzVXZRiggWqPyf7HDL+OybAwAAAIAK
YHAbG+XylU6nZ86cmUgkkslkGIl77733RFkxAsnUqVPlHRKPx8Pb43MwuJxB
yS1yeZ39jDOZWGucnkVfHBZPxJqvnfZWJy9icylfo2CNk2LTy7MQOUJlU/Cl
O8eJ+s38sn9Mm5xofOrlpSuF6KDdS+1I5R1efaY7NCewq3W3rXe5/MZHPuRK
bBSEyBWkKRnsVMJuW/zqH6RG1W1xwHyTpwgafcLrSbt2z6Pn0wKvzb7xXpZq
n9FUOM6Q+djNJ43RtJHbHvJGQayhmN1y4Xek6WRyQnRfe84RW6gYXGLMlif8
8n3OSOnbGSmGFHCRpkFCSmEZUVj20rSbKeeJFteGbKo1bbmokyqxWYHkSkdR
pdCcT3cWZRh+VeJWCsb5y8z2hftttUtzbMsH/jVvObU87YtelUiFpnfK1uVe
e+OFP9TE6w76+kUdbSpppezNTt1PObYqJ+fd+ZufD2/UaIJldIhWu/XWe5wo
e7XzE7Q/8PD2hR88uP2OSS2mRROjDjjk7ExByOtbkIpPt0Te9a1MuvDpzjL9
VKi2it55+ZngrKemJ3svI/QFuTef3rJ29OR9TpjRbnFiH+luTloV73M3WA5P
AAAAYGMGBrcRMqCi8XnnnSeve21trboBDjvsMLlBGIBTxeMkdXV10Wh06dKl
uq5/ihn81qWagFXoEVaP8Hs6W9/YY3hNvGbkj299diUbnGdYlFKSS2B3LJm1
7eRxZ/7w3NZlq21PZE2KF3gil+nr/N4xJ931u7/mcyqJvef5cm8Zw6YNKGmJ
0bb6ubuGDdvk7+9TMIl6R7cpw4QjdE8YnjzEqjcfuL5e05q2/uosk6sDULUB
ipXMuf0MivnseMJ76WAqX8ajNXQP3nxys6a1bPXlOXIcTA4oh9+p1ZQIImWb
K64844DtNG0sRdZGjz/6hlddmoHJafAz0jUcymrJZePkGwsL/MWvbT08OSzZ
qEVHatFxdz09t5dCIEKt/uNoncl5OD+ta0KEN4lKY1J6wZhx/H5fHqLtcua5
9/RStWx5Yjmao6i7lN6CqrDJps38xU/333XPr8xvo96kUtrUBz0qHQdpsy0b
3HHJ2Ue0JLUaTYrcxMaRX3p7hd75CRoq95rtyXW9tMduEZ48OWyvL/1gSZvo
s2lGa1r0GHyPyO6kLByFT3KEz5S8Q98QWNI2qZOpzoXu8nU3s36mQ+gF2Wzd
dbNuzldh1s+YXsonkxdmXybv8FzKlMi9+8DvrtFim+118jU9NN1T3vZUZo++
/fBXfeYNAgAAAEAFMLiNEBVVEVyhW/65evVqdekbGhpUiYHHH39c8BjesqzD
Dz9cPh/eJ3Pnzv2UG7P2it5qPqTn06iW6sE5nQ/96ZeTaUJh8wkXT2vVVRRA
+DSnUIpWT+/yOZPGD6ekH2Mm/OWuhw3WnJVLZ5zyw7P/+cYylws9+45OeT88
zj/pktBxqG/xH887/EsHHjHdFYaUO6pfxmWydSdvuTQnML/4wWvPGqppNRN2
fmhpoZ3aKJ/sEpn0HWcfkZRmt9WeT8zrXZIpLuay2q/9yVHJiDZi4hemv5Hv
zFI7DTtXoGQaGeEsv/7sg7ZUBhcdu8nRv3xPqHyVNFlUGhxdGwrDceDLeF8s
fmm3UY0UH9WGa/HNb7z35TYOInL9bo/iINJCXZsrmn9qhNZW/kOhUHju+m+O
1rQR4w56ezXNR5XnmzMzWddLc0lxtzctCm2i7ZWdJw9/5KmZXRRLFbxaSifX
clK8kbwQ8oIuzy1/cdOE1qwNSWqThrXs+8rS3CfJFOmuEIUl3zx87yQF9Opr
ajd/fAZl3pCXPiUoakW15jjLpaPnqjDzhjR60+SQqinShZSapkjVIzyTEuzk
DJe+QTBNSgHqfQ7Z+7len039RzlN+FPgdnd3zd/ti3tqkeG3Tvtnhioqqlig
1PCqM2IAAABgYwAGt7ERBtfKi8Tdeuut6jZQd8IOO+yQzWal5b355puJREI+
k0wm1UsrVqywP9Wc5mszONNVRZ6FZRc8K33gvjvXc/LCUXSTDtNqdtRqtq1t
Gv/cE08Fb/Rywul6/YV/bj5py2hdsxZt0rTRJ/7gly89eb1Usg98HrvrBVIk
kjaTSlGzwRnybJa+fOL2sYtuuPkpOjhNsBRWnmSL2/DIo9Oks0zQtJGyA2pa
tJFb7nrSt1Z3fPjkX24fqWnjpE/SDMekltwssvlXX52z+oUnHxmmaXVRLvxW
K7Vv/JTtj1veLris3eo87b/9qtO/MlnTJsbY4I791ZvB6jyaLFo0OErRQpfI
fFe0vbZTU3ysVhuTBlcz8fdPvbdSiDVcSY3OXeqbpQzO+dTntIWyT43T9Y6O
jsOitHzv3GtvW8Q9xTWdvQIvHsxSSo6Vwly47F9PnHHCBXnK3kIyUjC59IA0
OLpGqni3NLilwmn90TGHjNWaGrUtY/FdXvow9+EnaKJ7/z23nD1ca6zVptRq
219y2Y3dVleWa9JleQas7gvLtx0nJzyrCmdRWqLdcTgTi00pe7o8IyOKExTT
PcIIEvgbosfmYnufNb7w+vhGpHKKWWpAmhZpmjdceiKt6xzzxWeWcrzY7qTM
PCgIBwAAAGwIYHD/rYQJ/03TLP8hXNCkDE7+Kp83DGPPPfeUt4FKTSl/uPnm
m+VLRx55pMYVB9QiOElra+unXtR7o8IUvZbXfvk5R49T9eDiIyd966pXfDUz
M0uLoVQKFymbvkHREP3d9Kz7Nk1SQkctNkFr2P3hBZQ8xOHpk5yx0uAI3iqH
/tRFm/Hi/TN+du31NDmxmeJSjdqQX1z8m0dfWNDmiD6fQ4tmmy86MnnLtVjB
XGVYOZVGku8bR7hUWc/i8CYVepN25Sy7+MzDteghWnLHNxYspsNTpJJWmrkU
/jN1KsNH7//gvbmtC+batqkqx9kU+pI3Hy9ptIP0Ma7ocsXin59/3Eiy8iHj
R+00Ly3eC5e1CU8laAySkfo0v1T4eZeDa32B46SFtSI/8+Y9aqXaS6nfWtv6
gFcWGlwjXB6mKyW6DZ6YaNFbDIN7X+oSz7n1KMppFmh6JU1YpVWEYR15lxKJ
WKrcHpcvt4XZKYxlrz/+99/+cdoO/3v2CvqGwRNe75y3nrv2xhuTDfVJKoyg
/eqqK+9rFUtVVQR9hci8JYx57z354J9/98eGRHNMS2g1Q6eedfk983PL1d1Q
WMHJVWzfTamTdlNrhLNErH7zXw9PP/77Vz44c027Wt1InWH7PHfXzHRSh2RW
PnnfH6+6/sYbpj3dq/aW737juSdO/uYJDXEqubfjjts/+MzL3Rb1h7ysuWLC
ToeC20H+y7IvUAhV8E92T5ZCgPRVhjxLjoHrfc9cN5nmUg87+qoHF1Gojq61
nv+sPy4AAAAAGAQY3H8xuVxOrWaSNtfX16eetG27ssiX5IEHHlDhNklTU5P8
86GHHlK/hjXjpMc99thjn+s5/NeRE2ukrl117nHjVT24+MiJJ14xT6h1cDnh
5T21/I2cwrTcgkjPeuOe62rlh3TIOC0xZfRe32wtcHIVj4NMBYrTGVSLTY70
V62YNWOvCfsmtWG//cOdK+xVvaJTvjjr2bd22WoPLT7suDMu7bbV6rmM5S9X
g/Myg8uXDI7mcNqBwVFei5Sw2rrnPrXzpBppcM07HNNKVbhNyrtpC45UksEV
HMPlEJuZzfvklZ7h0Gs6BTUpNwbNXOXtuQ1dZvrlq879+rhEMq6N/epBZy2z
OGYXZOsoNziPhMXNCifn8Emn1Da0RGvRnRcctikFZ0dq8c32O+dSCmVSXWy5
SUqn2CSpCFXXE2bONQQvFrRt15MN43MMHq5lm5QOxxVq7q6acWuZhb7la5b/
4+H7fvWLC0eqYGu0Ya9vXiINrjuTOfnYgzZpqdOiUWnX9RGtgQsmaJO+88jM
AtdnT1lLX7rs5EOGUA6aRI2WaNSi9EGKN2lDtrzsr0/SNk6e46bkuPl8/pmn
n39h+gN7TYiMUruqm/zXF5Z0C0oqogzOEZlC5+Jnpj9w1ikntsS0YVF5WySv
+MNjcpv5C1qP+to+8l11carSIH9IUDH4oededkea6slRxyqDs1VxvLUZnEm3
X54Clj3yfTT3mPLw6GLF9BN3S2rJem2rQ2es0nvk5fA58AsAAACAzx0Y3H8x
arpjmJJCVRAIfzYMI4zTqZeOOOII6WiNjY00UI1GN9lkk/r6evVzaHB33333
BjmX/xo4Z0nPJaceLr1jvPzYxUaN/fpP3vRUDC4jh/RUm5pmREq50nW9Tyx5
ab+tRlFJ7MQErWnX6/72NEdSu9U6Pjm2p4mgpACrFr5yzyTy7V1/9euHCtJI
RG9adOhOQejekldep2psTWPP+Nmdi7sFe1e7lCwqe742g+MYHEXRKNjXKw3u
wd/9lNbixaYeeMoNfRS/NSkhia1K8pHBGZ4V7M1TifvZ4NgZs7w1lVmnVCds
E/4q4c26/OS9aI1lfPdr/jq/l7bpMoOEmo7aQ3GGrUkzMKkuALUwrVzD6THm
PT0lrm2p1ddIg2va4uElSyiURVHGvGV0yaNkOf7ku9J05dlRjQPDDqZSuqbF
muzQ5FOeDKpicFLkKBcop/dvb1tSUxuTfzsOj9L03Qny01A/YrMDTr33rVU7
7L7ntNuu71y50PCokY/cfefWo+pJ8bQpO375m722mP7U46ObY3+67ca2Faso
laTht7390olf25U+TENGaxP2fH1JJq/6Stg9XUvlp+++ex+55bqfj9W0Mcrg
mra7+9UV3UpXZaeleuYveptzv2h18kWNnbF5zFV/m/G3Ge8fNPWIV596REjl
953WuW//5MxvU9Q8Go8M3fbxlxelSfNFIYjBuR9lcDYZnEnl6eQFybm+MjhT
GO/88dL/pUhwYsqPbv9HmufHIhoPAAAAbBBgcP/dqJmT7e3tL7744vz581es
WLFkyZLe3t5wJqTLqJ9nz54dhuHCaZOK8PlnnnnmU0xEuRFiU92AnuvOPn6C
po2mjh6z7UlXzePJgVQxgQoK8Kjelb6Tz6baTzlgvzryphatbsrPbn00Sy+q
iJvexak1e8i4Mp1Lnt1v0pBt5EVLHnzfU0t5Fx150cVz9Bz/w1mHfmF0hFJ9
7PyvuZxjUHSQA1oc76PDUQ1xqzSJkSYWul6QA0Q4vaJvwXcP3lEZ3IU3Pcmz
53gWZVBU3dP9nKOMgHzQJz2kQBftgS1BJ91UOmBxvXXZgMKb+20VrZVmOeW7
z6/hinjOe0HpM+VWIlgLSdvL1joFn1uYphvQEXb7S3dc1EKhMXnaY+u23Osf
8z+465///PNv7tiiaVgsQaGvZKJlWGTMnbf94ZVZM6SEmAVlkMX1cJ5spwpD
eqrone0Lg89bRavMQh+7pPns/X/YKqFicE1a446jv3TigmWraGKnV3CoELcp
8t1/vuGiZlr72Khpw4889cc7fu2IV+cuUJEv02avzK8QK18ZHeEFkk2TTr3u
3nahpnDq0jNt26aQoZv/wy9OGUNzMqNacsqdM1q7ymJwfpABNX/jlRcNZYPT
og1aw5RjLrhxSVs3Le0kJ6dJp51LZm0xuoGEKzJ+6onn9TlUis8QKgTqfZTB
8TMchczJw/mqTLw8AXvBS/f9nP5SqN9y4pe/scajHVowOAAAAGBDAIP7b8Vx
HKVaStBef/31PfbYQ13iaDSqCsBJ9t5773POOee88867/PLLr7766qlTp4Z3
gtystrZWBeCkwamb5P777x90EiZYZ1JOdsU1px21DYdaNG3kdidd9Z6g9Ow0
OHcosubknc7FC2+57vJNWurqyAiaTjn3yufeac96QrflwDtVEJTeMiNURndp
UovnPf/7MRSXSWgjvnPb9FYzlxbuSrmJTiPwvOiZ9a2d6ym2Gtn+ir/NS1Pa
ypXC61W1v9jg5MjfHmBwQX05S7pSd2b+c5vVas3yXqg94rbpiwKD8xyaIlmM
wVH2TI+ao2JwyuC4hYJnPhYsj9a/sUH1CH/RonfvT8a1SMPkS299Z5nDa8dE
q6u29+3Q4IqZOXXZSC77J9IWn3XfgquP26U2otVI2UlM0homf/uKG+//5ytK
0lyRTzmrn5x+/65bbFErW92gHXzY4WtWUNKVXoOKZZMb+lLSLKqUbdDBpblZ
nh8opJpvKNVFz8njWsve3We0Nk4KTHT42APPmdEmshQ+ywknZ7gqINiXWvDi
bmOiwzWtpmb4+D2nPrsiv0aILp/qA3IQTfbVSlGYfcPpX2uW6pUcu/t3bphp
qbOU9kaTnGkOqpd/+i9XBLMoayZPe2m5FH6qDkc5PXUyOL1LeNlXn36gmcNw
Wnzobidd0sohNr+QtnO9vPIwK5zuU47anz7ktZOSI7+wuMPJcA+bvv/RBhck
U+X0oT6VGuRusKVBr3jn+dub6YucFq1+xyff7c58DtXpAAAAADAYMLiNATVb
MpVK3XDDDeXr2qKM/LWujuI8SuvUzRAqXjiFUr3xpz/96YY+m/9sXKdTWJ03
/fCkLTVtExqlj9fqdtEattcah9ZzVGVIskEqifx5aIzmy40ZsdVbsz4sqCTz
rFe9Zkde5HsoKCUMyrTYKZy5C1/8cyMFncZoI77x2+mLyKjcDhVWE2aPMN4+
f78mDiHtfMSF/+DKBT3CWiPUlEKPSxL4jlWcaBfE19S6sILUga6Fz02TbtIi
b5xhxz88M5OnYb7B3lbKZEIlzVyh5lWqOZCuCrjJ/fnSgzKU4FBNs7TbRO6V
H599qJZs+eK3b+o0g9wfeQ5FUlDMCwyuGC/zOMBEs4INn2NSbl6smvnNKVpE
OmBNo5ac/O2Lb2tTAS9OdCJ9qeC3eYWVItV20tS9Y/w9xCYtuz320nuqJ7N6
KQkqlSwvq0JI1msVXCsvfIO8ztGN1jf3auZ1izWjRh103mLuKF7Wl9e5lDoV
hS8sOnqXFp5IWbfd4actEmIZW7YexuCMdpGaNeOOCxo4qDr0i6f+qy8wOMPo
9osG98ajv9k0qtbBbf3nF5aGsyil1RpOLwf+si8+fpdszHBplLFhh19851Ih
OgtClQVkRSvIq3/vby4ZTjG4zSJDt3n+7aV5rvuuu25xFqU3mMF5GfUT16Zw
1b3gsH6KzpWtT25aJ29R+TfDdlf//Z1VtBf9M/2wAAAAAGBQYHD/rchBqRI3
z/PCH3zfnzt3rgrGqTVuErXwLfwhxqhn5Dbl94b8+cwzz9zQZ/afTkro7ded
ccwUVQ9OG7nzt697X46PSYBSws0VUpl33nhr+t1/Oe/UExIRbWQyGZNmVjvy
jvtfWWWJbsoTKMfNOVOVNtMNCqX5y6zeuddeelljbMJ+F/3jnW6WstQqOQgn
A9Lbhf76ybvyJEBtp2MuemI1B8XIbnyvaHA2Z61XBudxAT5KNshxOFM4qx+5
7SKpDEMjZHDPLuRK6NKhPMot6ZlkcIbIkw4WZ1EK11IGFyiY1DwOL7rK4PIL
V718S22DNmL/7820BMXBcj3CT60RKgDnlBuco55UKUdCJXQyYtGMA4dwsCrW
ktj0q2+ucdM8GVFwRew+K+PTusKMyHYte2vGpqNisu0NyTFf+OrxCztlU0R7
n6XCberTYdqWZbtOqbyFp4JPdPhCRqx+/4uN2niqEDF682OvWihEl84W6VHg
kvJSuj0i9/7FR23XQmGv5q2POXe2ECuEMhzPNNiVrD5htr77yI2bDZX7GaqN
P2RGN0fMLKoCRxFALrsgDS6IwTVuN+2VlV1SNuXbLXlWNmWFsVNSh1+ZPm1s
hC9HvOXwy+5aokpLeJZj5rhzCiK39Ok/XTmSPrSbRYdt99jz76n5nDqF5D0/
mKo7iMF1i2IojuvK0/+oKLvs+myq5+3thmibaLIXtj/xsscWUoqYns/pQwMA
AACAMmBw/93I8Vq4bE1Np5TjVcdxrrjiCnXRa2tr1Z/q15qaGnUbJBIJtRRO
PS+dTv1wzTXXlC+dA+uLK8fI5pobzjxuq+IsysnHXT5HjcCNDqH3cIk3l1NS
ZNpWzPu/878rvbpxSLMWHT9yl288+YHJGT8ywuviyXJydF3wRJptheqFtatE
HxTncqiAGBUs7xXZF7+9VyOX0tvx0LPuoeVXnNPRcmz2I4eKE7ihwTlkHh7F
lvIGR3YKi68689BmtfCq8egXl5DBmVZGGVwYg5Pu5LlFg+MYnFQbilXRGVFT
KdBF2STXiI5ZRx+6W82kKdOXOu3sSaJAu0yLosG5/Q1OBAbncpIR2qbQac1+
+EsUVWzUGrbddur5y+nEKe2l6xgGr/nKZHspBUdOF1bqN9deUEMxSvnf+Ktv
e6i9EAQ0DYdXetl2GIOTreSEP1xuwOekL4WsWDFr36FUCE+Lj570rV+97XM5
9UJKOKbaCV2O7Ow7zt6PQtfx4ROOvmAB1+yjuYjpNcJTS8ZkJ616e/rvaPZj
dIg2dO9/Lg0ymUiD83y1IC//zpO3j1Lr4Gqn/On5D7uCxJvUA6bPmVns1JtP
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
ftPKrk+zcH3T9ETK9DLpnrOO+tJEleYlOXbaIy9TiI3rLPTprK2+VONeu6t1
/y9uz8KY1OIt2+x75BpTKZ5O2T75Kwcq7uB3iML7P/rfPZprh2hDd7zn7UKX
bJXlkQYCAAAA4HMHBgcU4eRJleckdDRdp2QF8plCofDQQw81Nzffe++9G6yV
1cdHzKKUdHaStemFnE825GUzqWef+v3Jx+43lOqBRRKRoVp8RGLcNk+8/r5O
ddB8Sk4i7LSXW7y89fZf/fqr2+7SlNSSEU2Osc89+8LWJd1y9J02aIxdXLhG
y7w8vb1ryXsnHrgfpamPj9BqRmnRRjkmr20csusuO77x6nO+nbln2u9rE1o8
FtFiNVqkLto46vsXXtGWCwNwor/BUSIRTgjpulY+mEhpdT542zWyLZH6sXc+
MTuI+7iOMKQlSYtTZQl4OmV+2bTrLhga02KJuBbVKAAXi8cTyVgsITVM/l0T
iyr90GLJGi0q29Mg9eGSK2/vNUi6VEJ7N8f5M5yc2b14/322obWYZHDNO+5x
6Kpuzw6Wj+Vo8ReFCM10pnDVjbdqtSN+ctWNr816nxXMdDIdD/3tj5uPHHHQ
Vw6aPWuR1KyC7Vl+cJ4GlRpgg/O9oGJbacorbWIaVIzb6V15y+WnDVVNrpug
Ne7wu/tf0qmTdNfIqJhjZ9vq2y8/YwIpVUyLNmjRTfc/7NxZC9NZT+RMljA9
LQqZRW8+f9jXdm5oJJHVIuO//cO/vDu3lW8dMuXuD+f96aZrh9VoMRWDSw6b
uNNe0x59JudTs1VxcdnVKz5458wTpjZQhtioFhvWNGWfp2Yu4lREjmsWPF+s
WN1xw9VXSKOfRC1u0mpa9v/6tz9YVejhLwroxOTloihbr9W9dOcpm9bXSM1O
anUtO/3PUelsb1AT3Ja9KgVZ0KxWr9tZ9o/tKYfmZl8+7qblZKZdhux2FBUB
AAAANgQwOFCJ0jf5Z6h14Q8ffPDBnDlzNljLqo+PmEVpmiw0HNBZvWrl+HFj
I7z+qaWeFkvVU3iqTksM1+JNWqwxUkPDepKEeha2mNbcMHRUYuj/3XDpjKcf
WbRwgW0JxxNyIO+wgOQsy1Ul37w0iYyUrEL2kb/8pbZltFZTH29oufiya594
4lnL9B3LloJg6ak77vh1NEYectTx35jx8kwjWCs3iMFRBMxy3CAPpE3BHZsG
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
lwTgkugG9hmBomDb9qJFi3qE4SSjcsqUKQoBYgAAAAAAsJXSe68QLX3lnptv
vlkWxscee6xKyZ3coO9YJIMtTzo38txzz00+ZJAbRx55pOM4YRhKr0PsgwMA
AAAAAFs9sujN5/OdnZ2yKn722WeLPSgAuiHh4OXLlxuFjt4VFRWVlZWTJk1S
hdAwAsQAAAAAAOBjhW3bN91007HHHhtoij0cABi5FJNqqJdcconoW1lZ2WGH
HeZ5nmma8kg0nQcAAAAAAB8Tktyzjo6Ol19+WSEbDZQSkkgpIba33347aV94
zz33qO41eQAAAAAAANjqkX1wEuMQcUt3EACg6CQN5ZUOtE2YMIH0bdy4cY7j
SACOHoBLFwAAAAAAfExI9hDJGti2bYXKfqBkSCqZkJ3Jtbps2bK6ujopQalS
HS7okYgdAwAAAACAjwO9173ISQMlQlIKlRBHC4Lgsssucxwn2Rwnj5QPHwAA
AAAAANjqSUpASE4aKkKAksLXpO9JPnPI5XJKh4x7PAAAAAAAAICtmyRtEith
UJpIDE4VrlWRuORylTuxDw4AAAAAoDRJPnJP8qa2zP6XMAzprWXLWInkGcow
ZOEaaqIi0efWuSLup+u9KypJwysK6WFE+vqRy2mLT0w30jYk11Kx5ieZinQz
iyLOT3LK0qepiNdP4qryYzK2LT8zyTDS795jeEVB6b6WK1euXLBgwdKlS5cv
X75o0aIlRWLx4sU0gLfeeuuJJ56YPHny1KlTp02bRt8fLB7Tp0+fNGnSlVde
ee65506YMOHiiy8+77zzLiwSl156Kb37+eefL01Ikz6PRFlZWXl5Od2YOHFi
hJ2tAACwddGjh68UVNwCK4Q09KZF/MxfNDYdMiuRf+x6tJPbAudl0yfL0xR9
cpJ6iXKtFncwaSJtT6UwRTSMjo4OWoHT6ldW4EuLBy3CSQRefPHFxx9/nNbe
Dz/88H/+8x/6/u8iMWPGDBrG7bff/tvf/vY8DS2DL7jggglFQhbhxx9/vKzA
Kysrhw0bZhQPWvZXV1dXVVWl7ynieAw9J4me0GDoNt1TViQM3UWRSIYnP5YX
CRlDn9cMDA4AALZiolTUQG1BeaE3cjSl9i9LUqmviJAFdHZ2rl27lhbACxcu
pAXwvHnzlhUJGsP8+fPnzJlDK3BaAE/RPPDAA1OLxEMPPUTf//rXv15++eXn
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
wD0UBhifm/sWv05H0JwPWMc4JbUQg+OteK7ySBbDrO4XUUhzzLsicUFhW5xu
jR6rFdu0+cZZh1V+kifz4Ir9T54vr2k5Ks99AE3V6KpM3mTT1YHOZj6UIO6/
5/LZ4UYTsg/u3ptO3YYNrrbcOOj+Z3U3gZ5t2BKxYonjYiWWJULdTtdCpKxs
RoYdeLrspg786aRfh+tecmal5ebNyDdvu2riGMOoH7vvK0ubaHo7dRjODpKq
m2E6DBcVwnAAAAAAAAD0M/TqvSuLMsryPrjMCpUxo2Y2gRWpSiY+LbHtRsUR
n5xyOzggl1drIl20RK1VATc4y3PAhl41E3oZFcShEK5uQZ6VaVW5ziw/lF+Z
F9B5MqxmW1sHB27CtbqnwAbV8dI/zjiKDa5qlFF/yM4nXLliEwaXWee9+fdD
qozhYnC135ryso7xcYLfavp1D4MzzaznOdOmPThhwoXV5EKaIUOGnHPOOS++
+LLk773PFEqieepV5/zEMMbUDB339OxFLUqt0mEqHkFHexB0dvIgfJXPq1CC
m86br8y++YZraqorjDKjvKr6kt9c8dCjT+S9cNojj8955VWu1+Gzf61cOv/M
X548whjNvc4HG5U86nGG8VnudT7QMMqrJ0y8rbWdDjLjhY2BFzcXCN22Jx6Z
fMmEs2qrysoMo5qoqr/811fOmvVqU2suKBSojENyYcATa77xy4ONnfj1D6k8
4JS33JA31q1teOKOqd859mv8XlVGXe2wSy6/7unX5uooZ5fBOXx2uIu53rTX
SQa3bZlRz2VCD5z83Iq1alMGt75h9UMP/ftLX/oSjZGOp6528Cknnzp9zvTW
xg1Kx3HdkFN2M7rYp3LoOmqMVKMf6qopebVk9vSRNCl1Y8/89XWdOq8363Mi
ZVQIL8LgAAAAAAAA+NCJ98HlX73x50dswxIx2qjZa/fxp68Tx+Ta+06kLIdM
kxbufqj8VuWsmnn/FcMMo4IUZeie9Z/+2Uvtuo4KG1yr4k5nKlVq4+mGFx89
eofPGsYOl0x++iWXA1Uq27Hiwds+t9u2ZWVj/ueM2+dtYMHs5NiVksbgumJ/
GEsuv6mluOeaRfd0BiwLHDhzWzjkN/fBXeqGGsY+I/b6ztr2TldlMsrtlN1v
9P+RF/c2sG1lrVDe2xf8/sryutG33jrNsvjYW037pcfuP3bb6v25rfZOdz1j
L2FnIWtZqLx8JxfWn3Pd6UfV88xsbwz8xqxlBbENPZ266LMckxdbLcrvePW1
J7fd72yj9rArb5/yTq61U2VN1f7a0/d/awdjL8P4+Qk/XWir5dIBIeigmbT5
9mplvXTap4brLMrtanf58nJH3ffEQyPHjKjgNt8VQzimZgwdUD+YNNUwjr/w
b+8ofpG13GDCUeE6ZZOqh9ygQNl333Ye95Uj5ava99/Pr5UUWT/gCiQNetzK
Xa3sxXSIf5k8/bhTfzvjqWUyP52tTbfdcP6YwWzlB+1yxCtv8uSu17HAvNvM
gUs7y93fpHk59zII1fJnTzrAqK4oN7Y95KF3eDy2o+8PdNFKfmAm4PTLQvQz
TOdsAgAAAAAAAN4PuVAbnPPGzad+frgY3LCDD/7phPVicFy6JGVwlqPa1qj2
VeN2H1FTZtQOGmxUbnflpOc3aCvhLL/I0WmWvFGPq9CrjjdevnrvIZVDjO2u
v2XGAp1kyQU88mQEa9968p7BZfUVFXuc/tu/N3Bsyc/7umZ91N3gAt2VIMiK
wZnSGUDpJghq9XN/PGWYUWFUHfTlH/1Wm10ux9FHCURyJiRbA8sEGdPaO248
1ajf8fI//SvrqoAL5uvX8Sy18OUfbv+JQcaw+1623lKqic1stQpMTn/Mzr72
tM8PLBjc80slldEkUc3mOGeQvbWVvK71pSembDO62jAO//XNTzf45D5Rnjep
mcpvbJ55596G8Ykho37060nzaCyRNji3jbNeSX06Xjjz0G13NIwyY/ttDhz/
iyuu2+/Iw+6ZejcLT4brr8x+9IljvvJVMrgdSZkrdvvCiZcudJXOjPUja7XK
NHCGIxtcngxueMHgps5az1rtNeVs3pVHJ8OlufEblLfqD1dfts+RX1nVqbcs
6mYAIZvWutuv/el2hlFP4li505+nvNIkTeFp+sx2dvmA+/a1+7pVHJmateyu
C4+iAzbqdz/r9pfWcndBxdViAt3zrmBwcVBYNhe+792OAAAAAAAAAA0Xrgha
lfvmn3/1hdjg6vbZ9isnrgrF4Lh1WsQ9yCzddCxQzQ3fO/IodoTKYUb5iN/c
8M9OpTb4Hle64D7Rom+0aifhWrG2+bHP7G2MLKuoNPab8tQGMoJ25erCiYHK
rlUbXjlm/x1qjIFG3f7/eqOxnd8uI1mmvlavgsEpbn7NPmhJDMgKZbNVm7Ln
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
0unu2A==
     "], {{0, 752}, {1174, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   BaseStyle->"ImageGraphics",
   ImageSize->Magnification[0.5],
   ImageSizeRaw->{1174, 752},
   PlotRange->{{0, 1174}, {0, 752}}]],ExpressionUUID->
  "efb64408-4cf9-054f-9ed0-b96741e6fff2"],
 "\nComparing this to the decay diagram, the diagram says that Cs137 always \
decays through a \[Beta] decay but 94.6% of the time, the resulting particle \
is metastable.\n85% of these would further get to the stable form through a \
\[Gamma] decay.\n\nHence, for 100 \[Beta]-decays, one would expect around 80 \
\[Gamma]-decays. So the ratio of decay rates must be around 5/4.\nBut in our \
experiment, its around 26:1 !! Which is ver drastically different. I would \
guess this discrepancy is an issue with the apparatus. The apparatus may not \
detect all \[Gamma] particles since they are so high energy that they would \
pass through a detector that is not efficient in collecting them (\[Gamma] \
particles are more penetrating and might as well pass through the detector \
undetected.)\n\n(researching a bit about Geiger Tubes, I realised this is one \
of the caveats of these detectors - they are much less efficient in detecting \
\[Gamma] particles than detecting \[Alpha] and \[Beta] particles.)\n\nThis \
explains the discrepancy of very fewer detections of \[Gamma] particles."
}], "Text",
 CellChangeTimes->{{3.937243804558983*^9, 3.9372442604838276`*^9}, {
  3.9372442975029945`*^9, 3.9372443016580067`*^9}, {3.937244453358906*^9, 
  3.9372445661162987`*^9}, {3.9372447109312973`*^9, 3.9372447739190598`*^9}, {
  3.937244853365013*^9, 3.9372451166835175`*^9}, {3.9372452292700214`*^9, 
  3.9372452520489273`*^9}, {3.9372452823251896`*^9, 3.9372452964587326`*^9}, {
  3.9372453483477*^9, 3.9372453516450024`*^9}, {3.9373244523871155`*^9, 
  3.937324462914484*^9}, {3.937324769499161*^9, 3.937324975385748*^9}, {
  3.9373250290598335`*^9, 3.9373250469160786`*^9}, {3.937333883924999*^9, 
  3.937333993751463*^9}, {3.937334058485918*^9, 3.937334263141594*^9}, {
  3.937334375228489*^9, 
  3.9373344595035133`*^9}},ExpressionUUID->"698d4896-bbd1-e34e-9c5e-\
d8910133860f"],

Cell["\<\
Rutgers 275 Classical Physics Lab
\[OpenCurlyDoubleQuote]ERROR ANALYSIS II\[CloseCurlyDoubleQuote]
Contributed by Maryam Taherinejad and Girsh Blumberg \[Copyright]2014\
\>", "Author",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{
  3.35696210375764*^9, {3.4737249584528837`*^9, 3.473724963145158*^9}, {
   3.619037528327351*^9, 3.619037530606106*^9}, {3.619037579218363*^9, 
   3.619037625019002*^9}, {3.619037674522127*^9, 3.619037676514368*^9}, {
   3.61903777559944*^9, 3.619037825849731*^9}, {3.619038202649548*^9, 
   3.619038211101948*^9}, {3.6190382644927883`*^9, 3.619038271012796*^9}, 
   3.619038509204104*^9, {3.619038548907055*^9, 3.6190385570401583`*^9}, {
   3.6196370787264233`*^9, 3.619637086289963*^9}, 3.6204226737418003`*^9, 
   3.6207142454738407`*^9},ExpressionUUID->"cd1a83fc-4bc4-43bd-b01d-\
c1d976afeff7"]
},
WindowToolbars->"EditBar",
CellGrouping->Manual,
WindowSize->{1141.2, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PageHeaders->{{
   Cell[
    TextData[{
      Cell[
       TextData[{
         CounterBox["Page"]}], "PageNumber"], " ", 
      Cell[
      " ", "Header", CellFrame -> {{0.5, 0}, {0, 0}}, CellFrameMargins -> 4], 
      Cell[
       TextData[{
         ValueBox["FileName"]}], "Header"]}], 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, None}, {
   Cell[
    TextData[{
      Cell[
       TextData[{
         ValueBox["FileName"]}], "Header"], 
      Cell[
      " ", "Header", CellFrame -> {{0, 0.5}, {0, 0}}, CellFrameMargins -> 4], 
      " ", 
      Cell[
       TextData[{
         CounterBox["Page"]}], "PageNumber"]}], 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}], None, None}},
PrintingOptions->{"FacingPages"->False,
"FirstPageHeader"->True,
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"",
"PrintingMargins"->{{36, 36}, {36, 36}}},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"60e8423d-b5eb-41bc-a0b5-0e3435e07685"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Diagram"->{
  Cell[148941, 2653, 229683, 3765, 696, "Text",ExpressionUUID->"ddc25368-82b6-4636-9324-a3bd630613b0",
   CellTags->"Diagram"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Diagram", 1142249, 21599}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 257, 4, 96, "Title",ExpressionUUID->"a49f06ef-c116-4c0f-96a8-c2f5ad984731"],
Cell[827, 28, 205, 4, 52, "Subtitle",ExpressionUUID->"c44a4990-5ee4-4ef8-b55d-c8deb9f7197c"],
Cell[1035, 34, 555, 12, 72, "Subsubtitle",ExpressionUUID->"08859949-eae7-488d-9fbe-380272ae27d3"],
Cell[CellGroupData[{
Cell[1615, 50, 251, 4, 66, "Section",ExpressionUUID->"d7d9b347-d6d3-4dad-aa5c-ee3b5656c288"],
Cell[1869, 56, 1142, 18, 33, "Text",ExpressionUUID->"64434799-8d41-4b80-aebc-de3bc8fe5f83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3048, 79, 210, 4, 66, "Section",ExpressionUUID->"285c2c44-2a31-4371-b2da-4607d58acc59"],
Cell[3261, 85, 3197, 51, 405, "Text",ExpressionUUID->"9b1fa4b6-065b-45a8-84ad-7c2c6841ad35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6495, 141, 305, 5, 66, "Section",ExpressionUUID->"70864b78-d0fb-4d88-80e5-6528958666c6"],
Cell[6803, 148, 4411, 78, 143, "Text",ExpressionUUID->"70eab26e-ffdf-48fd-9589-836fb1b242dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11251, 231, 440, 7, 66, "Section",ExpressionUUID->"f5fce434-c87d-4978-97c2-30c5f3e793a0"],
Cell[11694, 240, 174, 3, 53, "Subsection",ExpressionUUID->"f337886e-8ea3-4062-a935-7667bbdf12e6"],
Cell[11871, 245, 113353, 1871, 164, "Text",ExpressionUUID->"bf73bf6b-3b0a-47b4-af1b-45859d1ac314"],
Cell[125227, 2118, 2234, 65, 84, "Text",ExpressionUUID->"257f13f4-c30e-4673-8ec4-a9d981b3feb3"],
Cell[127464, 2185, 4325, 82, 296, "Text",ExpressionUUID->"fead4ec8-851f-4047-8489-f0f1d0106257",
 CellGroupingRules->{"GroupTogetherGrouping", 31}]
}, Open  ]],
Cell[CellGroupData[{
Cell[131826, 2272, 198, 3, 53, "Subsection",ExpressionUUID->"fd1eceeb-e4c7-477f-a8c2-0029ab3cf899"],
Cell[132027, 2277, 2525, 46, 115, "Text",ExpressionUUID->"a17703e4-9eaa-4383-9a51-280c562e6a5b"],
Cell[134555, 2325, 3647, 83, 237, "Text",ExpressionUUID->"b73b9daa-ff03-4b22-8f69-2abfe58748d7"],
Cell[138205, 2410, 5349, 120, 385, "Text",ExpressionUUID->"c9d12523-3acf-4527-9dfb-dd8db84f629b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[143603, 2536, 312, 5, 66, "Section",ExpressionUUID->"fa71a5ca-dc2f-4a00-b103-f21e76d8c9cd"],
Cell[143918, 2543, 1635, 25, 55, "Text",ExpressionUUID->"59396b89-762f-4470-91d0-ea395d72d4dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145590, 2573, 311, 5, 66, "Section",ExpressionUUID->"c4a97bf4-8361-4ecd-930d-f10a29306d10"],
Cell[145904, 2580, 1982, 34, 77, "Text",ExpressionUUID->"bf3b0268-1e60-4b48-acbb-fb4f3c69e4ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147923, 2619, 322, 5, 66, "Section",ExpressionUUID->"611ca65e-47c5-4435-abd4-bf76d30c4d3c"],
Cell[CellGroupData[{
Cell[148270, 2628, 180, 3, 53, "Subsection",ExpressionUUID->"57066210-8060-4a72-b82f-1e482784e5cf"],
Cell[148453, 2633, 242, 9, 121, "Text",ExpressionUUID->"a64ff8bf-0ef9-4682-882d-b80f58b48b8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148732, 2647, 206, 4, 53, "Subsection",ExpressionUUID->"1800cc65-3b16-49b7-b7d9-9ebdec4996e5"],
Cell[148941, 2653, 229683, 3765, 696, "Text",ExpressionUUID->"ddc25368-82b6-4636-9324-a3bd630613b0",
 CellTags->"Diagram"],
Cell[378627, 6420, 4139, 66, 778, "Text",ExpressionUUID->"bfe86611-645c-40e3-97b0-00602436d9d3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[382815, 6492, 393, 6, 66, "Section",ExpressionUUID->"3e5f4198-aedb-44d8-8a76-a5a3a773e8aa"],
Cell[CellGroupData[{
Cell[383233, 6502, 858, 13, 109, "Subsubtitle",ExpressionUUID->"12529ad7-7489-4189-851d-4f64a6fe5bee"],
Cell[384094, 6517, 2712, 48, 121, "Text",ExpressionUUID->"c198403f-6fe6-4051-aca0-8938a74fd560"],
Cell[386809, 6567, 2808, 69, 123, "Input",ExpressionUUID->"39917619-cd1f-41aa-819d-3c5cdc2422e4"],
Cell[389620, 6638, 175, 2, 28, "Input",ExpressionUUID->"fedf2b2e-149d-4a28-bdaa-a6e5bfb09394"],
Cell[389798, 6642, 2290, 36, 33, "Text",ExpressionUUID->"73f22609-cc95-4332-9366-66014b1728ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392125, 6683, 1475, 23, 172, "Subsubtitle",ExpressionUUID->"9e025602-fdb8-4e4e-953e-deb47791c741"],
Cell[CellGroupData[{
Cell[393625, 6710, 153, 3, 52, "Subtitle",ExpressionUUID->"fc7b4003-83d4-4df6-9be1-ae95d7f99886"],
Cell[393781, 6715, 1338, 33, 77, "Output",ExpressionUUID->"4217ada3-cd78-4c12-ad4a-2039df937191"],
Cell[395122, 6750, 574, 14, 71, "Output",ExpressionUUID->"fee87097-1b33-4728-80e0-d56267951c0c"],
Cell[395699, 6766, 1488, 37, 252, "Output",ExpressionUUID->"f5a4b686-f7fe-437e-88c8-2d042a73ec5b"],
Cell[397190, 6805, 11354, 219, 250, "Output",ExpressionUUID->"9323e0e3-b37c-4326-886f-e711608bc5c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[408581, 7029, 45330, 1114, 2420, "Input",ExpressionUUID->"b5b481e7-b53e-4453-80ba-439b6c2325d1"],
Cell[453914, 8145, 351, 5, 32, "Output",ExpressionUUID->"59e2bd5e-9b74-d840-bafb-d98811fd8109"],
Cell[454268, 8152, 1614, 39, 77, "Output",ExpressionUUID->"cff716fa-2826-9f48-8a7b-f57cdc7875f6"],
Cell[455885, 8193, 672, 14, 71, "Output",ExpressionUUID->"81ba9074-a85e-a548-9f9f-4fe80e326352"],
Cell[456560, 8209, 8998, 217, 245, "Output",ExpressionUUID->"a4b3964b-f9a7-eb4f-9af0-7e98dfa44a0e"],
Cell[465561, 8428, 19466, 403, 250, "Output",ExpressionUUID->"04336262-4e1c-044c-a66f-143d170d7534"],
Cell[485030, 8833, 351, 5, 32, "Output",ExpressionUUID->"91ade60b-a114-644e-934d-f4c0c97d1f9d"],
Cell[485384, 8840, 351, 5, 32, "Output",ExpressionUUID->"6b0c568b-5523-ad41-ac8d-22d649b73292"],
Cell[485738, 8847, 1636, 39, 77, "Output",ExpressionUUID->"7703bb84-51ee-5449-9eb6-d29166ab6c7f"],
Cell[487377, 8888, 769, 16, 71, "Output",ExpressionUUID->"1b4619aa-ae6d-6345-9bf0-9c85c9504fff"],
Cell[488149, 8906, 9661, 230, 248, "Output",ExpressionUUID->"7f2459db-4b31-4148-999d-52c84e4f6a1b"],
Cell[497813, 9138, 20157, 416, 250, "Output",ExpressionUUID->"05bf4b00-8f82-f84d-b247-23d7c66635e2"],
Cell[517973, 9556, 351, 5, 32, "Output",ExpressionUUID->"fbb364fa-1037-9249-b14c-ace15acf9b4a"],
Cell[518327, 9563, 351, 5, 32, "Output",ExpressionUUID->"e385d2e0-0900-2745-857a-c8675e65554e"],
Cell[518681, 9570, 1639, 39, 77, "Output",ExpressionUUID->"76cc0140-fd51-6749-98de-a3bad49f6ab1"],
Cell[520323, 9611, 1151, 21, 154, "Output",ExpressionUUID->"e2787246-deb6-434e-962f-54d96360a008"],
Cell[521477, 9634, 12268, 288, 248, "Output",ExpressionUUID->"41bf9e3c-b0a3-0e4f-b4b7-d4744d3569fd"],
Cell[533748, 9924, 23266, 490, 246, "Output",ExpressionUUID->"7fd420a9-5db8-0145-82f8-f80575813053"],
Cell[557017, 10416, 349, 5, 32, "Output",ExpressionUUID->"ef705b99-34a1-8b40-81a3-7b2f88ae45b0"],
Cell[557369, 10423, 351, 5, 32, "Output",ExpressionUUID->"40bacda2-dafd-8843-b485-d18e4d2c8f05"],
Cell[557723, 10430, 1634, 39, 77, "Output",ExpressionUUID->"ef3b1e9e-9621-8a4b-8042-47f9816cec2b"],
Cell[559360, 10471, 1076, 19, 71, "Output",ExpressionUUID->"b75ce56f-2073-f140-946e-4efc1ca2f50d"],
Cell[560439, 10492, 11864, 280, 252, "Output",ExpressionUUID->"0d6fac36-2248-7c4b-b9b5-d0750aff5e92"],
Cell[572306, 10774, 22687, 478, 248, "Output",ExpressionUUID->"96ba57b8-9495-f444-b6d8-a1bbfb41fe08"],
Cell[594996, 11254, 349, 5, 32, "Output",ExpressionUUID->"948a69ab-1d56-e747-86b2-03809290f5f7"],
Cell[595348, 11261, 349, 5, 32, "Output",ExpressionUUID->"31b3538e-ea96-4f44-aaff-81e87c1f48fe"],
Cell[595700, 11268, 1637, 39, 77, "Output",ExpressionUUID->"2f67c79b-47a1-b34b-9469-c495b793b2ec"],
Cell[597340, 11309, 1213, 21, 215, "Output",ExpressionUUID->"e33cc811-0ceb-4744-9daf-2839e99f3377"],
Cell[598556, 11332, 12765, 297, 255, "Output",ExpressionUUID->"d6a8386e-9bca-d549-bbfa-f30613d0cb44"],
Cell[611324, 11631, 39433, 781, 246, "Output",ExpressionUUID->"4605db8b-5f93-eb47-9303-9464a71e9256"],
Cell[650760, 12414, 349, 5, 32, "Output",ExpressionUUID->"b6b31007-4e88-ca4d-9bdb-d59cdb640768"]
}, Open  ]]
}, Open  ]],
Cell[651136, 12423, 7436, 127, 645, "Text",ExpressionUUID->"e472d889-c1b7-a049-9313-ac1d2f95f472"],
Cell[CellGroupData[{
Cell[658597, 12554, 2379, 37, 215, "Subsubtitle",ExpressionUUID->"088a2d68-1a9f-4fe4-8083-5b2705063d22"],
Cell[660979, 12593, 1788, 27, 230, "Text",ExpressionUUID->"1a6da35e-78e8-40de-8ba0-0221b61d28a9"],
Cell[662770, 12622, 199, 3, 28, "Input",ExpressionUUID->"0d165b0b-3df9-924f-bb82-60115dfefe82"],
Cell[662972, 12627, 168, 2, 47, "Input",ExpressionUUID->"7ecb6fb5-6c1e-5c45-b667-7801388e9521"],
Cell[663143, 12631, 1655, 44, 99, "Input",ExpressionUUID->"cf84a15a-9f65-f24a-85c7-29c44e8c308d"],
Cell[664801, 12677, 238, 5, 28, "Input",ExpressionUUID->"f53766b9-e6c8-e244-9151-8a88e0124d92"],
Cell[CellGroupData[{
Cell[665064, 12686, 8458, 216, 618, "Input",ExpressionUUID->"8380ecdd-1378-d043-95cf-63f18687df02"],
Cell[673525, 12904, 459, 8, 32, "Output",ExpressionUUID->"a4140fa2-def4-8b45-bab3-b438d1a648f8"],
Cell[673987, 12914, 61349, 1202, 253, "Input",ExpressionUUID->"680816d7-799d-c84a-9cd2-01e745b32fcf"],
Cell[735339, 14118, 404, 7, 32, "Output",ExpressionUUID->"cefe0140-2284-c941-9e64-c7886f876bd2"],
Cell[735746, 14127, 416, 7, 32, "Output",ExpressionUUID->"09c35b2f-f4b7-9244-ab06-d280b3848adf"],
Cell[736165, 14136, 416, 7, 32, "Output",ExpressionUUID->"4574977d-7ce9-d04c-9eac-a984b42ce622"],
Cell[736584, 14145, 461, 8, 32, "Output",ExpressionUUID->"dee62eed-8613-4443-ad28-3b029a8ab896"],
Cell[737048, 14155, 60787, 1193, 255, "Input",ExpressionUUID->"d78654aa-5890-0d4c-8ab2-300d6f2ff87b"],
Cell[797838, 15350, 404, 7, 32, "Output",ExpressionUUID->"6f07cfb4-9cf7-8a42-b4fe-41a7cdc74665"],
Cell[798245, 15359, 417, 7, 32, "Output",ExpressionUUID->"c002bd24-8bcf-234f-9122-4203da775c74"],
Cell[798665, 15368, 417, 7, 32, "Output",ExpressionUUID->"462022df-cd0e-3a4b-b782-3cd18009948c"],
Cell[799085, 15377, 458, 8, 32, "Output",ExpressionUUID->"78d365f3-f30a-a04f-b1c2-eeb9d3dbf05d"],
Cell[799546, 15387, 82109, 1688, 253, "Input",ExpressionUUID->"84646787-2d81-924d-bf4a-e4ba245908e9"],
Cell[881658, 17077, 405, 7, 32, "Output",ExpressionUUID->"ea615ee5-2a57-2645-8f4d-266ded147822"],
Cell[882066, 17086, 417, 7, 32, "Output",ExpressionUUID->"d3d5e431-e141-0042-a472-63ca77237f0a"],
Cell[882486, 17095, 417, 7, 32, "Output",ExpressionUUID->"d94e1f63-c417-b04c-a854-279f4439532e"]
}, Open  ]],
Cell[882918, 17105, 1304, 24, 274, "Text",ExpressionUUID->"4b73ec0e-5a6b-8444-bccb-35cb9b0b6b07"],
Cell[884225, 17131, 3732, 66, 215, "Subsubtitle",ExpressionUUID->"5ac75004-1b6c-4bab-ab66-70f4646255e5",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[888006, 17203, 14941, 376, 694, "Input",ExpressionUUID->"1b2c3ec1-0297-6949-bd10-6a191264a7f5"],
Cell[902950, 17581, 7061, 188, 124, "Output",ExpressionUUID->"140b7f45-e106-7b49-8b18-41ec1e2d7936"]
}, Open  ]],
Cell[910026, 17772, 229903, 3762, 1371, "Text",ExpressionUUID->"698d4896-bbd1-e34e-9c5e-d8910133860f"],
Cell[1139932, 21536, 846, 15, 90, "Author",ExpressionUUID->"cd1a83fc-4bc4-43bd-b01d-c1d976afeff7"]
}
]
*)

